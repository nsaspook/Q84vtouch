

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Oct  2 18:15:03 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    72   000000                     
    73                           ; Generated 11/09/2023 GMT
    74                           ; 
    75                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F25K22 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107   000000                     _CTMUCONLbits	set	3908
   108   000000                     _T5CON	set	3918
   109   000000                     _TMR5L	set	3919
   110   000000                     _TMR5H	set	3920
   111   000000                     _RCREG1	set	4014
   112   000000                     _TXREG1	set	4013
   113   000000                     _SPBRG1	set	4015
   114   000000                     _TXSTA1	set	4012
   115   000000                     _PIR5bits	set	3966
   116   000000                     _ANSELA	set	3896
   117   000000                     _ANSELB	set	3897
   118   000000                     _ANSELC	set	3898
   119   000000                     _LATA	set	3977
   120   000000                     _PIE1bits	set	3997
   121   000000                     _PIR1bits	set	3998
   122   000000                     _PR2	set	4027
   123   000000                     _ADCON0	set	4034
   124   000000                     _ADRESL	set	4035
   125   000000                     _ADCON2	set	4032
   126   000000                     _ADCON1	set	4033
   127   000000                     _TMR5	set	3919
   128   000000                     _CTMUCONHbits	set	3909
   129   000000                     _T5GCONbits	set	3917
   130   000000                     _T5CONbits	set	3918
   131   000000                     _LATCbits	set	3979
   132   000000                     _TRISBbits	set	3987
   133   000000                     _RCSTA1bits	set	4011
   134   000000                     _TXSTA1bits	set	4012
   135   000000                     _T2CONbits	set	4026
   136   000000                     _ADCON0bits	set	4034
   137   000000                     _PLLRDY	set	32407
   138   000000                     _RCONbits	set	4048
   139   000000                     _INTCON2bits	set	4081
   140   000000                     _INTCONbits	set	4082
   141   000000                     _ADRESH	set	4036
   142   000000                     _TMR2	set	4028
   143   000000                     _PIE3bits	set	4003
   144   000000                     _PIR3bits	set	4004
   145   000000                     _RCSTA1	set	4011
   146   000000                     _BAUDCON1	set	4024
   147   000000                     _IPR1bits	set	3999
   148   000000                     _T2CON	set	4026
   149   000000                     _TRISA	set	3986
   150   000000                     _LATC	set	3979
   151   000000                     _LATB	set	3978
   152   000000                     _OSCTUNE	set	3995
   153   000000                     _TRISC	set	3988
   154   000000                     _TRISB	set	3987
   155   000000                     _CTMUICON	set	3907
   156   000000                     _CTMUCONH	set	3909
   157   000000                     _T5GCON	set	3917
   158   000000                     _CCP5CON	set	3924
   159   000000                     _WPUB	set	3937
   160   000000                     _PIE5bits	set	3965
   161   000000                     _IPR5bits	set	3967
   162   000000                     _OSCCON2	set	4050
   163   000000                     _OSCCON	set	4051
   164   000000                     _SPBRGH1	set	4016
   165   000000                     _CCPR5H	set	3926
   166   000000                     _CCPR5L	set	3925
   167                           
   168                           	psect	smallconst
   169   000600                     __psmallconst:
   170                           	callstack 0
   171   000600  00                 	db	0
   172   000601                     STR_1:
   173   000601  0D                 	db	13
   174   000602  54                 	db	84	;'T'
   175   000603  44                 	db	68	;'D'
   176   000604  52                 	db	82	;'R'
   177   000605  20                 	db	32
   178   000606  25                 	db	37
   179   000607  34                 	db	52	;'4'
   180   000608  75                 	db	117	;'u'
   181   000609  00                 	db	0
   182   00060A  00                 	db	0	; dummy byte at the end
   183   000000                     
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187   000EE2                     __pcinit:
   188                           	callstack 0
   189   000EE2                     start_initialization:
   190                           	callstack 0
   191   000EE2                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Clear objects allocated to BANK1 (128 bytes)
   195   000EE2  EE01  F000         	lfsr	0,__pbssBANK1
   196   000EE6  0E80               	movlw	128
   197   000EE8                     clear_0:
   198   000EE8  6AEE               	clrf	postinc0,c
   199   000EEA  06E8               	decf	wreg,f,c
   200   000EEC  E1FD               	bnz	clear_0
   201                           
   202                           ; Clear objects allocated to BANK0 (110 bytes)
   203   000EEE  EE00  F060         	lfsr	0,__pbssBANK0
   204   000EF2  0E6E               	movlw	110
   205   000EF4                     clear_1:
   206   000EF4  6AEE               	clrf	postinc0,c
   207   000EF6  06E8               	decf	wreg,f,c
   208   000EF8  E1FD               	bnz	clear_1
   209                           
   210                           ; Clear objects allocated to COMRAM (27 bytes)
   211   000EFA  EE00  F037         	lfsr	0,__pbssCOMRAM
   212   000EFE  0E1B               	movlw	27
   213   000F00                     clear_2:
   214   000F00  6AEE               	clrf	postinc0,c
   215   000F02  06E8               	decf	wreg,f,c
   216   000F04  E1FD               	bnz	clear_2
   217   000F06                     end_of_initialization:
   218                           	callstack 0
   219   000F06                     __end_of__initialization:
   220                           	callstack 0
   221   000F06  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   222   000F08  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   223   000F0A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   224   000F0C  6EF8               	movwf	tblptru,c
   225   000F0E  0100               	movlb	0
   226   000F10  EFC5  F005         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMRAM
   229   000037                     __pbssCOMRAM:
   230                           	callstack 0
   231   000037                     _width:
   232                           	callstack 0
   233   000037                     	ds	2
   234   000039                     _tdr_adc:
   235                           	callstack 0
   236   000039                     	ds	2
   237   00003B                     TMR5_ISR@CountCallBack:
   238                           	callstack 0
   239   00003B                     	ds	2
   240   00003D                     _TMR5_InterruptHandler:
   241                           	callstack 0
   242   00003D                     	ds	2
   243   00003F                     _timer5ReloadVal:
   244                           	callstack 0
   245   00003F                     	ds	2
   246   000041                     _EUSART1_RxDefaultInterruptHandler:
   247                           	callstack 0
   248   000041                     	ds	2
   249   000043                     _EUSART1_TxDefaultInterruptHandler:
   250                           	callstack 0
   251   000043                     	ds	2
   252   000045                     _INT0_InterruptHandler:
   253                           	callstack 0
   254   000045                     	ds	2
   255   000047                     _TMR2_InterruptHandler:
   256                           	callstack 0
   257   000047                     	ds	2
   258   000049                     _flags:
   259                           	callstack 0
   260   000049                     	ds	1
   261   00004A                     _printout:
   262                           	callstack 0
   263   00004A                     	ds	1
   264   00004B                     _eusart1RxLastError:
   265                           	callstack 0
   266   00004B                     	ds	1
   267   00004C                     _eusart1RxCount:
   268                           	callstack 0
   269   00004C                     	ds	1
   270   00004D                     _eusart1RxTail:
   271                           	callstack 0
   272   00004D                     	ds	1
   273   00004E                     _eusart1RxHead:
   274                           	callstack 0
   275   00004E                     	ds	1
   276   00004F                     _eusart1TxBufferRemaining:
   277                           	callstack 0
   278   00004F                     	ds	1
   279   000050                     _eusart1TxTail:
   280                           	callstack 0
   281   000050                     	ds	1
   282   000051                     _eusart1TxHead:
   283                           	callstack 0
   284   000051                     	ds	1
   285                           
   286                           	psect	bssBANK0
   287   000060                     __pbssBANK0:
   288                           	callstack 0
   289   000060                     _eusart1RxStatusBuffer:
   290                           	callstack 0
   291   000060                     	ds	64
   292   0000A0                     wdtdelay@dcount:
   293                           	callstack 0
   294   0000A0                     	ds	4
   295   0000A4                     _prec:
   296                           	callstack 0
   297   0000A4                     	ds	2
   298   0000A6                     _EUSART1_ErrorHandler:
   299                           	callstack 0
   300   0000A6                     	ds	2
   301   0000A8                     _EUSART1_OverrunErrorHandler:
   302                           	callstack 0
   303   0000A8                     	ds	2
   304   0000AA                     _EUSART1_FramingErrorHandler:
   305                           	callstack 0
   306   0000AA                     	ds	2
   307   0000AC                     _ADC_InterruptHandler:
   308                           	callstack 0
   309   0000AC                     	ds	2
   310   0000AE                     _dbuf:
   311                           	callstack 0
   312   0000AE                     	ds	32
   313                           
   314                           	psect	bssBANK1
   315   000100                     __pbssBANK1:
   316                           	callstack 0
   317   000100                     _eusart1RxBuffer:
   318                           	callstack 0
   319   000100                     	ds	64
   320   000140                     _eusart1TxBuffer:
   321                           	callstack 0
   322   000140                     	ds	64
   323                           
   324                           	psect	cstackBANK0
   325   0000CE                     __pcstackBANK0:
   326                           	callstack 0
   327   0000CE                     vfpfcnvrt@convarg:
   328                           	callstack 0
   329                           
   330                           ; 4 bytes @ 0x0
   331   0000CE                     	ds	4
   332   0000D2                     vfpfcnvrt@cp:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x4
   336   0000D2                     	ds	1
   337   0000D3                     ?_vfprintf:
   338                           	callstack 0
   339   0000D3                     vfprintf@fp:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x5
   343   0000D3                     	ds	2
   344   0000D5                     vfprintf@fmt:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x7
   348   0000D5                     	ds	1
   349   0000D6                     vfprintf@ap:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x8
   353   0000D6                     	ds	1
   354   0000D7                     ?_printf:
   355                           	callstack 0
   356   0000D7                     printf@fmt:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x9
   360   0000D7                     	ds	3
   361   0000DA                     printf@ap:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0xC
   365   0000DA                     	ds	1
   366                           
   367                           	psect	cstackCOMRAM
   368   000001                     __pcstackCOMRAM:
   369                           	callstack 0
   370   000001                     ?_ADC_GetConversionResult:
   371                           	callstack 0
   372   000001                     TMR5_WriteTimer@timerVal:
   373                           	callstack 0
   374   000001                     wdtdelay@delay:
   375                           	callstack 0
   376                           
   377                           ; 4 bytes @ 0x0
   378   000001                     	ds	2
   379   000003                     ??_ADC_GetConversionResult:
   380   000003                     
   381                           ; 1 bytes @ 0x2
   382   000003                     	ds	2
   383   000005                     ??_blinker:
   384   000005                     
   385                           ; 1 bytes @ 0x4
   386   000005                     	ds	1
   387   000006                     blinker@del:
   388                           	callstack 0
   389                           
   390                           ; 4 bytes @ 0x5
   391   000006                     	ds	4
   392   00000A                     ??_INTERRUPT_InterruptManagerHigh:
   393                           
   394                           ; 1 bytes @ 0x9
   395   00000A                     	ds	4
   396   00000E                     ??_ADC_SelectChannel:
   397   00000E                     ?___wmul:
   398                           	callstack 0
   399   00000E                     ?___lwdiv:
   400                           	callstack 0
   401   00000E                     ?___lwmod:
   402                           	callstack 0
   403   00000E                     EUSART1_Write@txData:
   404                           	callstack 0
   405   00000E                     TMR2_SetInterruptHandler@InterruptHandler:
   406                           	callstack 0
   407   00000E                     INT0_SetInterruptHandler@InterruptHandler:
   408                           	callstack 0
   409   00000E                     EUSART1_SetFramingErrorHandler@interruptHandler:
   410                           	callstack 0
   411   00000E                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   412                           	callstack 0
   413   00000E                     EUSART1_SetErrorHandler@interruptHandler:
   414                           	callstack 0
   415   00000E                     EUSART1_SetTxInterruptHandler@interruptHandler:
   416                           	callstack 0
   417   00000E                     EUSART1_SetRxInterruptHandler@interruptHandler:
   418                           	callstack 0
   419   00000E                     TMR5_SetInterruptHandler@InterruptHandler:
   420                           	callstack 0
   421   00000E                     ___wmul@multiplier:
   422                           	callstack 0
   423   00000E                     ___lwdiv@dividend:
   424                           	callstack 0
   425   00000E                     ___lwmod@dividend:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0xD
   429   00000E                     	ds	1
   430   00000F                     ADC_SelectChannel@channel:
   431                           	callstack 0
   432   00000F                     putch@txData:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0xE
   436   00000F                     	ds	1
   437   000010                     ___wmul@multiplicand:
   438                           	callstack 0
   439   000010                     ___lwdiv@divisor:
   440                           	callstack 0
   441   000010                     ___lwmod@divisor:
   442                           	callstack 0
   443   000010                     fputc@c:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0xF
   447   000010                     	ds	2
   448   000012                     ___lwdiv@counter:
   449                           	callstack 0
   450   000012                     ___lwmod@counter:
   451                           	callstack 0
   452   000012                     ___wmul@product:
   453                           	callstack 0
   454   000012                     fputc@fp:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x11
   458   000012                     	ds	1
   459   000013                     ___lwdiv@quotient:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x12
   463   000013                     	ds	1
   464   000014                     ??_fputc:
   465   000014                     ?_read_prec_or_width:
   466                           	callstack 0
   467   000014                     read_prec_or_width@fmt:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x13
   471   000014                     	ds	1
   472   000015                     read_prec_or_width@ap:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x14
   476   000015                     	ds	1
   477   000016                     read_prec_or_width@c:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x15
   481   000016                     	ds	1
   482   000017                     read_prec_or_width@n:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x16
   486   000017                     	ds	2
   487   000019                     fputs@s:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x18
   491   000019                     	ds	1
   492   00001A                     fputs@fp:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x19
   496   00001A                     	ds	2
   497   00001C                     fputs@c:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x1B
   501   00001C                     	ds	1
   502   00001D                     fputs@i:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x1C
   506   00001D                     	ds	2
   507   00001F                     pad@fp:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x1E
   511   00001F                     	ds	2
   512   000021                     pad@buf:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x20
   516   000021                     	ds	1
   517   000022                     pad@p:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x21
   521   000022                     	ds	2
   522   000024                     ??_pad:
   523                           
   524                           ; 1 bytes @ 0x23
   525   000024                     	ds	1
   526   000025                     pad@i:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x24
   530   000025                     	ds	2
   531   000027                     utoa@fp:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x26
   535   000027                     	ds	2
   536   000029                     utoa@d:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x28
   540   000029                     	ds	2
   541   00002B                     utoa@w:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x2A
   545   00002B                     	ds	2
   546   00002D                     utoa@p:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x2C
   550   00002D                     	ds	1
   551   00002E                     utoa@i:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x2D
   555   00002E                     	ds	2
   556   000030                     vfpfcnvrt@fp:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x2F
   560   000030                     	ds	2
   561   000032                     vfpfcnvrt@fmt:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x31
   565   000032                     	ds	1
   566   000033                     vfpfcnvrt@ap:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x32
   570   000033                     	ds	1
   571   000034                     ??_vfpfcnvrt:
   572                           
   573                           ; 1 bytes @ 0x33
   574   000034                     	ds	2
   575   000036                     vfprintf@cfmt:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x35
   579   000036                     	ds	1
   580   000037                     
   581                           ; 1 bytes @ 0x36
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   584 ;;
   585 ;; *************** function _main *****************
   586 ;; Defined at:
   587 ;;		line 60 in file "main.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   601 ;;      Params:         0       0       0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0
   604 ;;      Totals:         0       0       0       0       0       0       0
   605 ;;Total ram usage:        0 bytes
   606 ;; Hardware stack levels required when called: 14
   607 ;; This function calls:
   608 ;;		_ADC_SelectChannel
   609 ;;		_SYSTEM_Initialize
   610 ;;		_TMR5_SetInterruptHandler
   611 ;;		_TMR5_StartTimer
   612 ;;		_printf
   613 ;; This function is called by:
   614 ;;		Startup code after reset
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text0
   619   000B8A                     __ptext0:
   620                           	callstack 0
   621   000B8A                     _main:
   622                           	callstack 17
   623   000B8A                     
   624                           ;main.c: 63:  SYSTEM_Initialize();
   625   000B8A  EC39  F008         	call	_SYSTEM_Initialize	;wreg free
   626   000B8E                     
   627                           ;main.c: 70:  (INTCONbits.GIEH = 1);
   628   000B8E  8EF2               	bsf	242,7,c	;volatile
   629   000B90                     
   630                           ;main.c: 73:  (INTCONbits.GIEL = 1);
   631   000B90  8CF2               	bsf	242,6,c	;volatile
   632   000B92                     
   633                           ;main.c: 82:  (INTCONbits.PEIE = 1);
   634   000B92  8CF2               	bsf	242,6,c	;volatile
   635                           
   636                           ;main.c: 87:  TMR5_SetInterruptHandler(blinker);
   637   000B94  0E3A               	movlw	low _blinker
   638   000B96  6E0E               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
   639   000B98  0E07               	movlw	high _blinker
   640   000B9A  6E0F               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
   641   000B9C  ECBF  F008         	call	_TMR5_SetInterruptHandler	;wreg free
   642   000BA0                     
   643                           ;main.c: 88:  TMR5_StartTimer();
   644   000BA0  ECEB  F008         	call	_TMR5_StartTimer	;wreg free
   645   000BA4                     
   646                           ;main.c: 91:  TRISBbits.TRISB2 = 1;
   647   000BA4  8493               	bsf	147,2,c	;volatile
   648   000BA6                     
   649                           ;main.c: 92:  TRISBbits.TRISB3 = 1;
   650   000BA6  8693               	bsf	147,3,c	;volatile
   651   000BA8                     
   652                           ;main.c: 96:  CTMUCONH = 0x04;
   653   000BA8  0E04               	movlw	4
   654   000BAA  010F               	movlb	15	; () banked
   655   000BAC  6F45               	movwf	69,b	;volatile
   656   000BAE                     
   657                           ; BSR set to: 15
   658                           ;main.c: 97:  CTMUICON = 0x03;
   659   000BAE  0E03               	movlw	3
   660   000BB0  6F43               	movwf	67,b	;volatile
   661   000BB2                     
   662                           ; BSR set to: 15
   663                           ;main.c: 98:  CTMUCONLbits.EDG1SEL = 3;
   664   000BB2  0E0C               	movlw	12
   665   000BB4  1344               	iorwf	68,f,b	;volatile
   666   000BB6                     
   667                           ; BSR set to: 15
   668                           ;main.c: 99:  CTMUCONLbits.EDG2SEL = 2;
   669   000BB6  5144               	movf	68,w,b	;volatile
   670   000BB8  0B9F               	andlw	-97
   671   000BBA  0940               	iorlw	64
   672   000BBC  6F44               	movwf	68,b	;volatile
   673   000BBE                     
   674                           ; BSR set to: 15
   675                           ;main.c: 100:  CTMUCONLbits.EDG1POL = 1;
   676   000BBE  8944               	bsf	68,4,b	;volatile
   677   000BC0                     
   678                           ; BSR set to: 15
   679                           ;main.c: 101:  CTMUCONLbits.EDG2POL = 1;
   680   000BC0  8F44               	bsf	68,7,b	;volatile
   681   000BC2                     
   682                           ; BSR set to: 15
   683                           ;main.c: 102:  CTMUCONHbits.EDGSEQEN = 1;
   684   000BC2  8545               	bsf	69,2,b	;volatile
   685   000BC4                     
   686                           ; BSR set to: 15
   687                           ;main.c: 103:  CTMUCONHbits.CTMUEN = 1;
   688   000BC4  8F45               	bsf	69,7,b	;volatile
   689   000BC6                     
   690                           ; BSR set to: 15
   691                           ;main.c: 104:  CTMUCONHbits.IDISSEN = 1;
   692   000BC6  8345               	bsf	69,1,b	;volatile
   693   000BC8                     
   694                           ; BSR set to: 15
   695                           ;main.c: 105:  CTMUCONHbits.CTTRIG = 0;
   696   000BC8  9145               	bcf	69,0,b	;volatile
   697   000BCA                     
   698                           ; BSR set to: 15
   699                           ;main.c: 107:  ADC_SelectChannel(channel_AN0);
   700   000BCA  0E00               	movlw	0
   701   000BCC  EC77  F008         	call	_ADC_SelectChannel
   702   000BD0                     l2692:
   703                           
   704                           ;main.c: 112:   if (printout) {
   705   000BD0  504A               	movf	_printout^0,w,c	;volatile
   706   000BD2  B4D8               	btfsc	status,2,c
   707   000BD4  EFEE  F005         	goto	u1621
   708   000BD8  EFF0  F005         	goto	u1620
   709   000BDC                     u1621:
   710   000BDC  EFE8  F005         	goto	l2692
   711   000BE0                     u1620:
   712   000BE0                     
   713                           ;main.c: 113:    printout = 0;
   714   000BE0  0E00               	movlw	0
   715   000BE2  6E4A               	movwf	_printout^0,c	;volatile
   716   000BE4                     
   717                           ;main.c: 114:    printf("\rTDR %4u", tdr_adc);
   718   000BE4  0E01               	movlw	low STR_1
   719   000BE6  0100               	movlb	0	; () banked
   720   000BE8  6FD7               	movwf	printf@fmt& (0+255),b
   721   000BEA  C039  F0D8         	movff	_tdr_adc,?_printf+1	;volatile
   722   000BEE  C03A  F0D9         	movff	_tdr_adc+1,?_printf+2	;volatile
   723   000BF2  EC5B  F008         	call	_printf	;wreg free
   724   000BF6  EFE8  F005         	goto	l2692
   725   000BFA  EF87  F000         	goto	start
   726   000BFE                     __end_of_main:
   727                           	callstack 0
   728                           
   729 ;; *************** function _printf *****************
   730 ;; Defined at:
   731 ;;		line 5 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/printf.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  fmt             1    9[BANK0 ] PTR const unsigned char 
   734 ;;		 -> STR_1(9), 
   735 ;; Auto vars:     Size  Location     Type
   736 ;;  ret             2    0        int 
   737 ;;  ap              1   12[BANK0 ] PTR void [1]
   738 ;;		 -> ?_printf(2), 
   739 ;; Return value:  Size  Location     Type
   740 ;;                  2    9[BANK0 ] int 
   741 ;; Registers used:
   742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   748 ;;      Params:         0       3       0       0       0       0       0
   749 ;;      Locals:         0       1       0       0       0       0       0
   750 ;;      Temps:          0       0       0       0       0       0       0
   751 ;;      Totals:         0       4       0       0       0       0       0
   752 ;;Total ram usage:        4 bytes
   753 ;; Hardware stack levels used: 1
   754 ;; Hardware stack levels required when called: 13
   755 ;; This function calls:
   756 ;;		_vfprintf
   757 ;; This function is called by:
   758 ;;		_main
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text1
   763   0010B6                     __ptext1:
   764                           	callstack 0
   765   0010B6                     _printf:
   766                           	callstack 17
   767   0010B6  0ED8               	movlw	low (?_printf+1)
   768   0010B8  0100               	movlb	0	; () banked
   769   0010BA  6FDA               	movwf	printf@ap& (0+255),b
   770   0010BC                     
   771                           ; BSR set to: 0
   772   0010BC  0E00               	movlw	0
   773   0010BE  6FD3               	movwf	vfprintf@fp& (0+255),b
   774   0010C0  0E00               	movlw	0
   775   0010C2  6FD4               	movwf	(vfprintf@fp+1)& (0+255),b
   776   0010C4  C0D7  F0D5         	movff	printf@fmt,vfprintf@fmt
   777   0010C8  0EDA               	movlw	low printf@ap
   778   0010CA  6FD6               	movwf	vfprintf@ap& (0+255),b
   779   0010CC  ECF4  F006         	call	_vfprintf	;wreg free
   780   0010D0  0012               	return		;funcret
   781   0010D2                     __end_of_printf:
   782                           	callstack 0
   783                           
   784 ;; *************** function _vfprintf *****************
   785 ;; Defined at:
   786 ;;		line 1817 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;  fp              2    5[BANK0 ] PTR struct _IO_FILE
   789 ;;		 -> NULL(0), 
   790 ;;  fmt             1    7[BANK0 ] PTR const unsigned char 
   791 ;;		 -> STR_1(9), 
   792 ;;  ap              1    8[BANK0 ] PTR PTR void 
   793 ;;		 -> printf@ap(1), 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  cfmt            1   53[COMRAM] PTR unsigned char 
   796 ;;		 -> STR_1(9), 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  2    5[BANK0 ] int 
   799 ;; Registers used:
   800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   806 ;;      Params:         0       4       0       0       0       0       0
   807 ;;      Locals:         1       0       0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0
   809 ;;      Totals:         1       4       0       0       0       0       0
   810 ;;Total ram usage:        5 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; Hardware stack levels required when called: 12
   813 ;; This function calls:
   814 ;;		_vfpfcnvrt
   815 ;; This function is called by:
   816 ;;		_printf
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text2
   821   000DE8                     __ptext2:
   822                           	callstack 0
   823   000DE8                     _vfprintf:
   824                           	callstack 17
   825   000DE8                     
   826                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1
      +                          818: {;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1820:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1822:     cfmt = (char *)fmt;
   827   000DE8  C0D5  F036         	movff	vfprintf@fmt,vfprintf@cfmt
   828                           
   829                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
   830   000DEC  EF02  F007         	goto	l2644
   831   000DF0                     l2642:
   832                           
   833                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt,
      +                           ap);
   834   000DF0  C0D3  F030         	movff	vfprintf@fp,vfpfcnvrt@fp
   835   000DF4  C0D4  F031         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   836   000DF8  0E36               	movlw	low vfprintf@cfmt
   837   000DFA  6E32               	movwf	vfpfcnvrt@fmt^0,c
   838   000DFC  C0D6  F033         	movff	vfprintf@ap,vfpfcnvrt@ap
   839   000E00  EC06  F003         	call	_vfpfcnvrt	;wreg free
   840   000E04                     l2644:
   841                           
   842                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
   843   000E04  C036  FFF6         	movff	vfprintf@cfmt,tblptrl
   844   000E08                     	if	1	;There is more than 1 active tblptr byte
   845   000E08  0E06               	movlw	high __smallconst
   846   000E0A  6EF7               	movwf	tblptrh,c
   847   000E0C                     	endif
   848   000E0C                     	if	0	;tblptru may be non-zero
   849   000E0C                     	endif
   850   000E0C                     	if	0	;tblptru may be non-zero
   851   000E0C                     	endif
   852   000E0C  0008               	tblrd		*
   853   000E0E  50F5               	movf	tablat,w,c
   854   000E10  0900               	iorlw	0
   855   000E12  A4D8               	btfss	status,2,c
   856   000E14  EF0E  F007         	goto	u1611
   857   000E18  EF10  F007         	goto	u1610
   858   000E1C                     u1611:
   859   000E1C  EFF8  F006         	goto	l2642
   860   000E20                     u1610:
   861   000E20                     
   862                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1835:  return 0;
   863   000E20  0E00               	movlw	0
   864   000E22  0100               	movlb	0	; () banked
   865   000E24  6FD4               	movwf	(?_vfprintf+1)& (0+255),b
   866   000E26  0E00               	movlw	0
   867   000E28  6FD3               	movwf	?_vfprintf& (0+255),b
   868   000E2A                     
   869                           ; BSR set to: 0
   870   000E2A  0012               	return		;funcret
   871   000E2C                     __end_of_vfprintf:
   872                           	callstack 0
   873                           
   874 ;; *************** function _vfpfcnvrt *****************
   875 ;; Defined at:
   876 ;;		line 1177 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
   879 ;;		 -> NULL(0), 
   880 ;;  fmt             1   49[COMRAM] PTR PTR unsigned char 
   881 ;;		 -> vfprintf@cfmt(1), 
   882 ;;  ap              1   50[COMRAM] PTR PTR void 
   883 ;;		 -> printf@ap(1), 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  convarg         4    0[BANK0 ] struct .
   886 ;;  cp              1    4[BANK0 ] PTR unsigned char 
   887 ;;		 -> STR_1(9), 
   888 ;;  done            1    0        _Bool 
   889 ;;  c               1    0        unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   899 ;;      Params:         4       0       0       0       0       0       0
   900 ;;      Locals:         0       5       0       0       0       0       0
   901 ;;      Temps:          2       0       0       0       0       0       0
   902 ;;      Totals:         6       5       0       0       0       0       0
   903 ;;Total ram usage:       11 bytes
   904 ;; Hardware stack levels used: 1
   905 ;; Hardware stack levels required when called: 11
   906 ;; This function calls:
   907 ;;		_fputc
   908 ;;		_read_prec_or_width
   909 ;;		_utoa
   910 ;; This function is called by:
   911 ;;		_vfprintf
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text3
   916   00060C                     __ptext3:
   917                           	callstack 0
   918   00060C                     _vfpfcnvrt:
   919                           	callstack 17
   920   00060C                     
   921                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1178: {;
      +                          /opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1179:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1180:     _Bool done;;/opt/microchip/
      +                          xc8/v2.45/pic/sources/c99/common/doprnt.c: 1188:  } convarg;;/opt/microchip/xc8/v2.45/pi
      +                          c/sources/c99/common/doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   922   00060C  5032               	movf	vfpfcnvrt@fmt^0,w,c
   923   00060E  6ED9               	movwf	fsr2l,c
   924   000610  6ADA               	clrf	fsr2h,c
   925   000612  CFDF FFF6          	movff	indf2,tblptrl
   926   000616                     	if	1	;There is more than 1 active tblptr byte
   927   000616  0E06               	movlw	high __smallconst
   928   000618  6EF7               	movwf	tblptrh,c
   929   00061A                     	endif
   930   00061A                     	if	0	;tblptru may be non-zero
   931   00061A                     	endif
   932   00061A                     	if	0	;tblptru may be non-zero
   933   00061A                     	endif
   934   00061A  0008               	tblrd		*
   935   00061C  50F5               	movf	tablat,w,c
   936   00061E  0A25               	xorlw	37
   937   000620  A4D8               	btfss	status,2,c
   938   000622  EF15  F003         	goto	u1581
   939   000626  EF17  F003         	goto	u1580
   940   00062A                     u1581:
   941   00062A  EF89  F003         	goto	l2630
   942   00062E                     u1580:
   943   00062E                     
   944                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt;
   945   00062E  5032               	movf	vfpfcnvrt@fmt^0,w,c
   946   000630  6ED9               	movwf	fsr2l,c
   947   000632  6ADA               	clrf	fsr2h,c
   948   000634  2ADF               	incf	indf2,f,c
   949   000636                     
   950                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1204:         flags = width =
      +                           0;
   951   000636  0E00               	movlw	0
   952   000638  6E38               	movwf	(_width+1)^0,c
   953   00063A  0E00               	movlw	0
   954   00063C  6E37               	movwf	_width^0,c
   955   00063E  C037  F049         	movff	_width,_flags
   956   000642                     
   957                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1205:         prec = -1;
   958   000642  0100               	movlb	0	; () banked
   959   000644  69A4               	setf	_prec& (0+255),b
   960   000646  69A5               	setf	(_prec+1)& (0+255),b
   961   000648                     
   962                           ; BSR set to: 0
   963                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1256:   width = read_prec_or_
      +                          width(fmt, ap);
   964   000648  C032  F014         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
   965   00064C  C033  F015         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
   966   000650  EC27  F005         	call	_read_prec_or_width	;wreg free
   967   000654  C014  F037         	movff	?_read_prec_or_width,_width
   968   000658  C015  F038         	movff	?_read_prec_or_width+1,_width+1
   969   00065C                     
   970                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1257:   if (width < 0) {
   971   00065C  BE38               	btfsc	(_width+1)^0,7,c
   972   00065E  EF35  F003         	goto	u1590
   973   000662  EF33  F003         	goto	u1591
   974   000666                     u1591:
   975   000666  EF3A  F003         	goto	l2610
   976   00066A                     u1590:
   977   00066A                     
   978                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1258:    flags |= (1 << 0);
   979   00066A  8049               	bsf	_flags^0,0,c
   980                           
   981                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1259:    width = -width;
   982   00066C  6C37               	negf	_width^0,c
   983   00066E  1E38               	comf	(_width+1)^0,f,c
   984   000670  B0D8               	btfsc	status,0,c
   985   000672  2A38               	incf	(_width+1)^0,f,c
   986   000674                     l2610:
   987                           
   988                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1439:   if (0
   989   000674  5032               	movf	vfpfcnvrt@fmt^0,w,c
   990   000676  6ED9               	movwf	fsr2l,c
   991   000678  6ADA               	clrf	fsr2h,c
   992   00067A  50DF               	movf	indf2,w,c
   993   00067C  0100               	movlb	0	; () banked
   994   00067E  6FD2               	movwf	vfpfcnvrt@cp& (0+255),b
   995   000680                     
   996                           ; BSR set to: 0
   997   000680  C0D2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   998   000684                     	if	1	;There is more than 1 active tblptr byte
   999   000684  0E06               	movlw	high __smallconst
  1000   000686  6EF7               	movwf	tblptrh,c
  1001   000688                     	endif
  1002   000688                     	if	0	;tblptru may be non-zero
  1003   000688                     	endif
  1004   000688                     	if	0	;tblptru may be non-zero
  1005   000688                     	endif
  1006   000688  0008               	tblrd		*
  1007   00068A  50F5               	movf	tablat,w,c
  1008   00068C  0A75               	xorlw	117
  1009   00068E  A4D8               	btfss	status,2,c
  1010   000690  EF4C  F003         	goto	u1601
  1011   000694  EF4E  F003         	goto	u1600
  1012   000698                     u1601:
  1013   000698  EF83  F003         	goto	l2626
  1014   00069C                     u1600:
  1015   00069C                     
  1016                           ; BSR set to: 0
  1017                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1452:     ) {;/opt/microchip/
      +                          xc8/v2.45/pic/sources/c99/common/doprnt.c: 1495:    convarg.uint = (vfpf_uint_t)(unsigne
      +                          d int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  1018   00069C  5033               	movf	vfpfcnvrt@ap^0,w,c
  1019   00069E  6ED9               	movwf	fsr2l,c
  1020   0006A0  6ADA               	clrf	fsr2h,c
  1021   0006A2  0E02               	movlw	2
  1022   0006A4  26DF               	addwf	indf2,f,c
  1023   0006A6  5CDF               	subwf	indf2,w,c
  1024   0006A8  6ED9               	movwf	fsr2l,c
  1025   0006AA  6ADA               	clrf	fsr2h,c
  1026   0006AC  CFDE F0CE          	movff	postinc2,vfpfcnvrt@convarg
  1027   0006B0  CFDE F0CF          	movff	postinc2,vfpfcnvrt@convarg+1
  1028   0006B4                     
  1029                           ; BSR set to: 0
  1030                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1497:    *fmt = cp+1;
  1031   0006B4  5032               	movf	vfpfcnvrt@fmt^0,w,c
  1032   0006B6  6ED9               	movwf	fsr2l,c
  1033   0006B8  6ADA               	clrf	fsr2h,c
  1034   0006BA  29D2               	incf	vfpfcnvrt@cp& (0+255),w,b
  1035   0006BC  6EDF               	movwf	indf2,c
  1036                           
  1037                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1498:    switch (*cp) {
  1038   0006BE  EF6D  F003         	goto	l2624
  1039   0006C2                     l2618:
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1542:      return (void) utoa
      +                          (fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  1043   0006C2  C030  F027         	movff	vfpfcnvrt@fp,utoa@fp
  1044   0006C6  C031  F028         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1045   0006CA  C0CE  F029         	movff	vfpfcnvrt@convarg,utoa@d
  1046   0006CE  C0CF  F02A         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  1047   0006D2  EC71  F004         	call	_utoa	;wreg free
  1048   0006D6  EF9C  F003         	goto	l1259
  1049   0006DA                     l2624:
  1050                           
  1051                           ; BSR set to: 0
  1052   0006DA  C0D2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1053   0006DE                     	if	1	;There is more than 1 active tblptr byte
  1054   0006DE  0E06               	movlw	high __smallconst
  1055   0006E0  6EF7               	movwf	tblptrh,c
  1056   0006E2                     	endif
  1057   0006E2                     	if	0	;tblptru may be non-zero
  1058   0006E2                     	endif
  1059   0006E2                     	if	0	;tblptru may be non-zero
  1060   0006E2                     	endif
  1061   0006E2  0008               	tblrd		*
  1062   0006E4  50F5               	movf	tablat,w,c
  1063   0006E6  6E34               	movwf	??_vfpfcnvrt^0,c
  1064   0006E8  6A35               	clrf	(??_vfpfcnvrt+1)^0,c
  1065                           
  1066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1067                           ; Switch size 1, requested type "simple"
  1068                           ; Number of cases is 1, Range of values is 0 to 0
  1069                           ; switch strategies available:
  1070                           ; Name         Instructions Cycles
  1071                           ; simple_byte            4     3 (average)
  1072                           ;	Chosen strategy is simple_byte
  1073   0006EA  5035               	movf	(??_vfpfcnvrt+1)^0,w,c
  1074   0006EC  0A00               	xorlw	0	; case 0
  1075   0006EE  B4D8               	btfsc	status,2,c
  1076   0006F0  EF7C  F003         	goto	l2718
  1077   0006F4  EF83  F003         	goto	l2626
  1078   0006F8                     l2718:
  1079                           
  1080                           ; BSR set to: 0
  1081                           ; Switch size 1, requested type "simple"
  1082                           ; Number of cases is 1, Range of values is 117 to 117
  1083                           ; switch strategies available:
  1084                           ; Name         Instructions Cycles
  1085                           ; simple_byte            4     3 (average)
  1086                           ;	Chosen strategy is simple_byte
  1087   0006F8  5034               	movf	??_vfpfcnvrt^0,w,c
  1088   0006FA  0A75               	xorlw	117	; case 117
  1089   0006FC  B4D8               	btfsc	status,2,c
  1090   0006FE  EF61  F003         	goto	l2618
  1091   000702  EF83  F003         	goto	l2626
  1092   000706                     l2626:
  1093                           
  1094                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt;
  1095   000706  5032               	movf	vfpfcnvrt@fmt^0,w,c
  1096   000708  6ED9               	movwf	fsr2l,c
  1097   00070A  6ADA               	clrf	fsr2h,c
  1098   00070C  2ADF               	incf	indf2,f,c
  1099   00070E  EF9C  F003         	goto	l1259
  1100   000712                     l2630:
  1101                           
  1102                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1811:     fputc((int)(*fmt)[0
      +                          ], fp);
  1103   000712  5032               	movf	vfpfcnvrt@fmt^0,w,c
  1104   000714  6ED9               	movwf	fsr2l,c
  1105   000716  6ADA               	clrf	fsr2h,c
  1106   000718  CFDF FFF6          	movff	indf2,tblptrl
  1107   00071C                     	if	1	;There is more than 1 active tblptr byte
  1108   00071C  0E06               	movlw	high __smallconst
  1109   00071E  6EF7               	movwf	tblptrh,c
  1110   000720                     	endif
  1111   000720                     	if	0	;tblptru may be non-zero
  1112   000720                     	endif
  1113   000720                     	if	0	;tblptru may be non-zero
  1114   000720                     	endif
  1115   000720  0008               	tblrd		*
  1116   000722  50F5               	movf	tablat,w,c
  1117   000724  6E10               	movwf	fputc@c^0,c
  1118   000726  6A11               	clrf	(fputc@c+1)^0,c
  1119   000728  C030  F012         	movff	vfpfcnvrt@fp,fputc@fp
  1120   00072C  C031  F013         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1121   000730  EC0C  F004         	call	_fputc	;wreg free
  1122   000734  EF83  F003         	goto	l2626
  1123   000738                     l1259:
  1124   000738  0012               	return		;funcret
  1125   00073A                     __end_of_vfpfcnvrt:
  1126                           	callstack 0
  1127                           
  1128 ;; *************** function _utoa *****************
  1129 ;; Defined at:
  1130 ;;		line 1001 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  1133 ;;		 -> NULL(0), 
  1134 ;;  d               2   40[COMRAM] unsigned int 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  i               2   45[COMRAM] int 
  1137 ;;  w               2   42[COMRAM] int 
  1138 ;;  p               1   44[COMRAM] _Bool 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1148 ;;      Params:         4       0       0       0       0       0       0
  1149 ;;      Locals:         5       0       0       0       0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0       0
  1151 ;;      Totals:         9       0       0       0       0       0       0
  1152 ;;Total ram usage:        9 bytes
  1153 ;; Hardware stack levels used: 1
  1154 ;; Hardware stack levels required when called: 10
  1155 ;; This function calls:
  1156 ;;		___lwdiv
  1157 ;;		___lwmod
  1158 ;;		_pad
  1159 ;; This function is called by:
  1160 ;;		_vfpfcnvrt
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text4
  1165   0008E2                     __ptext4:
  1166                           	callstack 0
  1167   0008E2                     _utoa:
  1168                           	callstack 17
  1169   0008E2                     
  1170                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1001: static void utoa(FILE *
      +                          fp, vfpf_uint_t d);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1002: {;/op
      +                          t/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1003:     int i, w;;/opt/microchi
      +                          p/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1007:  _Bool p = 1;
  1171   0008E2  0E01               	movlw	1
  1172   0008E4  6E2D               	movwf	utoa@p^0,c
  1173   0008E6                     
  1174                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1019:     w = width;
  1175   0008E6  C037  F02B         	movff	_width,utoa@w
  1176   0008EA  C038  F02C         	movff	_width+1,utoa@w+1
  1177                           
  1178                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1022:     i = sizeof(dbuf) - 
      +                          1;
  1179   0008EE  0E00               	movlw	0
  1180   0008F0  6E2F               	movwf	(utoa@i+1)^0,c
  1181   0008F2  0E1F               	movlw	31
  1182   0008F4  6E2E               	movwf	utoa@i^0,c
  1183   0008F6                     
  1184                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1023:     dbuf[i] = '\0';
  1185   0008F6  0E00               	movlw	0
  1186   0008F8  0100               	movlb	0	; () banked
  1187   0008FA  6FCD               	movwf	(_dbuf+31)& (0+255),b
  1188                           
  1189                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1024:     while (i && (d != 0
  1190   0008FC  EFA7  F004         	goto	l2572
  1191   000900                     l2562:
  1192                           
  1193                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1033:     )) {;/opt/microchip
      +                          /xc8/v2.45/pic/sources/c99/common/doprnt.c: 1034:         --i;
  1194   000900  062E               	decf	utoa@i^0,f,c
  1195   000902  A0D8               	btfss	status,0,c
  1196   000904  062F               	decf	(utoa@i+1)^0,f,c
  1197   000906                     
  1198                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1035:         dbuf[i] = '0' +
      +                           (d % 10);
  1199   000906  502E               	movf	utoa@i^0,w,c
  1200   000908  0FAE               	addlw	low _dbuf
  1201   00090A  6ED9               	movwf	fsr2l,c
  1202   00090C  6ADA               	clrf	fsr2h,c
  1203   00090E  C029  F00E         	movff	utoa@d,___lwmod@dividend
  1204   000912  C02A  F00F         	movff	utoa@d+1,___lwmod@dividend+1
  1205   000916  0E00               	movlw	0
  1206   000918  6E11               	movwf	(___lwmod@divisor+1)^0,c
  1207   00091A  0E0A               	movlw	10
  1208   00091C  6E10               	movwf	___lwmod@divisor^0,c
  1209   00091E  EC73  F006         	call	___lwmod	;wreg free
  1210   000922  500E               	movf	?___lwmod^0,w,c
  1211   000924  0F30               	addlw	48
  1212   000926  6EDF               	movwf	indf2,c
  1213   000928                     
  1214                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1039:   p = 0;
  1215   000928  0E00               	movlw	0
  1216   00092A  6E2D               	movwf	utoa@p^0,c
  1217   00092C                     
  1218                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1041:         --w;
  1219   00092C  062B               	decf	utoa@w^0,f,c
  1220   00092E  A0D8               	btfss	status,0,c
  1221   000930  062C               	decf	(utoa@w+1)^0,f,c
  1222   000932                     
  1223                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1042:         d = d / 10;
  1224   000932  C029  F00E         	movff	utoa@d,___lwdiv@dividend
  1225   000936  C02A  F00F         	movff	utoa@d+1,___lwdiv@dividend+1
  1226   00093A  0E00               	movlw	0
  1227   00093C  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1228   00093E  0E0A               	movlw	10
  1229   000940  6E10               	movwf	___lwdiv@divisor^0,c
  1230   000942  ECFF  F005         	call	___lwdiv	;wreg free
  1231   000946  C00E  F029         	movff	?___lwdiv,utoa@d
  1232   00094A  C00F  F02A         	movff	?___lwdiv+1,utoa@d+1
  1233   00094E                     l2572:
  1234                           
  1235                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1024:     while (i && (d != 0
  1236   00094E  502E               	movf	utoa@i^0,w,c
  1237   000950  102F               	iorwf	(utoa@i+1)^0,w,c
  1238   000952  B4D8               	btfsc	status,2,c
  1239   000954  EFAE  F004         	goto	u1531
  1240   000958  EFB0  F004         	goto	u1530
  1241   00095C                     u1531:
  1242   00095C  EFC1  F004         	goto	l2578
  1243   000960                     u1530:
  1244   000960  5029               	movf	utoa@d^0,w,c
  1245   000962  102A               	iorwf	(utoa@d+1)^0,w,c
  1246   000964  A4D8               	btfss	status,2,c
  1247   000966  EFB7  F004         	goto	u1541
  1248   00096A  EFB9  F004         	goto	u1540
  1249   00096E                     u1541:
  1250   00096E  EF80  F004         	goto	l2562
  1251   000972                     u1540:
  1252   000972  502D               	movf	utoa@p^0,w,c
  1253   000974  A4D8               	btfss	status,2,c
  1254   000976  EFBF  F004         	goto	u1551
  1255   00097A  EFC1  F004         	goto	u1550
  1256   00097E                     u1551:
  1257   00097E  EF80  F004         	goto	l2562
  1258   000982                     u1550:
  1259   000982                     l2578:
  1260                           
  1261                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1046:     return (void) pad(f
      +                          p, &dbuf[i], w);
  1262   000982  C027  F01F         	movff	utoa@fp,pad@fp
  1263   000986  C028  F020         	movff	utoa@fp+1,pad@fp+1
  1264   00098A  502E               	movf	utoa@i^0,w,c
  1265   00098C  0FAE               	addlw	low _dbuf
  1266   00098E  6E21               	movwf	pad@buf^0,c
  1267   000990  C02B  F022         	movff	utoa@w,pad@p
  1268   000994  C02C  F023         	movff	utoa@w+1,pad@p+1
  1269   000998  EC7A  F005         	call	_pad	;wreg free
  1270   00099C  0012               	return		;funcret
  1271   00099E                     __end_of_utoa:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _pad *****************
  1275 ;; Defined at:
  1276 ;;		line 193 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  1279 ;;		 -> NULL(0), 
  1280 ;;  buf             1   32[COMRAM] PTR unsigned char 
  1281 ;;		 -> dbuf(32), 
  1282 ;;  p               2   33[COMRAM] int 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  i               2   36[COMRAM] int 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1294 ;;      Params:         5       0       0       0       0       0       0
  1295 ;;      Locals:         2       0       0       0       0       0       0
  1296 ;;      Temps:          1       0       0       0       0       0       0
  1297 ;;      Totals:         8       0       0       0       0       0       0
  1298 ;;Total ram usage:        8 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 9
  1301 ;; This function calls:
  1302 ;;		_fputc
  1303 ;;		_fputs
  1304 ;; This function is called by:
  1305 ;;		_utoa
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text5
  1310   000AF4                     __ptext5:
  1311                           	callstack 0
  1312   000AF4                     _pad:
  1313                           	callstack 17
  1314   000AF4                     
  1315                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 193: static void pad(FILE *fp
      +                          , char *buf, int p);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 194: {;/op
      +                          t/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 195:     int i;;/opt/microchip/xc
      +                          8/v2.45/pic/sources/c99/common/doprnt.c: 199:     if (flags & (1 << 0)) {
  1316   000AF4  A049               	btfss	_flags^0,0,c
  1317   000AF6  EF7F  F005         	goto	u1491
  1318   000AFA  EF81  F005         	goto	u1490
  1319   000AFE                     u1491:
  1320   000AFE  EF89  F005         	goto	l2544
  1321   000B02                     u1490:
  1322   000B02                     
  1323                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 200:         fputs((const cha
      +                          r *)buf, fp);
  1324   000B02  C021  F019         	movff	pad@buf,fputs@s
  1325   000B06  C01F  F01A         	movff	pad@fp,fputs@fp
  1326   000B0A  C020  F01B         	movff	pad@fp+1,fputs@fp+1
  1327   000B0E  EC16  F007         	call	_fputs	;wreg free
  1328   000B12                     l2544:
  1329                           
  1330                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  1331   000B12  BE23               	btfsc	(pad@p+1)^0,7,c
  1332   000B14  EF90  F005         	goto	u1500
  1333   000B18  EF8E  F005         	goto	u1501
  1334   000B1C                     u1501:
  1335   000B1C  EF94  F005         	goto	l1228
  1336   000B20                     u1500:
  1337   000B20                     
  1338                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  1339   000B20  0E00               	movlw	0
  1340   000B22  6E23               	movwf	(pad@p+1)^0,c
  1341   000B24  0E00               	movlw	0
  1342   000B26  6E22               	movwf	pad@p^0,c
  1343   000B28                     l1228:
  1344                           
  1345                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  1346   000B28  0E00               	movlw	0
  1347   000B2A  6E26               	movwf	(pad@i+1)^0,c
  1348   000B2C  0E00               	movlw	0
  1349   000B2E  6E25               	movwf	pad@i^0,c
  1350                           
  1351                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  1352   000B30  EFA6  F005         	goto	l2552
  1353   000B34                     l2548:
  1354                           
  1355                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 210:         fputc(' ', fp);
  1356   000B34  0E00               	movlw	0
  1357   000B36  6E11               	movwf	(fputc@c+1)^0,c
  1358   000B38  0E20               	movlw	32
  1359   000B3A  6E10               	movwf	fputc@c^0,c
  1360   000B3C  C01F  F012         	movff	pad@fp,fputc@fp
  1361   000B40  C020  F013         	movff	pad@fp+1,fputc@fp+1
  1362   000B44  EC0C  F004         	call	_fputc	;wreg free
  1363   000B48                     
  1364                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 211:         ++i;
  1365   000B48  4A25               	infsnz	pad@i^0,f,c
  1366   000B4A  2A26               	incf	(pad@i+1)^0,f,c
  1367   000B4C                     l2552:
  1368                           
  1369                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  1370   000B4C  5022               	movf	pad@p^0,w,c
  1371   000B4E  5C25               	subwf	pad@i^0,w,c
  1372   000B50  5026               	movf	(pad@i+1)^0,w,c
  1373   000B52  0A80               	xorlw	128
  1374   000B54  6E24               	movwf	??_pad^0,c
  1375   000B56  5023               	movf	(pad@p+1)^0,w,c
  1376   000B58  0A80               	xorlw	128
  1377   000B5A  5824               	subwfb	??_pad^0,w,c
  1378   000B5C  A0D8               	btfss	status,0,c
  1379   000B5E  EFB3  F005         	goto	u1511
  1380   000B62  EFB5  F005         	goto	u1510
  1381   000B66                     u1511:
  1382   000B66  EF9A  F005         	goto	l2548
  1383   000B6A                     u1510:
  1384   000B6A                     
  1385                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 216:     if (!(flags & (1 << 
      +                          0))) {
  1386   000B6A  B049               	btfsc	_flags^0,0,c
  1387   000B6C  EFBA  F005         	goto	u1521
  1388   000B70  EFBC  F005         	goto	u1520
  1389   000B74                     u1521:
  1390   000B74  EFC4  F005         	goto	l1233
  1391   000B78                     u1520:
  1392   000B78                     
  1393                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 218:         fputs((const cha
      +                          r *)buf, fp);
  1394   000B78  C021  F019         	movff	pad@buf,fputs@s
  1395   000B7C  C01F  F01A         	movff	pad@fp,fputs@fp
  1396   000B80  C020  F01B         	movff	pad@fp+1,fputs@fp+1
  1397   000B84  EC16  F007         	call	_fputs	;wreg free
  1398   000B88                     l1233:
  1399   000B88  0012               	return		;funcret
  1400   000B8A                     __end_of_pad:
  1401                           	callstack 0
  1402                           
  1403 ;; *************** function _fputs *****************
  1404 ;; Defined at:
  1405 ;;		line 8 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/nf_fputs.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;  s               1   24[COMRAM] PTR const unsigned char 
  1408 ;;		 -> dbuf(32), 
  1409 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  1410 ;;		 -> NULL(0), 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  i               2   28[COMRAM] int 
  1413 ;;  c               1   27[COMRAM] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  2   24[COMRAM] int 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1423 ;;      Params:         3       0       0       0       0       0       0
  1424 ;;      Locals:         3       0       0       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0
  1426 ;;      Totals:         6       0       0       0       0       0       0
  1427 ;;Total ram usage:        6 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; Hardware stack levels required when called: 8
  1430 ;; This function calls:
  1431 ;;		_fputc
  1432 ;; This function is called by:
  1433 ;;		_pad
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text6
  1438   000E2C                     __ptext6:
  1439                           	callstack 0
  1440   000E2C                     _fputs:
  1441                           	callstack 17
  1442   000E2C  0E00               	movlw	0
  1443   000E2E  6E1E               	movwf	(fputs@i+1)^0,c
  1444   000E30  0E00               	movlw	0
  1445   000E32  6E1D               	movwf	fputs@i^0,c
  1446   000E34  EF27  F007         	goto	l2494
  1447   000E38                     l2490:
  1448   000E38  C01C  F010         	movff	fputs@c,fputc@c
  1449   000E3C  6A11               	clrf	(fputc@c+1)^0,c
  1450   000E3E  C01A  F012         	movff	fputs@fp,fputc@fp
  1451   000E42  C01B  F013         	movff	fputs@fp+1,fputc@fp+1
  1452   000E46  EC0C  F004         	call	_fputc	;wreg free
  1453   000E4A  4A1D               	infsnz	fputs@i^0,f,c
  1454   000E4C  2A1E               	incf	(fputs@i+1)^0,f,c
  1455   000E4E                     l2494:
  1456   000E4E  5019               	movf	fputs@s^0,w,c
  1457   000E50  241D               	addwf	fputs@i^0,w,c
  1458   000E52  6ED9               	movwf	fsr2l,c
  1459   000E54  6ADA               	clrf	fsr2h,c
  1460   000E56  50DF               	movf	indf2,w,c
  1461   000E58  6E1C               	movwf	fputs@c^0,c
  1462   000E5A  501C               	movf	fputs@c^0,w,c
  1463   000E5C  A4D8               	btfss	status,2,c
  1464   000E5E  EF33  F007         	goto	u1421
  1465   000E62  EF35  F007         	goto	u1420
  1466   000E66                     u1421:
  1467   000E66  EF1C  F007         	goto	l2490
  1468   000E6A                     u1420:
  1469   000E6A  0012               	return		;funcret
  1470   000E6C                     __end_of_fputs:
  1471                           	callstack 0
  1472                           
  1473 ;; *************** function _fputc *****************
  1474 ;; Defined at:
  1475 ;;		line 8 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/nf_fputc.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  c               2   15[COMRAM] int 
  1478 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1479 ;;		 -> NULL(0), 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  2   15[COMRAM] int 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1491 ;;      Params:         4       0       0       0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0       0       0
  1493 ;;      Temps:          5       0       0       0       0       0       0
  1494 ;;      Totals:         9       0       0       0       0       0       0
  1495 ;;Total ram usage:        9 bytes
  1496 ;; Hardware stack levels used: 1
  1497 ;; Hardware stack levels required when called: 7
  1498 ;; This function calls:
  1499 ;;		_putch
  1500 ;; This function is called by:
  1501 ;;		_pad
  1502 ;;		_vfpfcnvrt
  1503 ;;		_fputs
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text7
  1508   000818                     __ptext7:
  1509                           	callstack 0
  1510   000818                     _fputc:
  1511                           	callstack 17
  1512   000818  5012               	movf	fputc@fp^0,w,c
  1513   00081A  1013               	iorwf	(fputc@fp+1)^0,w,c
  1514   00081C  B4D8               	btfsc	status,2,c
  1515   00081E  EF13  F004         	goto	u1381
  1516   000822  EF15  F004         	goto	u1380
  1517   000826                     u1381:
  1518   000826  EF1E  F004         	goto	l2478
  1519   00082A                     u1380:
  1520   00082A  5012               	movf	fputc@fp^0,w,c
  1521   00082C  1013               	iorwf	(fputc@fp+1)^0,w,c
  1522   00082E  A4D8               	btfss	status,2,c
  1523   000830  EF1C  F004         	goto	u1391
  1524   000834  EF1E  F004         	goto	u1390
  1525   000838                     u1391:
  1526   000838  EF23  F004         	goto	l2480
  1527   00083C                     u1390:
  1528   00083C                     l2478:
  1529   00083C  5010               	movf	fputc@c^0,w,c
  1530   00083E  ECBA  F008         	call	_putch
  1531   000842  EF70  F004         	goto	l1278
  1532   000846                     l2480:
  1533   000846  EE20 F00A          	lfsr	2,10
  1534   00084A  5012               	movf	fputc@fp^0,w,c
  1535   00084C  26D9               	addwf	fsr2l,f,c
  1536   00084E  5013               	movf	(fputc@fp+1)^0,w,c
  1537   000850  22DA               	addwfc	fsr2h,f,c
  1538   000852  50DE               	movf	postinc2,w,c
  1539   000854  10DE               	iorwf	postinc2,w,c
  1540   000856  B4D8               	btfsc	status,2,c
  1541   000858  EF30  F004         	goto	u1401
  1542   00085C  EF32  F004         	goto	u1400
  1543   000860                     u1401:
  1544   000860  EF4D  F004         	goto	l2484
  1545   000864                     u1400:
  1546   000864  EE20 F00A          	lfsr	2,10
  1547   000868  5012               	movf	fputc@fp^0,w,c
  1548   00086A  26D9               	addwf	fsr2l,f,c
  1549   00086C  5013               	movf	(fputc@fp+1)^0,w,c
  1550   00086E  22DA               	addwfc	fsr2h,f,c
  1551   000870  EE10 F003          	lfsr	1,3
  1552   000874  5012               	movf	fputc@fp^0,w,c
  1553   000876  26E1               	addwf	fsr1l,f,c
  1554   000878  5013               	movf	(fputc@fp+1)^0,w,c
  1555   00087A  22E2               	addwfc	fsr1h,f,c
  1556   00087C  50DE               	movf	postinc2,w,c
  1557   00087E  5CE6               	subwf	postinc1,w,c
  1558   000880  50E6               	movf	postinc1,w,c
  1559   000882  0A80               	xorlw	128
  1560   000884  6E18               	movwf	(??_fputc+4)^0,c
  1561   000886  50DE               	movf	postinc2,w,c
  1562   000888  0A80               	xorlw	128
  1563   00088A  5818               	subwfb	(??_fputc+4)^0,w,c
  1564   00088C  B0D8               	btfsc	status,0,c
  1565   00088E  EF4B  F004         	goto	u1411
  1566   000892  EF4D  F004         	goto	u1410
  1567   000896                     u1411:
  1568   000896  EF70  F004         	goto	l1278
  1569   00089A                     u1410:
  1570   00089A                     l2484:
  1571   00089A  EE20 F003          	lfsr	2,3
  1572   00089E  5012               	movf	fputc@fp^0,w,c
  1573   0008A0  26D9               	addwf	fsr2l,f,c
  1574   0008A2  5013               	movf	(fputc@fp+1)^0,w,c
  1575   0008A4  22DA               	addwfc	fsr2h,f,c
  1576   0008A6  CFDE F014          	movff	postinc2,??_fputc
  1577   0008AA  CFDD F015          	movff	postdec2,??_fputc+1
  1578   0008AE  C012  FFD9         	movff	fputc@fp,fsr2l
  1579   0008B2  C013  FFDA         	movff	fputc@fp+1,fsr2h
  1580   0008B6  CFDE F016          	movff	postinc2,??_fputc+2
  1581   0008BA  CFDD F017          	movff	postdec2,??_fputc+3
  1582   0008BE  5014               	movf	??_fputc^0,w,c
  1583   0008C0  2416               	addwf	(??_fputc+2)^0,w,c
  1584   0008C2  6ED9               	movwf	fsr2l,c
  1585   0008C4  5015               	movf	(??_fputc+1)^0,w,c
  1586   0008C6  2017               	addwfc	(??_fputc+3)^0,w,c
  1587   0008C8  6EDA               	movwf	fsr2h,c
  1588   0008CA  C010  FFDF         	movff	fputc@c,indf2
  1589   0008CE  EE20 F003          	lfsr	2,3
  1590   0008D2  5012               	movf	fputc@fp^0,w,c
  1591   0008D4  26D9               	addwf	fsr2l,f,c
  1592   0008D6  5013               	movf	(fputc@fp+1)^0,w,c
  1593   0008D8  22DA               	addwfc	fsr2h,f,c
  1594   0008DA  2ADE               	incf	postinc2,f,c
  1595   0008DC  0E00               	movlw	0
  1596   0008DE  22DD               	addwfc	postdec2,f,c
  1597   0008E0                     l1278:
  1598   0008E0  0012               	return		;funcret
  1599   0008E2                     __end_of_fputc:
  1600                           	callstack 0
  1601                           
  1602 ;; *************** function _putch *****************
  1603 ;; Defined at:
  1604 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  txData          1    wreg     unsigned char 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  txData          1   14[COMRAM] unsigned char 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1618 ;;      Params:         0       0       0       0       0       0       0
  1619 ;;      Locals:         1       0       0       0       0       0       0
  1620 ;;      Temps:          0       0       0       0       0       0       0
  1621 ;;      Totals:         1       0       0       0       0       0       0
  1622 ;;Total ram usage:        1 bytes
  1623 ;; Hardware stack levels used: 1
  1624 ;; Hardware stack levels required when called: 6
  1625 ;; This function calls:
  1626 ;;		_EUSART1_Write
  1627 ;; This function is called by:
  1628 ;;		_fputc
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text8
  1633   001174                     __ptext8:
  1634                           	callstack 0
  1635   001174                     _putch:
  1636                           	callstack 17
  1637                           
  1638                           ;incstack = 0
  1639                           ;putch@txData stored from wreg
  1640   001174  6E0F               	movwf	putch@txData^0,c
  1641   001176                     
  1642                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  1643   001176  500F               	movf	putch@txData^0,w,c
  1644   001178  ECA5  F006         	call	_EUSART1_Write
  1645   00117C  0012               	return		;funcret
  1646   00117E                     __end_of_putch:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function _EUSART1_Write *****************
  1650 ;; Defined at:
  1651 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  txData          1    wreg     unsigned char 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  txData          1   13[COMRAM] unsigned char 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1665 ;;      Params:         0       0       0       0       0       0       0
  1666 ;;      Locals:         1       0       0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0       0       0
  1668 ;;      Totals:         1       0       0       0       0       0       0
  1669 ;;Total ram usage:        1 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 5
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_putch
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text9
  1680   000D4A                     __ptext9:
  1681                           	callstack 0
  1682   000D4A                     _EUSART1_Write:
  1683                           	callstack 17
  1684                           
  1685                           ;incstack = 0
  1686                           ;EUSART1_Write@txData stored from wreg
  1687   000D4A  6E0E               	movwf	EUSART1_Write@txData^0,c
  1688   000D4C                     l2456:
  1689                           
  1690                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  1691   000D4C  504F               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  1692   000D4E  B4D8               	btfsc	status,2,c
  1693   000D50  EFAC  F006         	goto	u1351
  1694   000D54  EFAE  F006         	goto	u1350
  1695   000D58                     u1351:
  1696   000D58  EFA6  F006         	goto	l2456
  1697   000D5C                     u1350:
  1698   000D5C                     
  1699                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  1700   000D5C  B89D               	btfsc	157,4,c	;volatile
  1701   000D5E  EFB3  F006         	goto	u1361
  1702   000D62  EFB5  F006         	goto	u1360
  1703   000D66                     u1361:
  1704   000D66  EFB9  F006         	goto	l319
  1705   000D6A                     u1360:
  1706   000D6A                     
  1707                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  1708   000D6A  C00E  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1709                           
  1710                           ;mcc_generated_files/eusart1.c: 182:     }
  1711   000D6E  EFCE  F006         	goto	l2470
  1712   000D72                     l319:
  1713                           
  1714                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  1715   000D72  989D               	bcf	157,4,c	;volatile
  1716   000D74                     
  1717                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  1718   000D74  0E40               	movlw	low _eusart1TxBuffer
  1719   000D76  2451               	addwf	_eusart1TxHead^0,w,c	;volatile
  1720   000D78  6ED9               	movwf	fsr2l,c
  1721   000D7A  6ADA               	clrf	fsr2h,c
  1722   000D7C  0E01               	movlw	high _eusart1TxBuffer
  1723   000D7E  22DA               	addwfc	fsr2h,f,c
  1724   000D80  C00E  FFDF         	movff	EUSART1_Write@txData,indf2
  1725   000D84  2A51               	incf	_eusart1TxHead^0,f,c	;volatile
  1726   000D86                     
  1727                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  1728   000D86  0E3F               	movlw	63
  1729   000D88  6451               	cpfsgt	_eusart1TxHead^0,c	;volatile
  1730   000D8A  EFC9  F006         	goto	u1371
  1731   000D8E  EFCB  F006         	goto	u1370
  1732   000D92                     u1371:
  1733   000D92  EFCD  F006         	goto	l2468
  1734   000D96                     u1370:
  1735   000D96                     
  1736                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  1737   000D96  0E00               	movlw	0
  1738   000D98  6E51               	movwf	_eusart1TxHead^0,c	;volatile
  1739   000D9A                     l2468:
  1740                           
  1741                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  1742   000D9A  064F               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  1743   000D9C                     l2470:
  1744                           
  1745                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  1746   000D9C  889D               	bsf	157,4,c	;volatile
  1747   000D9E  0012               	return		;funcret
  1748   000DA0                     __end_of_EUSART1_Write:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function ___lwmod *****************
  1752 ;; Defined at:
  1753 ;;		line 7 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/lwmod.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  dividend        2   13[COMRAM] unsigned int 
  1756 ;;  divisor         2   15[COMRAM] unsigned int 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  counter         1   17[COMRAM] unsigned char 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  2   13[COMRAM] unsigned int 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1768 ;;      Params:         4       0       0       0       0       0       0
  1769 ;;      Locals:         1       0       0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0       0       0
  1771 ;;      Totals:         5       0       0       0       0       0       0
  1772 ;;Total ram usage:        5 bytes
  1773 ;; Hardware stack levels used: 1
  1774 ;; Hardware stack levels required when called: 5
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_utoa
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text10
  1783   000CE6                     __ptext10:
  1784                           	callstack 0
  1785   000CE6                     ___lwmod:
  1786                           	callstack 21
  1787   000CE6  5010               	movf	___lwmod@divisor^0,w,c
  1788   000CE8  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  1789   000CEA  B4D8               	btfsc	status,2,c
  1790   000CEC  EF7A  F006         	goto	u1461
  1791   000CF0  EF7C  F006         	goto	u1460
  1792   000CF4                     u1461:
  1793   000CF4  EFA0  F006         	goto	l1033
  1794   000CF8                     u1460:
  1795   000CF8  0E01               	movlw	1
  1796   000CFA  6E12               	movwf	___lwmod@counter^0,c
  1797   000CFC  EF84  F006         	goto	l2530
  1798   000D00                     l2528:
  1799   000D00  90D8               	bcf	status,0,c
  1800   000D02  3610               	rlcf	___lwmod@divisor^0,f,c
  1801   000D04  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  1802   000D06  2A12               	incf	___lwmod@counter^0,f,c
  1803   000D08                     l2530:
  1804   000D08  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  1805   000D0A  EF89  F006         	goto	u1471
  1806   000D0E  EF8B  F006         	goto	u1470
  1807   000D12                     u1471:
  1808   000D12  EF80  F006         	goto	l2528
  1809   000D16                     u1470:
  1810   000D16                     l2532:
  1811   000D16  5010               	movf	___lwmod@divisor^0,w,c
  1812   000D18  5C0E               	subwf	___lwmod@dividend^0,w,c
  1813   000D1A  5011               	movf	(___lwmod@divisor+1)^0,w,c
  1814   000D1C  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  1815   000D1E  A0D8               	btfss	status,0,c
  1816   000D20  EF94  F006         	goto	u1481
  1817   000D24  EF96  F006         	goto	u1480
  1818   000D28                     u1481:
  1819   000D28  EF9A  F006         	goto	l2536
  1820   000D2C                     u1480:
  1821   000D2C  5010               	movf	___lwmod@divisor^0,w,c
  1822   000D2E  5E0E               	subwf	___lwmod@dividend^0,f,c
  1823   000D30  5011               	movf	(___lwmod@divisor+1)^0,w,c
  1824   000D32  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  1825   000D34                     l2536:
  1826   000D34  90D8               	bcf	status,0,c
  1827   000D36  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  1828   000D38  3210               	rrcf	___lwmod@divisor^0,f,c
  1829   000D3A  2E12               	decfsz	___lwmod@counter^0,f,c
  1830   000D3C  EF8B  F006         	goto	l2532
  1831   000D40                     l1033:
  1832   000D40  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  1833   000D44  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  1834   000D48  0012               	return		;funcret
  1835   000D4A                     __end_of___lwmod:
  1836                           	callstack 0
  1837                           
  1838 ;; *************** function ___lwdiv *****************
  1839 ;; Defined at:
  1840 ;;		line 7 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/lwdiv.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  dividend        2   13[COMRAM] unsigned int 
  1843 ;;  divisor         2   15[COMRAM] unsigned int 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  quotient        2   18[COMRAM] unsigned int 
  1846 ;;  counter         1   17[COMRAM] unsigned char 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  2   13[COMRAM] unsigned int 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1856 ;;      Params:         4       0       0       0       0       0       0
  1857 ;;      Locals:         3       0       0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0
  1859 ;;      Totals:         7       0       0       0       0       0       0
  1860 ;;Total ram usage:        7 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; Hardware stack levels required when called: 5
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_utoa
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text11
  1871   000BFE                     __ptext11:
  1872                           	callstack 0
  1873   000BFE                     ___lwdiv:
  1874                           	callstack 21
  1875   000BFE  0E00               	movlw	0
  1876   000C00  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  1877   000C02  0E00               	movlw	0
  1878   000C04  6E13               	movwf	___lwdiv@quotient^0,c
  1879   000C06  5010               	movf	___lwdiv@divisor^0,w,c
  1880   000C08  1011               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1881   000C0A  B4D8               	btfsc	status,2,c
  1882   000C0C  EF0A  F006         	goto	u1431
  1883   000C10  EF0C  F006         	goto	u1430
  1884   000C14                     u1431:
  1885   000C14  EF34  F006         	goto	l1023
  1886   000C18                     u1430:
  1887   000C18  0E01               	movlw	1
  1888   000C1A  6E12               	movwf	___lwdiv@counter^0,c
  1889   000C1C  EF14  F006         	goto	l2510
  1890   000C20                     l2508:
  1891   000C20  90D8               	bcf	status,0,c
  1892   000C22  3610               	rlcf	___lwdiv@divisor^0,f,c
  1893   000C24  3611               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1894   000C26  2A12               	incf	___lwdiv@counter^0,f,c
  1895   000C28                     l2510:
  1896   000C28  AE11               	btfss	(___lwdiv@divisor+1)^0,7,c
  1897   000C2A  EF19  F006         	goto	u1441
  1898   000C2E  EF1B  F006         	goto	u1440
  1899   000C32                     u1441:
  1900   000C32  EF10  F006         	goto	l2508
  1901   000C36                     u1440:
  1902   000C36                     l2512:
  1903   000C36  90D8               	bcf	status,0,c
  1904   000C38  3613               	rlcf	___lwdiv@quotient^0,f,c
  1905   000C3A  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1906   000C3C  5010               	movf	___lwdiv@divisor^0,w,c
  1907   000C3E  5C0E               	subwf	___lwdiv@dividend^0,w,c
  1908   000C40  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  1909   000C42  580F               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1910   000C44  A0D8               	btfss	status,0,c
  1911   000C46  EF27  F006         	goto	u1451
  1912   000C4A  EF29  F006         	goto	u1450
  1913   000C4E                     u1451:
  1914   000C4E  EF2E  F006         	goto	l2520
  1915   000C52                     u1450:
  1916   000C52  5010               	movf	___lwdiv@divisor^0,w,c
  1917   000C54  5E0E               	subwf	___lwdiv@dividend^0,f,c
  1918   000C56  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  1919   000C58  5A0F               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1920   000C5A  8013               	bsf	___lwdiv@quotient^0,0,c
  1921   000C5C                     l2520:
  1922   000C5C  90D8               	bcf	status,0,c
  1923   000C5E  3211               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1924   000C60  3210               	rrcf	___lwdiv@divisor^0,f,c
  1925   000C62  2E12               	decfsz	___lwdiv@counter^0,f,c
  1926   000C64  EF1B  F006         	goto	l2512
  1927   000C68                     l1023:
  1928   000C68  C013  F00E         	movff	___lwdiv@quotient,?___lwdiv
  1929   000C6C  C014  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1930   000C70  0012               	return		;funcret
  1931   000C72                     __end_of___lwdiv:
  1932                           	callstack 0
  1933                           
  1934 ;; *************** function _read_prec_or_width *****************
  1935 ;; Defined at:
  1936 ;;		line 1158 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  fmt             1   19[COMRAM] PTR PTR const unsigned c
  1939 ;;		 -> vfprintf@cfmt(1), 
  1940 ;;  ap              1   20[COMRAM] PTR PTR void [1]
  1941 ;;		 -> printf@ap(1), 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  c               1   21[COMRAM] unsigned char 
  1944 ;;  n               2   22[COMRAM] int 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  2   19[COMRAM] int 
  1947 ;; Registers used:
  1948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1954 ;;      Params:         2       0       0       0       0       0       0
  1955 ;;      Locals:         3       0       0       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0       0       0
  1957 ;;      Totals:         5       0       0       0       0       0       0
  1958 ;;Total ram usage:        5 bytes
  1959 ;; Hardware stack levels used: 1
  1960 ;; Hardware stack levels required when called: 6
  1961 ;; This function calls:
  1962 ;;		___wmul
  1963 ;; This function is called by:
  1964 ;;		_vfpfcnvrt
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text12
  1969   000A4E                     __ptext12:
  1970                           	callstack 0
  1971   000A4E                     _read_prec_or_width:
  1972                           	callstack 21
  1973   000A4E                     
  1974                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  1975   000A4E  0E00               	movlw	0
  1976   000A50  6E18               	movwf	(read_prec_or_width@n+1)^0,c
  1977   000A52  0E00               	movlw	0
  1978   000A54  6E17               	movwf	read_prec_or_width@n^0,c
  1979   000A56                     
  1980                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)[0] == '*
      +                          ') {
  1981   000A56  5014               	movf	read_prec_or_width@fmt^0,w,c
  1982   000A58  6ED9               	movwf	fsr2l,c
  1983   000A5A  6ADA               	clrf	fsr2h,c
  1984   000A5C  CFDF FFF6          	movff	indf2,tblptrl
  1985   000A60                     	if	1	;There is more than 1 active tblptr byte
  1986   000A60  0E06               	movlw	high __smallconst
  1987   000A62  6EF7               	movwf	tblptrh,c
  1988   000A64                     	endif
  1989   000A64                     	if	0	;tblptru may be non-zero
  1990   000A64                     	endif
  1991   000A64                     	if	0	;tblptru may be non-zero
  1992   000A64                     	endif
  1993   000A64  0008               	tblrd		*
  1994   000A66  50F5               	movf	tablat,w,c
  1995   000A68  0A2A               	xorlw	42
  1996   000A6A  A4D8               	btfss	status,2,c
  1997   000A6C  EF3A  F005         	goto	u1561
  1998   000A70  EF3C  F005         	goto	u1560
  1999   000A74                     u1561:
  2000   000A74  EF62  F005         	goto	l2594
  2001   000A78                     u1560:
  2002   000A78                     
  2003                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt;
  2004   000A78  5014               	movf	read_prec_or_width@fmt^0,w,c
  2005   000A7A  6ED9               	movwf	fsr2l,c
  2006   000A7C  6ADA               	clrf	fsr2h,c
  2007   000A7E  2ADF               	incf	indf2,f,c
  2008   000A80                     
  2009                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1162:         n = (*(int *)__
      +                          va_arg(*(int **)*ap, (int)0));
  2010   000A80  5015               	movf	read_prec_or_width@ap^0,w,c
  2011   000A82  6ED9               	movwf	fsr2l,c
  2012   000A84  6ADA               	clrf	fsr2h,c
  2013   000A86  0E02               	movlw	2
  2014   000A88  26DF               	addwf	indf2,f,c
  2015   000A8A  5CDF               	subwf	indf2,w,c
  2016   000A8C  6ED9               	movwf	fsr2l,c
  2017   000A8E  6ADA               	clrf	fsr2h,c
  2018   000A90  CFDE F017          	movff	postinc2,read_prec_or_width@n
  2019   000A94  CFDE F018          	movff	postinc2,read_prec_or_width@n+1
  2020                           
  2021                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1163:     } else {
  2022   000A98  EF75  F005         	goto	l1245
  2023   000A9C                     l2590:
  2024                           
  2025                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1166:             n = n * 10 
      +                          + c;
  2026   000A9C  C017  F00E         	movff	read_prec_or_width@n,___wmul@multiplier
  2027   000AA0  C018  F00F         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2028   000AA4  0E00               	movlw	0
  2029   000AA6  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  2030   000AA8  0E0A               	movlw	10
  2031   000AAA  6E10               	movwf	___wmul@multiplicand^0,c
  2032   000AAC  EC26  F008         	call	___wmul	;wreg free
  2033   000AB0  5016               	movf	read_prec_or_width@c^0,w,c
  2034   000AB2  240E               	addwf	?___wmul^0,w,c
  2035   000AB4  6E17               	movwf	read_prec_or_width@n^0,c
  2036   000AB6  0E00               	movlw	0
  2037   000AB8  200F               	addwfc	(?___wmul+1)^0,w,c
  2038   000ABA  6E18               	movwf	(read_prec_or_width@n+1)^0,c
  2039   000ABC                     
  2040                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1167:             ++*fmt;
  2041   000ABC  5014               	movf	read_prec_or_width@fmt^0,w,c
  2042   000ABE  6ED9               	movwf	fsr2l,c
  2043   000AC0  6ADA               	clrf	fsr2h,c
  2044   000AC2  2ADF               	incf	indf2,f,c
  2045   000AC4                     l2594:
  2046                           
  2047                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1165:         while ((c = ((u
      +                          nsigned)(*fmt)[0]) - '0') < 10) {
  2048   000AC4  5014               	movf	read_prec_or_width@fmt^0,w,c
  2049   000AC6  6ED9               	movwf	fsr2l,c
  2050   000AC8  6ADA               	clrf	fsr2h,c
  2051   000ACA  CFDF FFF6          	movff	indf2,tblptrl
  2052   000ACE                     	if	1	;There is more than 1 active tblptr byte
  2053   000ACE  0E06               	movlw	high __smallconst
  2054   000AD0  6EF7               	movwf	tblptrh,c
  2055   000AD2                     	endif
  2056   000AD2                     	if	0	;tblptru may be non-zero
  2057   000AD2                     	endif
  2058   000AD2                     	if	0	;tblptru may be non-zero
  2059   000AD2                     	endif
  2060   000AD2  0008               	tblrd		*
  2061   000AD4  50F5               	movf	tablat,w,c
  2062   000AD6  0FD0               	addlw	208
  2063   000AD8  6E16               	movwf	read_prec_or_width@c^0,c
  2064   000ADA  0E09               	movlw	9
  2065   000ADC  6416               	cpfsgt	read_prec_or_width@c^0,c
  2066   000ADE  EF73  F005         	goto	u1571
  2067   000AE2  EF75  F005         	goto	u1570
  2068   000AE6                     u1571:
  2069   000AE6  EF4E  F005         	goto	l2590
  2070   000AEA                     u1570:
  2071   000AEA                     l1245:
  2072                           
  2073                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1170:     return n;
  2074   000AEA  C017  F014         	movff	read_prec_or_width@n,?_read_prec_or_width
  2075   000AEE  C018  F015         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2076   000AF2  0012               	return		;funcret
  2077   000AF4                     __end_of_read_prec_or_width:
  2078                           	callstack 0
  2079                           
  2080 ;; *************** function ___wmul *****************
  2081 ;; Defined at:
  2082 ;;		line 15 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  multiplier      2   13[COMRAM] unsigned int 
  2085 ;;  multiplicand    2   15[COMRAM] unsigned int 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  product         2   17[COMRAM] unsigned int 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  2   13[COMRAM] unsigned int 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0, prodl, prodh
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2097 ;;      Params:         4       0       0       0       0       0       0
  2098 ;;      Locals:         2       0       0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0
  2100 ;;      Totals:         6       0       0       0       0       0       0
  2101 ;;Total ram usage:        6 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; Hardware stack levels required when called: 5
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_read_prec_or_width
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text13
  2112   00104C                     __ptext13:
  2113                           	callstack 0
  2114   00104C                     ___wmul:
  2115                           	callstack 21
  2116   00104C  500E               	movf	___wmul@multiplier^0,w,c
  2117   00104E  0210               	mulwf	___wmul@multiplicand^0,c
  2118   001050  CFF3 F012          	movff	prodl,___wmul@product
  2119   001054  CFF4 F013          	movff	prodh,___wmul@product+1
  2120   001058  500E               	movf	___wmul@multiplier^0,w,c
  2121   00105A  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  2122   00105C  50F3               	movf	243,w,c
  2123   00105E  2613               	addwf	(___wmul@product+1)^0,f,c
  2124   001060  500F               	movf	(___wmul@multiplier+1)^0,w,c
  2125   001062  0210               	mulwf	___wmul@multiplicand^0,c
  2126   001064  50F3               	movf	243,w,c
  2127   001066  2613               	addwf	(___wmul@product+1)^0,f,c
  2128   001068  C012  F00E         	movff	___wmul@product,?___wmul
  2129   00106C  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  2130   001070  0012               	return		;funcret
  2131   001072                     __end_of___wmul:
  2132                           	callstack 0
  2133                           
  2134 ;; *************** function _TMR5_StartTimer *****************
  2135 ;; Defined at:
  2136 ;;		line 93 in file "mcc_generated_files/tmr5.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;		None
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		None
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2150 ;;      Params:         0       0       0       0       0       0       0
  2151 ;;      Locals:         0       0       0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0
  2153 ;;      Totals:         0       0       0       0       0       0       0
  2154 ;;Total ram usage:        0 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 5
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text14
  2165   0011D6                     __ptext14:
  2166                           	callstack 0
  2167   0011D6                     _TMR5_StartTimer:
  2168                           	callstack 25
  2169   0011D6                     
  2170                           ;mcc_generated_files/tmr5.c: 96:     T5CONbits.TMR5ON = 1;
  2171   0011D6  010F               	movlb	15	; () banked
  2172   0011D8  814E               	bsf	78,0,b	;volatile
  2173   0011DA                     
  2174                           ; BSR set to: 15
  2175   0011DA  0012               	return		;funcret
  2176   0011DC                     __end_of_TMR5_StartTimer:
  2177                           	callstack 0
  2178                           
  2179 ;; *************** function _SYSTEM_Initialize *****************
  2180 ;; Defined at:
  2181 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2195 ;;      Params:         0       0       0       0       0       0       0
  2196 ;;      Locals:         0       0       0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0
  2198 ;;      Totals:         0       0       0       0       0       0       0
  2199 ;;Total ram usage:        0 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 7
  2202 ;; This function calls:
  2203 ;;		_ADC_Initialize
  2204 ;;		_CCP5_Initialize
  2205 ;;		_EUSART1_Initialize
  2206 ;;		_EXT_INT_Initialize
  2207 ;;		_INTERRUPT_Initialize
  2208 ;;		_OSCILLATOR_Initialize
  2209 ;;		_PIN_MANAGER_Initialize
  2210 ;;		_TMR2_Initialize
  2211 ;;		_TMR5_Initialize
  2212 ;; This function is called by:
  2213 ;;		_main
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text15
  2218   001072                     __ptext15:
  2219                           	callstack 0
  2220   001072                     _SYSTEM_Initialize:
  2221                           	callstack 23
  2222   001072                     
  2223                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2224   001072  ECB4  F008         	call	_INTERRUPT_Initialize	;wreg free
  2225   001076                     
  2226                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2227   001076  ECE7  F007         	call	_PIN_MANAGER_Initialize	;wreg free
  2228   00107A                     
  2229                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2230   00107A  EC69  F008         	call	_OSCILLATOR_Initialize	;wreg free
  2231   00107E                     
  2232                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  2233   00107E  EC83  F008         	call	_ADC_Initialize	;wreg free
  2234   001082                     
  2235                           ;mcc_generated_files/mcc.c: 57:     CCP5_Initialize();
  2236   001082  ECAC  F008         	call	_CCP5_Initialize	;wreg free
  2237   001086                     
  2238                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  2239   001086  EC4C  F008         	call	_TMR2_Initialize	;wreg free
  2240   00108A                     
  2241                           ;mcc_generated_files/mcc.c: 59:     TMR5_Initialize();
  2242   00108A  ECA2  F007         	call	_TMR5_Initialize	;wreg free
  2243   00108E                     
  2244                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
  2245   00108E  EC8E  F008         	call	_EXT_INT_Initialize	;wreg free
  2246   001092                     
  2247                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  2248   001092  EC39  F006         	call	_EUSART1_Initialize	;wreg free
  2249   001096  0012               	return		;funcret
  2250   001098                     __end_of_SYSTEM_Initialize:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _TMR5_Initialize *****************
  2254 ;; Defined at:
  2255 ;;		line 64 in file "mcc_generated_files/tmr5.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2269 ;;      Params:         0       0       0       0       0       0       0
  2270 ;;      Locals:         0       0       0       0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0
  2272 ;;      Totals:         0       0       0       0       0       0       0
  2273 ;;Total ram usage:        0 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 6
  2276 ;; This function calls:
  2277 ;;		_TMR5_SetInterruptHandler
  2278 ;; This function is called by:
  2279 ;;		_SYSTEM_Initialize
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text16
  2284   000F44                     __ptext16:
  2285                           	callstack 0
  2286   000F44                     _TMR5_Initialize:
  2287                           	callstack 23
  2288   000F44                     
  2289                           ;mcc_generated_files/tmr5.c: 69:     T5GCON = 0x00;
  2290   000F44  0E00               	movlw	0
  2291   000F46  010F               	movlb	15	; () banked
  2292   000F48  6F4D               	movwf	77,b	;volatile
  2293                           
  2294                           ;mcc_generated_files/tmr5.c: 72:     TMR5H = 0x3C;
  2295   000F4A  0E3C               	movlw	60
  2296   000F4C  6F50               	movwf	80,b	;volatile
  2297                           
  2298                           ;mcc_generated_files/tmr5.c: 75:     TMR5L = 0xB0;
  2299   000F4E  0EB0               	movlw	176
  2300   000F50  6F4F               	movwf	79,b	;volatile
  2301   000F52                     
  2302                           ; BSR set to: 15
  2303                           ;mcc_generated_files/tmr5.c: 78:     timer5ReloadVal=TMR5;
  2304   000F52  CF4F F03F          	movff	3919,_timer5ReloadVal	;volatile
  2305   000F56  CF50 F040          	movff	3920,_timer5ReloadVal+1	;volatile
  2306   000F5A                     
  2307                           ; BSR set to: 15
  2308                           ;mcc_generated_files/tmr5.c: 81:     PIR5bits.TMR5IF = 0;
  2309   000F5A  927E               	bcf	126,1,c	;volatile
  2310   000F5C                     
  2311                           ; BSR set to: 15
  2312                           ;mcc_generated_files/tmr5.c: 84:     PIE5bits.TMR5IE = 1;
  2313   000F5C  827D               	bsf	125,1,c	;volatile
  2314   000F5E                     
  2315                           ; BSR set to: 15
  2316                           ;mcc_generated_files/tmr5.c: 87:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
  2317   000F5E  0EEC               	movlw	low _TMR5_DefaultInterruptHandler
  2318   000F60  6E0E               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  2319   000F62  0E11               	movlw	high _TMR5_DefaultInterruptHandler
  2320   000F64  6E0F               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  2321   000F66  ECBF  F008         	call	_TMR5_SetInterruptHandler	;wreg free
  2322   000F6A                     
  2323                           ;mcc_generated_files/tmr5.c: 90:     T5CON = 0x31;
  2324   000F6A  0E31               	movlw	49
  2325   000F6C  010F               	movlb	15	; () banked
  2326   000F6E  6F4E               	movwf	78,b	;volatile
  2327   000F70                     
  2328                           ; BSR set to: 15
  2329   000F70  0012               	return		;funcret
  2330   000F72                     __end_of_TMR5_Initialize:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function _TMR5_SetInterruptHandler *****************
  2334 ;; Defined at:
  2335 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  InterruptHan    2   13[COMRAM] PTR FTN()void 
  2338 ;;		 -> blinker(1), TMR5_DefaultInterruptHandler(1), 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;		None
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, status,2, status,0
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2350 ;;      Params:         2       0       0       0       0       0       0
  2351 ;;      Locals:         0       0       0       0       0       0       0
  2352 ;;      Temps:          0       0       0       0       0       0       0
  2353 ;;      Totals:         2       0       0       0       0       0       0
  2354 ;;Total ram usage:        2 bytes
  2355 ;; Hardware stack levels used: 1
  2356 ;; Hardware stack levels required when called: 5
  2357 ;; This function calls:
  2358 ;;		Nothing
  2359 ;; This function is called by:
  2360 ;;		_TMR5_Initialize
  2361 ;;		_main
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text17
  2366   00117E                     __ptext17:
  2367                           	callstack 0
  2368   00117E                     _TMR5_SetInterruptHandler:
  2369                           	callstack 25
  2370   00117E                     
  2371                           ;mcc_generated_files/tmr5.c: 187:     TMR5_InterruptHandler = InterruptHandler;
  2372   00117E  C00E  F03D         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
  2373   001182  C00F  F03E         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
  2374   001186  0012               	return		;funcret
  2375   001188                     __end_of_TMR5_SetInterruptHandler:
  2376                           	callstack 0
  2377                           
  2378 ;; *************** function _TMR2_Initialize *****************
  2379 ;; Defined at:
  2380 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2394 ;;      Params:         0       0       0       0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0
  2397 ;;      Totals:         0       0       0       0       0       0       0
  2398 ;;Total ram usage:        0 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 6
  2401 ;; This function calls:
  2402 ;;		_TMR2_SetInterruptHandler
  2403 ;; This function is called by:
  2404 ;;		_SYSTEM_Initialize
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text18
  2409   001098                     __ptext18:
  2410                           	callstack 0
  2411   001098                     _TMR2_Initialize:
  2412                           	callstack 23
  2413   001098                     
  2414                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x3E;
  2415   001098  0E3E               	movlw	62
  2416   00109A  6EBB               	movwf	187,c	;volatile
  2417                           
  2418                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  2419   00109C  0E00               	movlw	0
  2420   00109E  6EBC               	movwf	188,c	;volatile
  2421   0010A0                     
  2422                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  2423   0010A0  929E               	bcf	158,1,c	;volatile
  2424   0010A2                     
  2425                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  2426   0010A2  829D               	bsf	157,1,c	;volatile
  2427   0010A4                     
  2428                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2429   0010A4  0EEE               	movlw	low _TMR2_DefaultInterruptHandler
  2430   0010A6  6E0E               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
  2431   0010A8  0E11               	movlw	high _TMR2_DefaultInterruptHandler
  2432   0010AA  6E0F               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
  2433   0010AC  ECC4  F008         	call	_TMR2_SetInterruptHandler	;wreg free
  2434   0010B0                     
  2435                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x7E;
  2436   0010B0  0E7E               	movlw	126
  2437   0010B2  6EBA               	movwf	186,c	;volatile
  2438   0010B4  0012               	return		;funcret
  2439   0010B6                     __end_of_TMR2_Initialize:
  2440                           	callstack 0
  2441                           
  2442 ;; *************** function _TMR2_SetInterruptHandler *****************
  2443 ;; Defined at:
  2444 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  InterruptHan    2   13[COMRAM] PTR FTN()void 
  2447 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;		None
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg, status,2, status,0
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2459 ;;      Params:         2       0       0       0       0       0       0
  2460 ;;      Locals:         0       0       0       0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0
  2462 ;;      Totals:         2       0       0       0       0       0       0
  2463 ;;Total ram usage:        2 bytes
  2464 ;; Hardware stack levels used: 1
  2465 ;; Hardware stack levels required when called: 5
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_TMR2_Initialize
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text19
  2474   001188                     __ptext19:
  2475                           	callstack 0
  2476   001188                     _TMR2_SetInterruptHandler:
  2477                           	callstack 23
  2478   001188                     
  2479                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  2480   001188  C00E  F047         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  2481   00118C  C00F  F048         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  2482   001190  0012               	return		;funcret
  2483   001192                     __end_of_TMR2_SetInterruptHandler:
  2484                           	callstack 0
  2485                           
  2486 ;; *************** function _PIN_MANAGER_Initialize *****************
  2487 ;; Defined at:
  2488 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;		None
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2502 ;;      Params:         0       0       0       0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0
  2505 ;;      Totals:         0       0       0       0       0       0       0
  2506 ;;Total ram usage:        0 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; Hardware stack levels required when called: 5
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_SYSTEM_Initialize
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text20
  2517   000FCE                     __ptext20:
  2518                           	callstack 0
  2519   000FCE                     _PIN_MANAGER_Initialize:
  2520                           	callstack 24
  2521   000FCE                     
  2522                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2523   000FCE  0E00               	movlw	0
  2524   000FD0  6E89               	movwf	137,c	;volatile
  2525                           
  2526                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2527   000FD2  0E00               	movlw	0
  2528   000FD4  6E8A               	movwf	138,c	;volatile
  2529                           
  2530                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2531   000FD6  0E00               	movlw	0
  2532   000FD8  6E8B               	movwf	139,c	;volatile
  2533   000FDA                     
  2534                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  2535   000FDA  6892               	setf	146,c	;volatile
  2536   000FDC                     
  2537                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  2538   000FDC  6893               	setf	147,c	;volatile
  2539                           
  2540                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xB1;
  2541   000FDE  0EB1               	movlw	177
  2542   000FE0  6E94               	movwf	148,c	;volatile
  2543                           
  2544                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x30;
  2545   000FE2  0E30               	movlw	48
  2546   000FE4  010F               	movlb	15	; () banked
  2547   000FE6  6F3A               	movwf	58,b	;volatile
  2548                           
  2549                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x32;
  2550   000FE8  0E32               	movlw	50
  2551   000FEA  6F39               	movwf	57,b	;volatile
  2552                           
  2553                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  2554   000FEC  0E2F               	movlw	47
  2555   000FEE  6F38               	movwf	56,b	;volatile
  2556                           
  2557                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  2558   000FF0  0E00               	movlw	0
  2559   000FF2  6E61               	movwf	97,c	;volatile
  2560   000FF4                     
  2561                           ; BSR set to: 15
  2562                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  2563   000FF4  8EF1               	bsf	241,7,c	;volatile
  2564   000FF6                     
  2565                           ; BSR set to: 15
  2566   000FF6  0012               	return		;funcret
  2567   000FF8                     __end_of_PIN_MANAGER_Initialize:
  2568                           	callstack 0
  2569                           
  2570 ;; *************** function _OSCILLATOR_Initialize *****************
  2571 ;; Defined at:
  2572 ;;		line 64 in file "mcc_generated_files/mcc.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2586 ;;      Params:         0       0       0       0       0       0       0
  2587 ;;      Locals:         0       0       0       0       0       0       0
  2588 ;;      Temps:          0       0       0       0       0       0       0
  2589 ;;      Totals:         0       0       0       0       0       0       0
  2590 ;;Total ram usage:        0 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 5
  2593 ;; This function calls:
  2594 ;;		Nothing
  2595 ;; This function is called by:
  2596 ;;		_SYSTEM_Initialize
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text21
  2601   0010D2                     __ptext21:
  2602                           	callstack 0
  2603   0010D2                     _OSCILLATOR_Initialize:
  2604                           	callstack 24
  2605   0010D2                     
  2606                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x70;
  2607   0010D2  0E70               	movlw	112
  2608   0010D4  6ED3               	movwf	211,c	;volatile
  2609                           
  2610                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x04;
  2611   0010D6  0E04               	movlw	4
  2612   0010D8  6ED2               	movwf	210,c	;volatile
  2613                           
  2614                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x40;
  2615   0010DA  0E40               	movlw	64
  2616   0010DC  6E9B               	movwf	155,c	;volatile
  2617   0010DE                     l216:
  2618                           
  2619                           ;mcc_generated_files/mcc.c: 73:     while(PLLRDY == 0)
  2620   0010DE  AED2               	btfss	4050,7,c	;volatile
  2621   0010E0  EF74  F008         	goto	u371
  2622   0010E4  EF76  F008         	goto	u370
  2623   0010E8                     u371:
  2624   0010E8  EF6F  F008         	goto	l216
  2625   0010EC                     u370:
  2626   0010EC  0012               	return		;funcret
  2627   0010EE                     __end_of_OSCILLATOR_Initialize:
  2628                           	callstack 0
  2629                           
  2630 ;; *************** function _INTERRUPT_Initialize *****************
  2631 ;; Defined at:
  2632 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		None
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2646 ;;      Params:         0       0       0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0       0
  2649 ;;      Totals:         0       0       0       0       0       0       0
  2650 ;;Total ram usage:        0 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; Hardware stack levels required when called: 5
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_SYSTEM_Initialize
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text22
  2661   001168                     __ptext22:
  2662                           	callstack 0
  2663   001168                     _INTERRUPT_Initialize:
  2664                           	callstack 24
  2665   001168                     
  2666                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  2667   001168  8ED0               	bsf	208,7,c	;volatile
  2668                           
  2669                           ;mcc_generated_files/interrupt_manager.c: 62:     IPR1bits.TX1IP = 1;
  2670   00116A  889F               	bsf	159,4,c	;volatile
  2671                           
  2672                           ;mcc_generated_files/interrupt_manager.c: 65:     IPR1bits.RC1IP = 1;
  2673   00116C  8A9F               	bsf	159,5,c	;volatile
  2674                           
  2675                           ;mcc_generated_files/interrupt_manager.c: 68:     IPR5bits.TMR5IP = 1;
  2676   00116E  827F               	bsf	127,1,c	;volatile
  2677                           
  2678                           ;mcc_generated_files/interrupt_manager.c: 71:     IPR1bits.TMR2IP = 1;
  2679   001170  829F               	bsf	159,1,c	;volatile
  2680   001172  0012               	return		;funcret
  2681   001174                     __end_of_INTERRUPT_Initialize:
  2682                           	callstack 0
  2683                           
  2684 ;; *************** function _EXT_INT_Initialize *****************
  2685 ;; Defined at:
  2686 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;		None
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2700 ;;      Params:         0       0       0       0       0       0       0
  2701 ;;      Locals:         0       0       0       0       0       0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0
  2703 ;;      Totals:         0       0       0       0       0       0       0
  2704 ;;Total ram usage:        0 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; Hardware stack levels required when called: 6
  2707 ;; This function calls:
  2708 ;;		_INT0_SetInterruptHandler
  2709 ;; This function is called by:
  2710 ;;		_SYSTEM_Initialize
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text23
  2715   00111C                     __ptext23:
  2716                           	callstack 0
  2717   00111C                     _EXT_INT_Initialize:
  2718                           	callstack 23
  2719   00111C                     
  2720                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
  2721   00111C  92F2               	bcf	242,1,c	;volatile
  2722                           
  2723                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 0);
  2724   00111E  9CF1               	bcf	241,6,c	;volatile
  2725   001120                     
  2726                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
  2727   001120  0EF0               	movlw	low _INT0_DefaultInterruptHandler
  2728   001122  6E0E               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  2729   001124  0E11               	movlw	high _INT0_DefaultInterruptHandler
  2730   001126  6E0F               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  2731   001128  ECC9  F008         	call	_INT0_SetInterruptHandler	;wreg free
  2732   00112C                     
  2733                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
  2734   00112C  88F2               	bsf	242,4,c	;volatile
  2735   00112E  0012               	return		;funcret
  2736   001130                     __end_of_EXT_INT_Initialize:
  2737                           	callstack 0
  2738                           
  2739 ;; *************** function _INT0_SetInterruptHandler *****************
  2740 ;; Defined at:
  2741 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  InterruptHan    2   13[COMRAM] PTR FTN()void 
  2744 ;;		 -> INT0_DefaultInterruptHandler(1), 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2756 ;;      Params:         2       0       0       0       0       0       0
  2757 ;;      Locals:         0       0       0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0
  2759 ;;      Totals:         2       0       0       0       0       0       0
  2760 ;;Total ram usage:        2 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; Hardware stack levels required when called: 5
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_EXT_INT_Initialize
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text24
  2771   001192                     __ptext24:
  2772                           	callstack 0
  2773   001192                     _INT0_SetInterruptHandler:
  2774                           	callstack 23
  2775   001192                     
  2776                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
  2777   001192  C00E  F045         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  2778   001196  C00F  F046         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  2779   00119A  0012               	return		;funcret
  2780   00119C                     __end_of_INT0_SetInterruptHandler:
  2781                           	callstack 0
  2782                           
  2783 ;; *************** function _EUSART1_Initialize *****************
  2784 ;; Defined at:
  2785 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2799 ;;      Params:         0       0       0       0       0       0       0
  2800 ;;      Locals:         0       0       0       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0       0       0
  2802 ;;      Totals:         0       0       0       0       0       0       0
  2803 ;;Total ram usage:        0 bytes
  2804 ;; Hardware stack levels used: 1
  2805 ;; Hardware stack levels required when called: 6
  2806 ;; This function calls:
  2807 ;;		_EUSART1_SetErrorHandler
  2808 ;;		_EUSART1_SetFramingErrorHandler
  2809 ;;		_EUSART1_SetOverrunErrorHandler
  2810 ;;		_EUSART1_SetRxInterruptHandler
  2811 ;;		_EUSART1_SetTxInterruptHandler
  2812 ;; This function is called by:
  2813 ;;		_SYSTEM_Initialize
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text25
  2818   000C72                     __ptext25:
  2819                           	callstack 0
  2820   000C72                     _EUSART1_Initialize:
  2821                           	callstack 23
  2822   000C72                     
  2823                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  2824   000C72  9A9D               	bcf	157,5,c	;volatile
  2825   000C74                     
  2826                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2827   000C74  0E9E               	movlw	low _EUSART1_Receive_ISR
  2828   000C76  6E0E               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  2829   000C78  0E09               	movlw	high _EUSART1_Receive_ISR
  2830   000C7A  6E0F               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  2831   000C7C  ECD3  F008         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2832   000C80                     
  2833                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  2834   000C80  989D               	bcf	157,4,c	;volatile
  2835                           
  2836                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  2837   000C82  0E6C               	movlw	low _EUSART1_Transmit_ISR
  2838   000C84  6E0E               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  2839   000C86  0E0E               	movlw	high _EUSART1_Transmit_ISR
  2840   000C88  6E0F               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  2841   000C8A  ECCE  F008         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2842   000C8E                     
  2843                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  2844   000C8E  0E08               	movlw	8
  2845   000C90  6EB8               	movwf	184,c	;volatile
  2846   000C92                     
  2847                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  2848   000C92  0E90               	movlw	144
  2849   000C94  6EAB               	movwf	171,c	;volatile
  2850   000C96                     
  2851                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  2852   000C96  0E24               	movlw	36
  2853   000C98  6EAC               	movwf	172,c	;volatile
  2854   000C9A                     
  2855                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x8A;
  2856   000C9A  0E8A               	movlw	138
  2857   000C9C  6EAF               	movwf	175,c	;volatile
  2858   000C9E                     
  2859                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
  2860   000C9E  0E00               	movlw	0
  2861   000CA0  6EB0               	movwf	176,c	;volatile
  2862   000CA2                     
  2863                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2864   000CA2  0EF2               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2865   000CA4  6E0E               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2866   000CA6  0E11               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2867   000CA8  6E0F               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2868   000CAA  ECDD  F008         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2869   000CAE                     
  2870                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2871   000CAE  0EDC               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2872   000CB0  6E0E               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2873   000CB2  0E11               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2874   000CB4  6E0F               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2875   000CB6  ECD8  F008         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2876   000CBA                     
  2877                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2878   000CBA  0EE2               	movlw	low _EUSART1_DefaultErrorHandler
  2879   000CBC  6E0E               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2880   000CBE  0E11               	movlw	high _EUSART1_DefaultErrorHandler
  2881   000CC0  6E0F               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2882   000CC2  ECE2  F008         	call	_EUSART1_SetErrorHandler	;wreg free
  2883                           
  2884                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  2885   000CC6  0E00               	movlw	0
  2886   000CC8  6E4B               	movwf	_eusart1RxLastError^0,c	;volatile
  2887                           
  2888                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  2889   000CCA  0E00               	movlw	0
  2890   000CCC  6E51               	movwf	_eusart1TxHead^0,c	;volatile
  2891                           
  2892                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  2893   000CCE  0E00               	movlw	0
  2894   000CD0  6E50               	movwf	_eusart1TxTail^0,c	;volatile
  2895                           
  2896                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  2897   000CD2  0E40               	movlw	64
  2898   000CD4  6E4F               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  2899                           
  2900                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  2901   000CD6  0E00               	movlw	0
  2902   000CD8  6E4E               	movwf	_eusart1RxHead^0,c	;volatile
  2903                           
  2904                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  2905   000CDA  0E00               	movlw	0
  2906   000CDC  6E4D               	movwf	_eusart1RxTail^0,c	;volatile
  2907                           
  2908                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2909   000CDE  0E00               	movlw	0
  2910   000CE0  6E4C               	movwf	_eusart1RxCount^0,c	;volatile
  2911   000CE2                     
  2912                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  2913   000CE2  8A9D               	bsf	157,5,c	;volatile
  2914   000CE4  0012               	return		;funcret
  2915   000CE6                     __end_of_EUSART1_Initialize:
  2916                           	callstack 0
  2917                           
  2918 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2919 ;; Defined at:
  2920 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  interruptHan    2   13[COMRAM] PTR FTN()void 
  2923 ;;		 -> EUSART1_Transmit_ISR(1), 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2935 ;;      Params:         2       0       0       0       0       0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0
  2938 ;;      Totals:         2       0       0       0       0       0       0
  2939 ;;Total ram usage:        2 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 5
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_EUSART1_Initialize
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text26
  2950   00119C                     __ptext26:
  2951                           	callstack 0
  2952   00119C                     _EUSART1_SetTxInterruptHandler:
  2953                           	callstack 23
  2954   00119C                     
  2955                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2956   00119C  C00E  F043         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2957   0011A0  C00F  F044         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2958   0011A4  0012               	return		;funcret
  2959   0011A6                     __end_of_EUSART1_SetTxInterruptHandler:
  2960                           	callstack 0
  2961                           
  2962 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2963 ;; Defined at:
  2964 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  interruptHan    2   13[COMRAM] PTR FTN()void 
  2967 ;;		 -> EUSART1_Receive_ISR(1), 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2979 ;;      Params:         2       0       0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0
  2982 ;;      Totals:         2       0       0       0       0       0       0
  2983 ;;Total ram usage:        2 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 5
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_EUSART1_Initialize
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text27
  2994   0011A6                     __ptext27:
  2995                           	callstack 0
  2996   0011A6                     _EUSART1_SetRxInterruptHandler:
  2997                           	callstack 23
  2998   0011A6                     
  2999                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3000   0011A6  C00E  F041         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3001   0011AA  C00F  F042         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3002   0011AE  0012               	return		;funcret
  3003   0011B0                     __end_of_EUSART1_SetRxInterruptHandler:
  3004                           	callstack 0
  3005                           
  3006 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3007 ;; Defined at:
  3008 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  interruptHan    2   13[COMRAM] PTR FTN()void 
  3011 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3023 ;;      Params:         2       0       0       0       0       0       0
  3024 ;;      Locals:         0       0       0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0
  3026 ;;      Totals:         2       0       0       0       0       0       0
  3027 ;;Total ram usage:        2 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; Hardware stack levels required when called: 5
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_EUSART1_Initialize
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text28
  3038   0011B0                     __ptext28:
  3039                           	callstack 0
  3040   0011B0                     _EUSART1_SetOverrunErrorHandler:
  3041                           	callstack 23
  3042   0011B0                     
  3043                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  3044   0011B0  C00E  F0A8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3045   0011B4  C00F  F0A9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3046   0011B8  0012               	return		;funcret
  3047   0011BA                     __end_of_EUSART1_SetOverrunErrorHandler:
  3048                           	callstack 0
  3049                           
  3050 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3051 ;; Defined at:
  3052 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  interruptHan    2   13[COMRAM] PTR FTN()void 
  3055 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;		None
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3067 ;;      Params:         2       0       0       0       0       0       0
  3068 ;;      Locals:         0       0       0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0
  3070 ;;      Totals:         2       0       0       0       0       0       0
  3071 ;;Total ram usage:        2 bytes
  3072 ;; Hardware stack levels used: 1
  3073 ;; Hardware stack levels required when called: 5
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_EUSART1_Initialize
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text29
  3082   0011BA                     __ptext29:
  3083                           	callstack 0
  3084   0011BA                     _EUSART1_SetFramingErrorHandler:
  3085                           	callstack 23
  3086   0011BA                     
  3087                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  3088   0011BA  C00E  F0AA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3089   0011BE  C00F  F0AB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3090   0011C2  0012               	return		;funcret
  3091   0011C4                     __end_of_EUSART1_SetFramingErrorHandler:
  3092                           	callstack 0
  3093                           
  3094 ;; *************** function _EUSART1_SetErrorHandler *****************
  3095 ;; Defined at:
  3096 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  interruptHan    2   13[COMRAM] PTR FTN()void 
  3099 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3111 ;;      Params:         2       0       0       0       0       0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0
  3114 ;;      Totals:         2       0       0       0       0       0       0
  3115 ;;Total ram usage:        2 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; Hardware stack levels required when called: 5
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_EUSART1_Initialize
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text30
  3126   0011C4                     __ptext30:
  3127                           	callstack 0
  3128   0011C4                     _EUSART1_SetErrorHandler:
  3129                           	callstack 23
  3130   0011C4                     
  3131                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  3132   0011C4  C00E  F0A6         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3133   0011C8  C00F  F0A7         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3134   0011CC  0012               	return		;funcret
  3135   0011CE                     __end_of_EUSART1_SetErrorHandler:
  3136                           	callstack 0
  3137                           
  3138 ;; *************** function _CCP5_Initialize *****************
  3139 ;; Defined at:
  3140 ;;		line 49 in file "mcc_generated_files/ccp5.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3154 ;;      Params:         0       0       0       0       0       0       0
  3155 ;;      Locals:         0       0       0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0
  3157 ;;      Totals:         0       0       0       0       0       0       0
  3158 ;;Total ram usage:        0 bytes
  3159 ;; Hardware stack levels used: 1
  3160 ;; Hardware stack levels required when called: 5
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_SYSTEM_Initialize
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text31
  3169   001158                     __ptext31:
  3170                           	callstack 0
  3171   001158                     _CCP5_Initialize:
  3172                           	callstack 24
  3173   001158                     
  3174                           ;mcc_generated_files/ccp5.c: 53:  CCP5CON = 0x00;
  3175   001158  0E00               	movlw	0
  3176   00115A  010F               	movlb	15	; () banked
  3177   00115C  6F54               	movwf	84,b	;volatile
  3178                           
  3179                           ;mcc_generated_files/ccp5.c: 56:  CCPR5L = 0x00;
  3180   00115E  0E00               	movlw	0
  3181   001160  6F55               	movwf	85,b	;volatile
  3182                           
  3183                           ;mcc_generated_files/ccp5.c: 59:  CCPR5H = 0x00;
  3184   001162  0E00               	movlw	0
  3185   001164  6F56               	movwf	86,b	;volatile
  3186   001166                     
  3187                           ; BSR set to: 15
  3188   001166  0012               	return		;funcret
  3189   001168                     __end_of_CCP5_Initialize:
  3190                           	callstack 0
  3191                           
  3192 ;; *************** function _ADC_Initialize *****************
  3193 ;; Defined at:
  3194 ;;		line 62 in file "mcc_generated_files/adc.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3208 ;;      Params:         0       0       0       0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0
  3211 ;;      Totals:         0       0       0       0       0       0       0
  3212 ;;Total ram usage:        0 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; Hardware stack levels required when called: 5
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_SYSTEM_Initialize
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text32
  3223   001106                     __ptext32:
  3224                           	callstack 0
  3225   001106                     _ADC_Initialize:
  3226                           	callstack 24
  3227   001106                     
  3228                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  3229   001106  0E00               	movlw	0
  3230   001108  6EC1               	movwf	193,c	;volatile
  3231                           
  3232                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x36;
  3233   00110A  0E36               	movlw	54
  3234   00110C  6EC0               	movwf	192,c	;volatile
  3235                           
  3236                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  3237   00110E  0E00               	movlw	0
  3238   001110  6EC3               	movwf	195,c	;volatile
  3239                           
  3240                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  3241   001112  0E00               	movlw	0
  3242   001114  6EC4               	movwf	196,c	;volatile
  3243                           
  3244                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  3245   001116  0E01               	movlw	1
  3246   001118  6EC2               	movwf	194,c	;volatile
  3247   00111A  0012               	return		;funcret
  3248   00111C                     __end_of_ADC_Initialize:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function _ADC_SelectChannel *****************
  3252 ;; Defined at:
  3253 ;;		line 83 in file "mcc_generated_files/adc.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  channel         1    wreg     enum E5762
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  channel         1   14[COMRAM] enum E5762
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3267 ;;      Params:         0       0       0       0       0       0       0
  3268 ;;      Locals:         1       0       0       0       0       0       0
  3269 ;;      Temps:          1       0       0       0       0       0       0
  3270 ;;      Totals:         2       0       0       0       0       0       0
  3271 ;;Total ram usage:        2 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 5
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text33
  3282   0010EE                     __ptext33:
  3283                           	callstack 0
  3284   0010EE                     _ADC_SelectChannel:
  3285                           	callstack 25
  3286                           
  3287                           ;incstack = 0
  3288                           ;ADC_SelectChannel@channel stored from wreg
  3289   0010EE  6E0F               	movwf	ADC_SelectChannel@channel^0,c
  3290   0010F0                     
  3291                           ;mcc_generated_files/adc.c: 83: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 84: {;mcc_generated_files/adc.c: 86:     ADCON0bits.CHS = channel;
  3292   0010F0  C00F  F00E         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  3293   0010F4  460E               	rlncf	??_ADC_SelectChannel^0,f,c
  3294   0010F6  460E               	rlncf	??_ADC_SelectChannel^0,f,c
  3295   0010F8  50C2               	movf	194,w,c	;volatile
  3296   0010FA  180E               	xorwf	??_ADC_SelectChannel^0,w,c
  3297   0010FC  0B83               	andlw	-125
  3298   0010FE  180E               	xorwf	??_ADC_SelectChannel^0,w,c
  3299   001100  6EC2               	movwf	194,c	;volatile
  3300   001102                     
  3301                           ;mcc_generated_files/adc.c: 88:     ADCON0bits.ADON = 1;
  3302   001102  80C2               	bsf	194,0,c	;volatile
  3303   001104  0012               	return		;funcret
  3304   001106                     __end_of_ADC_SelectChannel:
  3305                           	callstack 0
  3306                           
  3307 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  3308 ;; Defined at:
  3309 ;;		line 76 in file "mcc_generated_files/interrupt_manager.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3323 ;;      Params:         0       0       0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0
  3325 ;;      Temps:          4       0       0       0       0       0       0
  3326 ;;      Totals:         4       0       0       0       0       0       0
  3327 ;;Total ram usage:        4 bytes
  3328 ;; Hardware stack levels used: 1
  3329 ;; Hardware stack levels required when called: 4
  3330 ;; This function calls:
  3331 ;;		NULL
  3332 ;;		_EUSART1_Receive_ISR
  3333 ;;		_EUSART1_Transmit_ISR
  3334 ;;		_INT0_ISR
  3335 ;;		_TMR2_ISR
  3336 ;;		_TMR5_ISR
  3337 ;; This function is called by:
  3338 ;;		Interrupt level 2
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	intcode
  3343   000008                     __pintcode:
  3344                           	callstack 0
  3345   000008                     _INTERRUPT_InterruptManagerHigh:
  3346                           	callstack 17
  3347                           
  3348                           ;incstack = 0
  3349   000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3350   00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  3351   00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  3352   000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+2
  3353   000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+3
  3354   00001A                     
  3355                           ;mcc_generated_files/interrupt_manager.c: 79:     if(INTCONbits.INT0IE == 1 && INTCONbit
      +                          s.INT0IF == 1)
  3356   00001A  A8F2               	btfss	242,4,c	;volatile
  3357   00001C  EF12  F000         	goto	i2u122_41
  3358   000020  EF14  F000         	goto	i2u122_40
  3359   000024                     i2u122_41:
  3360   000024  EF1F  F000         	goto	i2l174
  3361   000028                     i2u122_40:
  3362   000028  A2F2               	btfss	242,1,c	;volatile
  3363   00002A  EF19  F000         	goto	i2u123_41
  3364   00002E  EF1B  F000         	goto	i2u123_40
  3365   000032                     i2u123_41:
  3366   000032  EF1F  F000         	goto	i2l174
  3367   000036                     i2u123_40:
  3368   000036                     
  3369                           ;mcc_generated_files/interrupt_manager.c: 80:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 81:         INT0_ISR();
  3370   000036  ECE7  F008         	call	_INT0_ISR	;wreg free
  3371                           
  3372                           ;mcc_generated_files/interrupt_manager.c: 82:     }
  3373   00003A  EF7D  F000         	goto	i2l184
  3374   00003E                     i2l174:
  3375   00003E  A89D               	btfss	157,4,c	;volatile
  3376   000040  EF24  F000         	goto	i2u124_41
  3377   000044  EF26  F000         	goto	i2u124_40
  3378   000048                     i2u124_41:
  3379   000048  EF3C  F000         	goto	i2l176
  3380   00004C                     i2u124_40:
  3381   00004C  A89E               	btfss	158,4,c	;volatile
  3382   00004E  EF2B  F000         	goto	i2u125_41
  3383   000052  EF2D  F000         	goto	i2u125_40
  3384   000056                     i2u125_41:
  3385   000056  EF3C  F000         	goto	i2l176
  3386   00005A                     i2u125_40:
  3387   00005A                     
  3388                           ;mcc_generated_files/interrupt_manager.c: 84:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 85:         EUSART1_TxDefaultInterruptHandler();
  3389   00005A  D802               	call	i2u126_48
  3390   00005C  EF3A  F000         	goto	i2u126_49
  3391   000060                     i2u126_48:
  3392   000060  0005               	push	
  3393   000062  6EFA               	movwf	pclath,c
  3394   000064  5043               	movf	_EUSART1_TxDefaultInterruptHandler^0,w,c
  3395   000066  6EFD               	movwf	tosl,c
  3396   000068  5044               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^0,w,c
  3397   00006A  6EFE               	movwf	tosh,c
  3398   00006C  50F8               	movf	tblptru,w,c
  3399   00006E  6EFF               	movwf	tosu,c
  3400   000070  50FA               	movf	pclath,w,c
  3401   000072  0012               	return		;indir
  3402   000074                     i2u126_49:
  3403                           
  3404                           ;mcc_generated_files/interrupt_manager.c: 86:     }
  3405   000074  EF7D  F000         	goto	i2l184
  3406   000078                     i2l176:
  3407   000078  AA9D               	btfss	157,5,c	;volatile
  3408   00007A  EF41  F000         	goto	i2u127_41
  3409   00007E  EF43  F000         	goto	i2u127_40
  3410   000082                     i2u127_41:
  3411   000082  EF59  F000         	goto	i2l178
  3412   000086                     i2u127_40:
  3413   000086  AA9E               	btfss	158,5,c	;volatile
  3414   000088  EF48  F000         	goto	i2u128_41
  3415   00008C  EF4A  F000         	goto	i2u128_40
  3416   000090                     i2u128_41:
  3417   000090  EF59  F000         	goto	i2l178
  3418   000094                     i2u128_40:
  3419   000094                     
  3420                           ;mcc_generated_files/interrupt_manager.c: 88:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 89:         EUSART1_RxDefaultInterruptHandler();
  3421   000094  D802               	call	i2u129_48
  3422   000096  EF57  F000         	goto	i2u129_49
  3423   00009A                     i2u129_48:
  3424   00009A  0005               	push	
  3425   00009C  6EFA               	movwf	pclath,c
  3426   00009E  5041               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  3427   0000A0  6EFD               	movwf	tosl,c
  3428   0000A2  5042               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  3429   0000A4  6EFE               	movwf	tosh,c
  3430   0000A6  50F8               	movf	tblptru,w,c
  3431   0000A8  6EFF               	movwf	tosu,c
  3432   0000AA  50FA               	movf	pclath,w,c
  3433   0000AC  0012               	return		;indir
  3434   0000AE                     i2u129_49:
  3435                           
  3436                           ;mcc_generated_files/interrupt_manager.c: 90:     }
  3437   0000AE  EF7D  F000         	goto	i2l184
  3438   0000B2                     i2l178:
  3439   0000B2  A27D               	btfss	125,1,c	;volatile
  3440   0000B4  EF5E  F000         	goto	i2u130_41
  3441   0000B8  EF60  F000         	goto	i2u130_40
  3442   0000BC                     i2u130_41:
  3443   0000BC  EF6B  F000         	goto	i2l180
  3444   0000C0                     i2u130_40:
  3445   0000C0  A27E               	btfss	126,1,c	;volatile
  3446   0000C2  EF65  F000         	goto	i2u131_41
  3447   0000C6  EF67  F000         	goto	i2u131_40
  3448   0000CA                     i2u131_41:
  3449   0000CA  EF6B  F000         	goto	i2l180
  3450   0000CE                     i2u131_40:
  3451   0000CE                     
  3452                           ;mcc_generated_files/interrupt_manager.c: 92:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 93:         TMR5_ISR();
  3453   0000CE  EC56  F007         	call	_TMR5_ISR	;wreg free
  3454                           
  3455                           ;mcc_generated_files/interrupt_manager.c: 94:     }
  3456   0000D2  EF7D  F000         	goto	i2l184
  3457   0000D6                     i2l180:
  3458   0000D6  A29D               	btfss	157,1,c	;volatile
  3459   0000D8  EF70  F000         	goto	i2u132_41
  3460   0000DC  EF72  F000         	goto	i2u132_40
  3461   0000E0                     i2u132_41:
  3462   0000E0  EF7D  F000         	goto	i2l179
  3463   0000E4                     i2u132_40:
  3464   0000E4  A29E               	btfss	158,1,c	;volatile
  3465   0000E6  EF77  F000         	goto	i2u133_41
  3466   0000EA  EF79  F000         	goto	i2u133_40
  3467   0000EE                     i2u133_41:
  3468   0000EE  EF7D  F000         	goto	i2l179
  3469   0000F2                     i2u133_40:
  3470   0000F2                     
  3471                           ;mcc_generated_files/interrupt_manager.c: 96:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 97:         TMR2_ISR();
  3472   0000F2  EC8A  F007         	call	_TMR2_ISR	;wreg free
  3473                           
  3474                           ;mcc_generated_files/interrupt_manager.c: 98:     }
  3475   0000F6  EF7D  F000         	goto	i2l184
  3476   0000FA                     i2l179:
  3477   0000FA                     i2l184:
  3478   0000FA  C00D  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr2h
  3479   0000FE  C00C  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr2l
  3480   000102  C00B  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  3481   000106  C00A  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  3482   00010A  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3483   00010C  0011               	retfie		f
  3484   00010E                     __end_of_INTERRUPT_InterruptManagerHigh:
  3485                           	callstack 0
  3486                           
  3487 ;; *************** function _TMR5_ISR *****************
  3488 ;; Defined at:
  3489 ;;		line 158 in file "mcc_generated_files/tmr5.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3503 ;;      Params:         0       0       0       0       0       0       0
  3504 ;;      Locals:         0       0       0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0
  3506 ;;      Totals:         0       0       0       0       0       0       0
  3507 ;;Total ram usage:        0 bytes
  3508 ;; Hardware stack levels used: 1
  3509 ;; Hardware stack levels required when called: 3
  3510 ;; This function calls:
  3511 ;;		_TMR5_CallBack
  3512 ;;		_TMR5_WriteTimer
  3513 ;; This function is called by:
  3514 ;;		_INTERRUPT_InterruptManagerHigh
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text35
  3519   000EAC                     __ptext35:
  3520                           	callstack 0
  3521   000EAC                     _TMR5_ISR:
  3522                           	callstack 17
  3523   000EAC                     
  3524                           ;mcc_generated_files/tmr5.c: 160:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr5.c: 163:     PIR5bits.TMR5IF = 0;
  3525   000EAC  927E               	bcf	126,1,c	;volatile
  3526   000EAE                     
  3527                           ;mcc_generated_files/tmr5.c: 164:     TMR5_WriteTimer(timer5ReloadVal);
  3528   000EAE  C03F  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
  3529   000EB2  C040  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
  3530   000EB6  ECFC  F007         	call	_TMR5_WriteTimer	;wreg free
  3531   000EBA                     
  3532                           ;mcc_generated_files/tmr5.c: 167:     if (++CountCallBack >= 20)
  3533   000EBA  4A3B               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
  3534   000EBC  2A3C               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
  3535   000EBE  503C               	movf	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
  3536   000EC0  E109               	bnz	i2u111_40
  3537   000EC2  0E14               	movlw	20
  3538   000EC4  5C3B               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
  3539   000EC6  A0D8               	btfss	status,0,c
  3540   000EC8  EF68  F007         	goto	i2u111_41
  3541   000ECC  EF6A  F007         	goto	i2u111_40
  3542   000ED0                     i2u111_41:
  3543   000ED0  EF70  F007         	goto	i2l438
  3544   000ED4                     i2u111_40:
  3545   000ED4                     
  3546                           ;mcc_generated_files/tmr5.c: 168:     {;mcc_generated_files/tmr5.c: 170:         TMR5_Ca
      +                          llBack();
  3547   000ED4  ECB9  F007         	call	_TMR5_CallBack	;wreg free
  3548   000ED8                     
  3549                           ;mcc_generated_files/tmr5.c: 173:         CountCallBack = 0;
  3550   000ED8  0E00               	movlw	0
  3551   000EDA  6E3C               	movwf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
  3552   000EDC  0E00               	movlw	0
  3553   000EDE  6E3B               	movwf	TMR5_ISR@CountCallBack^0,c	;volatile
  3554   000EE0                     i2l438:
  3555   000EE0  0012               	return		;funcret
  3556   000EE2                     __end_of_TMR5_ISR:
  3557                           	callstack 0
  3558                           
  3559 ;; *************** function _TMR5_WriteTimer *****************
  3560 ;; Defined at:
  3561 ;;		line 121 in file "mcc_generated_files/tmr5.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  timerVal        2    0[COMRAM] unsigned short 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3575 ;;      Params:         2       0       0       0       0       0       0
  3576 ;;      Locals:         0       0       0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0
  3578 ;;      Totals:         2       0       0       0       0       0       0
  3579 ;;Total ram usage:        2 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_TMR5_ISR
  3585 ;;		_TMR5_Reload
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text36
  3590   000FF8                     __ptext36:
  3591                           	callstack 0
  3592   000FF8                     _TMR5_WriteTimer:
  3593                           	callstack 19
  3594   000FF8                     
  3595                           ;mcc_generated_files/tmr5.c: 121: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 122: {;mcc_generated_files/tmr5.c: 123:     if (T5CONbits.T5SYNC == 1)
  3596   000FF8  010F               	movlb	15	; () banked
  3597   000FFA  A54E               	btfss	78,2,b	;volatile
  3598   000FFC  EF02  F008         	goto	i2u105_41
  3599   001000  EF04  F008         	goto	i2u105_40
  3600   001004                     i2u105_41:
  3601   001004  EF0C  F008         	goto	i2l2248
  3602   001008                     i2u105_40:
  3603   001008                     
  3604                           ; BSR set to: 15
  3605                           ;mcc_generated_files/tmr5.c: 124:     {;mcc_generated_files/tmr5.c: 126:         T5CONbi
      +                          ts.TMR5ON = 0;
  3606   001008  914E               	bcf	78,0,b	;volatile
  3607   00100A                     
  3608                           ; BSR set to: 15
  3609                           ;mcc_generated_files/tmr5.c: 129:         TMR5H = (uint8_t)(timerVal >> 8);
  3610   00100A  5002               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
  3611   00100C  6F50               	movwf	80,b	;volatile
  3612   00100E                     
  3613                           ; BSR set to: 15
  3614                           ;mcc_generated_files/tmr5.c: 130:         TMR5L = (uint8_t)timerVal;
  3615   00100E  C001  FF4F         	movff	TMR5_WriteTimer@timerVal,3919	;volatile
  3616   001012                     
  3617                           ; BSR set to: 15
  3618                           ;mcc_generated_files/tmr5.c: 133:         T5CONbits.TMR5ON =1;
  3619   001012  814E               	bsf	78,0,b	;volatile
  3620                           
  3621                           ;mcc_generated_files/tmr5.c: 134:     }
  3622   001014  EF10  F008         	goto	i2l423
  3623   001018                     i2l2248:
  3624                           
  3625                           ; BSR set to: 15
  3626                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
  3627   001018  5002               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
  3628   00101A  6F50               	movwf	80,b	;volatile
  3629   00101C                     
  3630                           ; BSR set to: 15
  3631                           ;mcc_generated_files/tmr5.c: 139:         TMR5L = (uint8_t)timerVal;
  3632   00101C  C001  FF4F         	movff	TMR5_WriteTimer@timerVal,3919	;volatile
  3633   001020                     i2l423:
  3634                           
  3635                           ; BSR set to: 15
  3636   001020  0012               	return		;funcret
  3637   001022                     __end_of_TMR5_WriteTimer:
  3638                           	callstack 0
  3639                           
  3640 ;; *************** function _TMR5_CallBack *****************
  3641 ;; Defined at:
  3642 ;;		line 177 in file "mcc_generated_files/tmr5.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3656 ;;      Params:         0       0       0       0       0       0       0
  3657 ;;      Locals:         0       0       0       0       0       0       0
  3658 ;;      Temps:          0       0       0       0       0       0       0
  3659 ;;      Totals:         0       0       0       0       0       0       0
  3660 ;;Total ram usage:        0 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; Hardware stack levels required when called: 2
  3663 ;; This function calls:
  3664 ;;		NULL
  3665 ;;		_TMR5_DefaultInterruptHandler
  3666 ;;		_blinker
  3667 ;; This function is called by:
  3668 ;;		_TMR5_ISR
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text37
  3673   000F72                     __ptext37:
  3674                           	callstack 0
  3675   000F72                     _TMR5_CallBack:
  3676                           	callstack 17
  3677   000F72                     
  3678                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_InterruptHandler)
  3679   000F72  503D               	movf	_TMR5_InterruptHandler^0,w,c
  3680   000F74  103E               	iorwf	(_TMR5_InterruptHandler+1)^0,w,c
  3681   000F76  B4D8               	btfsc	status,2,c
  3682   000F78  EFC0  F007         	goto	i2u106_41
  3683   000F7C  EFC2  F007         	goto	i2u106_40
  3684   000F80                     i2u106_41:
  3685   000F80  EFCF  F007         	goto	i2l442
  3686   000F84                     i2u106_40:
  3687   000F84                     
  3688                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_In
      +                          terruptHandler();
  3689   000F84  D802               	call	i2u107_48
  3690   000F86  EFCF  F007         	goto	i2u107_49
  3691   000F8A                     i2u107_48:
  3692   000F8A  0005               	push	
  3693   000F8C  6EFA               	movwf	pclath,c
  3694   000F8E  503D               	movf	_TMR5_InterruptHandler^0,w,c
  3695   000F90  6EFD               	movwf	tosl,c
  3696   000F92  503E               	movf	(_TMR5_InterruptHandler+1)^0,w,c
  3697   000F94  6EFE               	movwf	tosh,c
  3698   000F96  50F8               	movf	tblptru,w,c
  3699   000F98  6EFF               	movwf	tosu,c
  3700   000F9A  50FA               	movf	pclath,w,c
  3701   000F9C  0012               	return		;indir
  3702   000F9E                     i2u107_49:
  3703   000F9E                     i2l442:
  3704   000F9E  0012               	return		;funcret
  3705   000FA0                     __end_of_TMR5_CallBack:
  3706                           	callstack 0
  3707                           
  3708 ;; *************** function _TMR5_DefaultInterruptHandler *****************
  3709 ;; Defined at:
  3710 ;;		line 190 in file "mcc_generated_files/tmr5.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		None
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3724 ;;      Params:         0       0       0       0       0       0       0
  3725 ;;      Locals:         0       0       0       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0
  3727 ;;      Totals:         0       0       0       0       0       0       0
  3728 ;;Total ram usage:        0 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; This function calls:
  3731 ;;		Nothing
  3732 ;; This function is called by:
  3733 ;;		_TMR5_Initialize
  3734 ;;		_TMR5_CallBack
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text38
  3739   0011EC                     __ptext38:
  3740                           	callstack 0
  3741   0011EC                     _TMR5_DefaultInterruptHandler:
  3742                           	callstack 18
  3743   0011EC  0012               	return		;funcret
  3744   0011EE                     __end_of_TMR5_DefaultInterruptHandler:
  3745                           	callstack 0
  3746                           
  3747 ;; *************** function _blinker *****************
  3748 ;; Defined at:
  3749 ;;		line 119 in file "main.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;		None
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  del             4    5[COMRAM] unsigned long 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3763 ;;      Params:         0       0       0       0       0       0       0
  3764 ;;      Locals:         4       0       0       0       0       0       0
  3765 ;;      Temps:          1       0       0       0       0       0       0
  3766 ;;      Totals:         5       0       0       0       0       0       0
  3767 ;;Total ram usage:        5 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; Hardware stack levels required when called: 1
  3770 ;; This function calls:
  3771 ;;		_ADC_GetConversionResult
  3772 ;;		_ADC_IsConversionDone
  3773 ;;		_ADC_StartConversion
  3774 ;;		_wdtdelay
  3775 ;; This function is called by:
  3776 ;;		_main
  3777 ;;		_TMR5_CallBack
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text39
  3782   00073A                     __ptext39:
  3783                           	callstack 0
  3784   00073A                     _blinker:
  3785                           	callstack 17
  3786   00073A                     
  3787                           ;main.c: 121:  uint32_t del = 0;
  3788   00073A  0E00               	movlw	0
  3789   00073C  6E06               	movwf	blinker@del^0,c
  3790   00073E  0E00               	movlw	0
  3791   000740  6E07               	movwf	(blinker@del+1)^0,c
  3792   000742  0E00               	movlw	0
  3793   000744  6E08               	movwf	(blinker@del+2)^0,c
  3794   000746  0E00               	movlw	0
  3795   000748  6E09               	movwf	(blinker@del+3)^0,c
  3796   00074A  948B               	bcf	139,2,c	;volatile
  3797   00074C                     
  3798                           ;main.c: 124:  CTMUCONHbits.CTMUEN = 0;
  3799   00074C  010F               	movlb	15	; () banked
  3800   00074E  9F45               	bcf	69,7,b	;volatile
  3801                           
  3802                           ;main.c: 125:  CTMUICON = 0x03;
  3803   000750  0E03               	movlw	3
  3804   000752  6F43               	movwf	67,b	;volatile
  3805   000754                     
  3806                           ; BSR set to: 15
  3807                           ;main.c: 126:  CTMUCONHbits.CTMUEN = 1;
  3808   000754  8F45               	bsf	69,7,b	;volatile
  3809   000756                     
  3810                           ; BSR set to: 15
  3811                           ;main.c: 127:  CTMUCONHbits.IDISSEN = 1;
  3812   000756  8345               	bsf	69,1,b	;volatile
  3813   000758                     
  3814                           ; BSR set to: 15
  3815                           ;main.c: 128:  wdtdelay(100);
  3816   000758  0E64               	movlw	100
  3817   00075A  6E01               	movwf	wdtdelay@delay^0,c
  3818   00075C  0E00               	movlw	0
  3819   00075E  6E02               	movwf	(wdtdelay@delay+1)^0,c
  3820   000760  0E00               	movlw	0
  3821   000762  6E03               	movwf	(wdtdelay@delay+2)^0,c
  3822   000764  0E00               	movlw	0
  3823   000766  6E04               	movwf	(wdtdelay@delay+3)^0,c
  3824   000768  ECD0  F006         	call	_wdtdelay	;wreg free
  3825   00076C                     
  3826                           ;main.c: 129:  CTMUCONHbits.IDISSEN = 0;
  3827   00076C  010F               	movlb	15	; () banked
  3828   00076E  9345               	bcf	69,1,b	;volatile
  3829   000770                     
  3830                           ; BSR set to: 15
  3831                           ;main.c: 130:  CTMUCONLbits.EDG1STAT = 0;
  3832   000770  9144               	bcf	68,0,b	;volatile
  3833   000772                     
  3834                           ; BSR set to: 15
  3835                           ;main.c: 131:  CTMUCONLbits.EDG2STAT = 0;
  3836   000772  9344               	bcf	68,1,b	;volatile
  3837   000774                     
  3838                           ; BSR set to: 15
  3839                           ;main.c: 132:  CTMUCONHbits.EDGEN = 1;
  3840   000774  8745               	bsf	69,3,b	;volatile
  3841   000776                     
  3842                           ; BSR set to: 15
  3843   000776  848B               	bsf	139,2,c	;volatile
  3844   000778  EFD5  F003         	goto	i2l508
  3845   00077C                     i2l2110:
  3846                           
  3847                           ;main.c: 136:   if (++del > 1000) {
  3848   00077C  0E01               	movlw	1
  3849   00077E  2606               	addwf	blinker@del^0,f,c
  3850   000780  0E00               	movlw	0
  3851   000782  2207               	addwfc	(blinker@del+1)^0,f,c
  3852   000784  2208               	addwfc	(blinker@del+2)^0,f,c
  3853   000786  2209               	addwfc	(blinker@del+3)^0,f,c
  3854   000788  5009               	movf	(blinker@del+3)^0,w,c
  3855   00078A  1008               	iorwf	(blinker@del+2)^0,w,c
  3856   00078C  E10B               	bnz	i2u96_40
  3857   00078E  0EE9               	movlw	233
  3858   000790  5C06               	subwf	blinker@del^0,w,c
  3859   000792  0E03               	movlw	3
  3860   000794  5807               	subwfb	(blinker@del+1)^0,w,c
  3861   000796  A0D8               	btfss	status,0,c
  3862   000798  EFD0  F003         	goto	i2u96_41
  3863   00079C  EFD2  F003         	goto	i2u96_40
  3864   0007A0                     i2u96_41:
  3865   0007A0  EFD5  F003         	goto	i2l508
  3866   0007A4                     i2u96_40:
  3867   0007A4  948B               	bcf	139,2,c	;volatile
  3868   0007A6  EF0B  F004         	goto	i2l513
  3869   0007AA                     i2l508:
  3870                           
  3871                           ;main.c: 135:  while (!PIR3bits.CTMUIF) {
  3872   0007AA  A6A4               	btfss	164,3,c	;volatile
  3873   0007AC  EFDA  F003         	goto	i2u97_41
  3874   0007B0  EFDC  F003         	goto	i2u97_40
  3875   0007B4                     i2u97_41:
  3876   0007B4  EFBE  F003         	goto	i2l2110
  3877   0007B8                     i2u97_40:
  3878   0007B8  948B               	bcf	139,2,c	;volatile
  3879   0007BA                     
  3880                           ;main.c: 144:  PIR3bits.CTMUIF = 0;
  3881   0007BA  96A4               	bcf	164,3,c	;volatile
  3882   0007BC                     
  3883                           ;main.c: 145:  ADC_StartConversion();
  3884   0007BC  ECF4  F008         	call	_ADC_StartConversion	;wreg free
  3885   0007C0                     
  3886                           ;main.c: 146:  CTMUCONHbits.CTMUEN = 0;
  3887   0007C0  010F               	movlb	15	; () banked
  3888   0007C2  9F45               	bcf	69,7,b	;volatile
  3889   0007C4                     
  3890                           ; BSR set to: 15
  3891                           ;main.c: 147:  CTMUICON = 0x00;
  3892   0007C4  0E00               	movlw	0
  3893   0007C6  6F43               	movwf	67,b	;volatile
  3894   0007C8                     
  3895                           ; BSR set to: 15
  3896                           ;main.c: 148:  PIE3bits.CTMUIE = 0;
  3897   0007C8  96A3               	bcf	163,3,c	;volatile
  3898   0007CA                     
  3899                           ; BSR set to: 15
  3900                           ;main.c: 149:  CTMUCONHbits.EDGEN = 0;
  3901   0007CA  9745               	bcf	69,3,b	;volatile
  3902   0007CC                     
  3903                           ; BSR set to: 15
  3904                           ;main.c: 150:  CTMUCONLbits.EDG1STAT = 0;
  3905   0007CC  9144               	bcf	68,0,b	;volatile
  3906   0007CE                     
  3907                           ; BSR set to: 15
  3908                           ;main.c: 151:  CTMUCONLbits.EDG2STAT = 0;
  3909   0007CE  9344               	bcf	68,1,b	;volatile
  3910   0007D0                     i2l2126:
  3911                           
  3912                           ;main.c: 153:  while (!ADC_IsConversionDone()) {
  3913   0007D0  EC98  F008         	call	_ADC_IsConversionDone	;wreg free
  3914   0007D4  0900               	iorlw	0
  3915   0007D6  B4D8               	btfsc	status,2,c
  3916   0007D8  EFF0  F003         	goto	i2u98_41
  3917   0007DC  EFF2  F003         	goto	i2u98_40
  3918   0007E0                     i2u98_41:
  3919   0007E0  EFE8  F003         	goto	i2l2126
  3920   0007E4                     i2u98_40:
  3921   0007E4                     
  3922                           ;main.c: 157:  tdr_adc = ADC_GetConversionResult();
  3923   0007E4  ECA2  F008         	call	_ADC_GetConversionResult	;wreg free
  3924   0007E8  C001  F039         	movff	?_ADC_GetConversionResult,_tdr_adc	;volatile
  3925   0007EC  C002  F03A         	movff	?_ADC_GetConversionResult+1,_tdr_adc+1	;volatile
  3926   0007F0  B28B               	btfsc	139,1,c	;volatile
  3927   0007F2  EFFD  F003         	goto	i2u99_41
  3928   0007F6  EF00  F004         	goto	i2u99_40
  3929   0007FA                     i2u99_41:
  3930   0007FA  0E01               	movlw	1
  3931   0007FC  EF01  F004         	goto	i2u99_46
  3932   000800                     i2u99_40:
  3933   000800  0E00               	movlw	0
  3934   000802                     i2u99_46:
  3935   000802  0AFF               	xorlw	255
  3936   000804  6E05               	movwf	??_blinker^0,c
  3937   000806  4605               	rlncf	??_blinker^0,f,c
  3938   000808  508B               	movf	139,w,c	;volatile
  3939   00080A  1805               	xorwf	??_blinker^0,w,c
  3940   00080C  0BFD               	andlw	-3
  3941   00080E  1805               	xorwf	??_blinker^0,w,c
  3942   000810  6E8B               	movwf	139,c	;volatile
  3943   000812                     
  3944                           ;main.c: 161:  printout = 1;
  3945   000812  0E01               	movlw	1
  3946   000814  6E4A               	movwf	_printout^0,c	;volatile
  3947   000816                     i2l513:
  3948   000816  0012               	return		;funcret
  3949   000818                     __end_of_blinker:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function _wdtdelay *****************
  3953 ;; Defined at:
  3954 ;;		line 167 in file "main.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  delay           4    0[COMRAM] unsigned long 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		wreg, status,2, status,0
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3968 ;;      Params:         4       0       0       0       0       0       0
  3969 ;;      Locals:         0       0       0       0       0       0       0
  3970 ;;      Temps:          0       0       0       0       0       0       0
  3971 ;;      Totals:         4       0       0       0       0       0       0
  3972 ;;Total ram usage:        4 bytes
  3973 ;; Hardware stack levels used: 1
  3974 ;; This function calls:
  3975 ;;		Nothing
  3976 ;; This function is called by:
  3977 ;;		_blinker
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text40
  3982   000DA0                     __ptext40:
  3983                           	callstack 0
  3984   000DA0                     _wdtdelay:
  3985                           	callstack 17
  3986   000DA0                     
  3987                           ;main.c: 167: void wdtdelay(uint32_t delay);main.c: 168: {;main.c: 169:  static uint32_t
      +                           dcount;;main.c: 171:  for (dcount = 0; dcount <= delay; dcount++) {
  3988   000DA0  0E00               	movlw	0
  3989   000DA2  0100               	movlb	0	; () banked
  3990   000DA4  6FA0               	movwf	wdtdelay@dcount& (0+255),b
  3991   000DA6  0E00               	movlw	0
  3992   000DA8  6FA1               	movwf	(wdtdelay@dcount+1)& (0+255),b
  3993   000DAA  0E00               	movlw	0
  3994   000DAC  6FA2               	movwf	(wdtdelay@dcount+2)& (0+255),b
  3995   000DAE  0E00               	movlw	0
  3996   000DB0  6FA3               	movwf	(wdtdelay@dcount+3)& (0+255),b
  3997   000DB2  EFE4  F006         	goto	i2l526
  3998   000DB6                     i2l527:
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;main.c: 172:   __nop();
  4002   000DB6  0000               	nop	
  4003   000DB8  0004               	clrwdt		;# 
  4004   000DBA                     
  4005                           ;main.c: 174:  };
  4006   000DBA  0E01               	movlw	1
  4007   000DBC  0100               	movlb	0	; () banked
  4008   000DBE  27A0               	addwf	wdtdelay@dcount& (0+255),f,b
  4009   000DC0  0E00               	movlw	0
  4010   000DC2  23A1               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  4011   000DC4  23A2               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  4012   000DC6  23A3               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  4013   000DC8                     i2l526:
  4014                           
  4015                           ; BSR set to: 0
  4016   000DC8  51A0               	movf	wdtdelay@dcount& (0+255),w,b
  4017   000DCA  5C01               	subwf	wdtdelay@delay^0,w,c
  4018   000DCC  51A1               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  4019   000DCE  5802               	subwfb	(wdtdelay@delay+1)^0,w,c
  4020   000DD0  51A2               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  4021   000DD2  5803               	subwfb	(wdtdelay@delay+2)^0,w,c
  4022   000DD4  51A3               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  4023   000DD6  5804               	subwfb	(wdtdelay@delay+3)^0,w,c
  4024   000DD8  B0D8               	btfsc	status,0,c
  4025   000DDA  EFF1  F006         	goto	i2u89_41
  4026   000DDE  EFF3  F006         	goto	i2u89_40
  4027   000DE2                     i2u89_41:
  4028   000DE2  EFDB  F006         	goto	i2l527
  4029   000DE6                     i2u89_40:
  4030   000DE6                     
  4031                           ; BSR set to: 0
  4032   000DE6  0012               	return		;funcret
  4033   000DE8                     __end_of_wdtdelay:
  4034                           	callstack 0
  4035                           
  4036 ;; *************** function _ADC_StartConversion *****************
  4037 ;; Defined at:
  4038 ;;		line 91 in file "mcc_generated_files/adc.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;		None
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      void 
  4045 ;; Registers used:
  4046 ;;		None
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4052 ;;      Params:         0       0       0       0       0       0       0
  4053 ;;      Locals:         0       0       0       0       0       0       0
  4054 ;;      Temps:          0       0       0       0       0       0       0
  4055 ;;      Totals:         0       0       0       0       0       0       0
  4056 ;;Total ram usage:        0 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; This function calls:
  4059 ;;		Nothing
  4060 ;; This function is called by:
  4061 ;;		_blinker
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text41
  4066   0011E8                     __ptext41:
  4067                           	callstack 0
  4068   0011E8                     _ADC_StartConversion:
  4069                           	callstack 17
  4070   0011E8                     
  4071                           ;mcc_generated_files/adc.c: 94:     ADCON0bits.GO_nDONE = 1;
  4072   0011E8  82C2               	bsf	194,1,c	;volatile
  4073   0011EA  0012               	return		;funcret
  4074   0011EC                     __end_of_ADC_StartConversion:
  4075                           	callstack 0
  4076                           
  4077 ;; *************** function _ADC_IsConversionDone *****************
  4078 ;; Defined at:
  4079 ;;		line 98 in file "mcc_generated_files/adc.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      _Bool 
  4086 ;; Registers used:
  4087 ;;		wreg
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4093 ;;      Params:         0       0       0       0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0
  4096 ;;      Totals:         0       0       0       0       0       0       0
  4097 ;;Total ram usage:        0 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; This function calls:
  4100 ;;		Nothing
  4101 ;; This function is called by:
  4102 ;;		_blinker
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           	psect	text42
  4107   001130                     __ptext42:
  4108                           	callstack 0
  4109   001130                     _ADC_IsConversionDone:
  4110                           	callstack 17
  4111   001130                     
  4112                           ;mcc_generated_files/adc.c: 101:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  4113   001130  A2C2               	btfss	194,1,c	;volatile
  4114   001132  EF9D  F008         	goto	i2u87_41
  4115   001136  EFA0  F008         	goto	i2u87_40
  4116   00113A                     i2u87_41:
  4117   00113A  0E01               	movlw	1
  4118   00113C  EFA1  F008         	goto	i2u88_40
  4119   001140                     i2u87_40:
  4120   001140  0E00               	movlw	0
  4121   001142                     i2u88_40:
  4122   001142  0012               	return		;funcret
  4123   001144                     __end_of_ADC_IsConversionDone:
  4124                           	callstack 0
  4125                           
  4126 ;; *************** function _ADC_GetConversionResult *****************
  4127 ;; Defined at:
  4128 ;;		line 104 in file "mcc_generated_files/adc.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;		None
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  2    0[COMRAM] unsigned short 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4142 ;;      Params:         2       0       0       0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0       0       0
  4144 ;;      Temps:          2       0       0       0       0       0       0
  4145 ;;      Totals:         4       0       0       0       0       0       0
  4146 ;;Total ram usage:        4 bytes
  4147 ;; Hardware stack levels used: 1
  4148 ;; This function calls:
  4149 ;;		Nothing
  4150 ;; This function is called by:
  4151 ;;		_blinker
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text43
  4156   001144                     __ptext43:
  4157                           	callstack 0
  4158   001144                     _ADC_GetConversionResult:
  4159                           	callstack 17
  4160   001144                     
  4161                           ;mcc_generated_files/adc.c: 107:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4162   001144  50C4               	movf	196,w,c	;volatile
  4163   001146  6E04               	movwf	(??_ADC_GetConversionResult+1)^0,c
  4164   001148  6A03               	clrf	??_ADC_GetConversionResult^0,c
  4165   00114A  50C3               	movf	195,w,c	;volatile
  4166   00114C  2403               	addwf	??_ADC_GetConversionResult^0,w,c
  4167   00114E  6E01               	movwf	?_ADC_GetConversionResult^0,c
  4168   001150  0E00               	movlw	0
  4169   001152  2004               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
  4170   001154  6E02               	movwf	(?_ADC_GetConversionResult+1)^0,c
  4171   001156  0012               	return		;funcret
  4172   001158                     __end_of_ADC_GetConversionResult:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function _TMR2_ISR *****************
  4176 ;; Defined at:
  4177 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4191 ;;      Params:         0       0       0       0       0       0       0
  4192 ;;      Locals:         0       0       0       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0
  4194 ;;      Totals:         0       0       0       0       0       0       0
  4195 ;;Total ram usage:        0 bytes
  4196 ;; Hardware stack levels used: 1
  4197 ;; Hardware stack levels required when called: 1
  4198 ;; This function calls:
  4199 ;;		NULL
  4200 ;;		_TMR2_DefaultInterruptHandler
  4201 ;; This function is called by:
  4202 ;;		_INTERRUPT_InterruptManagerHigh
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text44
  4207   000F14                     __ptext44:
  4208                           	callstack 0
  4209   000F14                     _TMR2_ISR:
  4210                           	callstack 19
  4211   000F14                     
  4212                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  4213   000F14  929E               	bcf	158,1,c	;volatile
  4214   000F16                     
  4215                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  4216   000F16  5047               	movf	_TMR2_InterruptHandler^0,w,c
  4217   000F18  1048               	iorwf	(_TMR2_InterruptHandler+1)^0,w,c
  4218   000F1A  B4D8               	btfsc	status,2,c
  4219   000F1C  EF92  F007         	goto	i2u109_41
  4220   000F20  EF94  F007         	goto	i2u109_40
  4221   000F24                     i2u109_41:
  4222   000F24  EFA1  F007         	goto	i2l80
  4223   000F28                     i2u109_40:
  4224   000F28                     
  4225                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  4226   000F28  D802               	call	i2u110_48
  4227   000F2A  EFA1  F007         	goto	i2u110_49
  4228   000F2E                     i2u110_48:
  4229   000F2E  0005               	push	
  4230   000F30  6EFA               	movwf	pclath,c
  4231   000F32  5047               	movf	_TMR2_InterruptHandler^0,w,c
  4232   000F34  6EFD               	movwf	tosl,c
  4233   000F36  5048               	movf	(_TMR2_InterruptHandler+1)^0,w,c
  4234   000F38  6EFE               	movwf	tosh,c
  4235   000F3A  50F8               	movf	tblptru,w,c
  4236   000F3C  6EFF               	movwf	tosu,c
  4237   000F3E  50FA               	movf	pclath,w,c
  4238   000F40  0012               	return		;indir
  4239   000F42                     i2u110_49:
  4240   000F42                     i2l80:
  4241   000F42  0012               	return		;funcret
  4242   000F44                     __end_of_TMR2_ISR:
  4243                           	callstack 0
  4244                           
  4245 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4246 ;; Defined at:
  4247 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;		None
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      void 
  4254 ;; Registers used:
  4255 ;;		None
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4261 ;;      Params:         0       0       0       0       0       0       0
  4262 ;;      Locals:         0       0       0       0       0       0       0
  4263 ;;      Temps:          0       0       0       0       0       0       0
  4264 ;;      Totals:         0       0       0       0       0       0       0
  4265 ;;Total ram usage:        0 bytes
  4266 ;; Hardware stack levels used: 1
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_TMR2_Initialize
  4271 ;;		_TMR2_ISR
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text45
  4276   0011EE                     __ptext45:
  4277                           	callstack 0
  4278   0011EE                     _TMR2_DefaultInterruptHandler:
  4279                           	callstack 19
  4280   0011EE  0012               	return		;funcret
  4281   0011F0                     __end_of_TMR2_DefaultInterruptHandler:
  4282                           	callstack 0
  4283                           
  4284 ;; *************** function _INT0_ISR *****************
  4285 ;; Defined at:
  4286 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;		None
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;		None
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  1    wreg      void 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4300 ;;      Params:         0       0       0       0       0       0       0
  4301 ;;      Locals:         0       0       0       0       0       0       0
  4302 ;;      Temps:          0       0       0       0       0       0       0
  4303 ;;      Totals:         0       0       0       0       0       0       0
  4304 ;;Total ram usage:        0 bytes
  4305 ;; Hardware stack levels used: 1
  4306 ;; Hardware stack levels required when called: 2
  4307 ;; This function calls:
  4308 ;;		_INT0_CallBack
  4309 ;; This function is called by:
  4310 ;;		_INTERRUPT_InterruptManagerHigh
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text46
  4315   0011CE                     __ptext46:
  4316                           	callstack 0
  4317   0011CE                     _INT0_ISR:
  4318                           	callstack 18
  4319   0011CE                     
  4320                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
  4321   0011CE  92F2               	bcf	242,1,c	;volatile
  4322   0011D0                     
  4323                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
  4324   0011D0  ECD0  F007         	call	_INT0_CallBack	;wreg free
  4325   0011D4  0012               	return		;funcret
  4326   0011D6                     __end_of_INT0_ISR:
  4327                           	callstack 0
  4328                           
  4329 ;; *************** function _INT0_CallBack *****************
  4330 ;; Defined at:
  4331 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;		None
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;		None
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      void 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4345 ;;      Params:         0       0       0       0       0       0       0
  4346 ;;      Locals:         0       0       0       0       0       0       0
  4347 ;;      Temps:          0       0       0       0       0       0       0
  4348 ;;      Totals:         0       0       0       0       0       0       0
  4349 ;;Total ram usage:        0 bytes
  4350 ;; Hardware stack levels used: 1
  4351 ;; Hardware stack levels required when called: 1
  4352 ;; This function calls:
  4353 ;;		NULL
  4354 ;;		_INT0_DefaultInterruptHandler
  4355 ;; This function is called by:
  4356 ;;		_INT0_ISR
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text47
  4361   000FA0                     __ptext47:
  4362                           	callstack 0
  4363   000FA0                     _INT0_CallBack:
  4364                           	callstack 18
  4365   000FA0                     
  4366                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
  4367   000FA0  5045               	movf	_INT0_InterruptHandler^0,w,c
  4368   000FA2  1046               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  4369   000FA4  B4D8               	btfsc	status,2,c
  4370   000FA6  EFD7  F007         	goto	i2u103_41
  4371   000FAA  EFD9  F007         	goto	i2u103_40
  4372   000FAE                     i2u103_41:
  4373   000FAE  EFE6  F007         	goto	i2l101
  4374   000FB2                     i2u103_40:
  4375   000FB2                     
  4376                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
  4377   000FB2  D802               	call	i2u104_48
  4378   000FB4  EFE6  F007         	goto	i2u104_49
  4379   000FB8                     i2u104_48:
  4380   000FB8  0005               	push	
  4381   000FBA  6EFA               	movwf	pclath,c
  4382   000FBC  5045               	movf	_INT0_InterruptHandler^0,w,c
  4383   000FBE  6EFD               	movwf	tosl,c
  4384   000FC0  5046               	movf	(_INT0_InterruptHandler+1)^0,w,c
  4385   000FC2  6EFE               	movwf	tosh,c
  4386   000FC4  50F8               	movf	tblptru,w,c
  4387   000FC6  6EFF               	movwf	tosu,c
  4388   000FC8  50FA               	movf	pclath,w,c
  4389   000FCA  0012               	return		;indir
  4390   000FCC                     i2u104_49:
  4391   000FCC                     i2l101:
  4392   000FCC  0012               	return		;funcret
  4393   000FCE                     __end_of_INT0_CallBack:
  4394                           	callstack 0
  4395                           
  4396 ;; *************** function _INT0_DefaultInterruptHandler *****************
  4397 ;; Defined at:
  4398 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;		None
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		None
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4412 ;;      Params:         0       0       0       0       0       0       0
  4413 ;;      Locals:         0       0       0       0       0       0       0
  4414 ;;      Temps:          0       0       0       0       0       0       0
  4415 ;;      Totals:         0       0       0       0       0       0       0
  4416 ;;Total ram usage:        0 bytes
  4417 ;; Hardware stack levels used: 1
  4418 ;; This function calls:
  4419 ;;		Nothing
  4420 ;; This function is called by:
  4421 ;;		_EXT_INT_Initialize
  4422 ;;		_INT0_CallBack
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text48
  4427   0011F0                     __ptext48:
  4428                           	callstack 0
  4429   0011F0                     _INT0_DefaultInterruptHandler:
  4430                           	callstack 18
  4431   0011F0  0012               	return		;funcret
  4432   0011F2                     __end_of_INT0_DefaultInterruptHandler:
  4433                           	callstack 0
  4434                           
  4435 ;; *************** function _EUSART1_Transmit_ISR *****************
  4436 ;; Defined at:
  4437 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;		None
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;		None
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4451 ;;      Params:         0       0       0       0       0       0       0
  4452 ;;      Locals:         0       0       0       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0       0       0
  4454 ;;      Totals:         0       0       0       0       0       0       0
  4455 ;;Total ram usage:        0 bytes
  4456 ;; Hardware stack levels used: 1
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_EUSART1_Initialize
  4461 ;;		_INTERRUPT_InterruptManagerHigh
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text49
  4466   000E6C                     __ptext49:
  4467                           	callstack 0
  4468   000E6C                     _EUSART1_Transmit_ISR:
  4469                           	callstack 20
  4470   000E6C                     
  4471                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  4472   000E6C  0E40               	movlw	64
  4473   000E6E  604F               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  4474   000E70  EF3C  F007         	goto	i2u114_41
  4475   000E74  EF3E  F007         	goto	i2u114_40
  4476   000E78                     i2u114_41:
  4477   000E78  EF54  F007         	goto	i2l331
  4478   000E7C                     i2u114_40:
  4479   000E7C                     
  4480                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  4481   000E7C  0E40               	movlw	low _eusart1TxBuffer
  4482   000E7E  2450               	addwf	_eusart1TxTail^0,w,c	;volatile
  4483   000E80  6ED9               	movwf	fsr2l,c
  4484   000E82  6ADA               	clrf	fsr2h,c
  4485   000E84  0E01               	movlw	high _eusart1TxBuffer
  4486   000E86  22DA               	addwfc	fsr2h,f,c
  4487   000E88  50DF               	movf	indf2,w,c
  4488   000E8A  6EAD               	movwf	173,c	;volatile
  4489   000E8C  2A50               	incf	_eusart1TxTail^0,f,c	;volatile
  4490   000E8E                     
  4491                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  4492   000E8E  0E3F               	movlw	63
  4493   000E90  6450               	cpfsgt	_eusart1TxTail^0,c	;volatile
  4494   000E92  EF4D  F007         	goto	i2u115_41
  4495   000E96  EF4F  F007         	goto	i2u115_40
  4496   000E9A                     i2u115_41:
  4497   000E9A  EF51  F007         	goto	i2l2336
  4498   000E9E                     i2u115_40:
  4499   000E9E                     
  4500                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  4501   000E9E  0E00               	movlw	0
  4502   000EA0  6E50               	movwf	_eusart1TxTail^0,c	;volatile
  4503   000EA2                     i2l2336:
  4504                           
  4505                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  4506   000EA2  2A4F               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  4507                           
  4508                           ;mcc_generated_files/eusart1.c: 218:     }
  4509   000EA4  EF55  F007         	goto	i2l334
  4510   000EA8                     i2l331:
  4511                           
  4512                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  4513   000EA8  989D               	bcf	157,4,c	;volatile
  4514   000EAA                     i2l334:
  4515   000EAA  0012               	return		;funcret
  4516   000EAC                     __end_of_EUSART1_Transmit_ISR:
  4517                           	callstack 0
  4518                           
  4519 ;; *************** function _EUSART1_Receive_ISR *****************
  4520 ;; Defined at:
  4521 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;		None
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;		None
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  1    wreg      void 
  4528 ;; Registers used:
  4529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4535 ;;      Params:         0       0       0       0       0       0       0
  4536 ;;      Locals:         0       0       0       0       0       0       0
  4537 ;;      Temps:          0       0       0       0       0       0       0
  4538 ;;      Totals:         0       0       0       0       0       0       0
  4539 ;;Total ram usage:        0 bytes
  4540 ;; Hardware stack levels used: 1
  4541 ;; Hardware stack levels required when called: 2
  4542 ;; This function calls:
  4543 ;;		NULL
  4544 ;;		_EUSART1_DefaultErrorHandler
  4545 ;;		_EUSART1_DefaultFramingErrorHandler
  4546 ;;		_EUSART1_DefaultOverrunErrorHandler
  4547 ;;		_EUSART1_RxDataHandler
  4548 ;; This function is called by:
  4549 ;;		_EUSART1_Initialize
  4550 ;;		_INTERRUPT_InterruptManagerHigh
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text50
  4555   00099E                     __ptext50:
  4556                           	callstack 0
  4557   00099E                     _EUSART1_Receive_ISR:
  4558                           	callstack 18
  4559   00099E                     
  4560                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  4561   00099E  504E               	movf	_eusart1RxHead^0,w,c
  4562   0009A0  0F60               	addlw	low _eusart1RxStatusBuffer
  4563   0009A2  6ED9               	movwf	fsr2l,c
  4564   0009A4  6ADA               	clrf	fsr2h,c
  4565   0009A6  6ADF               	clrf	indf2,c
  4566   0009A8                     
  4567                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  4568   0009A8  A4AB               	btfss	171,2,c	;volatile
  4569   0009AA  EFD9  F004         	goto	i2u116_41
  4570   0009AE  EFDB  F004         	goto	i2u116_40
  4571   0009B2                     i2u116_41:
  4572   0009B2  EFEE  F004         	goto	i2l2346
  4573   0009B6                     i2u116_40:
  4574   0009B6                     
  4575                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  4576   0009B6  504E               	movf	_eusart1RxHead^0,w,c
  4577   0009B8  0F60               	addlw	low _eusart1RxStatusBuffer
  4578   0009BA  6ED9               	movwf	fsr2l,c
  4579   0009BC  6ADA               	clrf	fsr2h,c
  4580   0009BE  0100               	movlb	0	; () banked
  4581   0009C0  82DF               	bsf	indf2,1,c
  4582   0009C2                     
  4583                           ; BSR set to: 0
  4584                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  4585   0009C2  D802               	call	i2u117_48
  4586   0009C4  EFEE  F004         	goto	i2u117_49
  4587   0009C8                     i2u117_48:
  4588   0009C8  0005               	push	
  4589   0009CA  6EFA               	movwf	pclath,c
  4590   0009CC  51AA               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  4591   0009CE  6EFD               	movwf	tosl,c
  4592   0009D0  51AB               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  4593   0009D2  6EFE               	movwf	tosh,c
  4594   0009D4  50F8               	movf	tblptru,w,c
  4595   0009D6  6EFF               	movwf	tosu,c
  4596   0009D8  50FA               	movf	pclath,w,c
  4597   0009DA  0012               	return		;indir
  4598   0009DC                     i2u117_49:
  4599   0009DC                     i2l2346:
  4600                           
  4601                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  4602   0009DC  A2AB               	btfss	171,1,c	;volatile
  4603   0009DE  EFF3  F004         	goto	i2u118_41
  4604   0009E2  EFF5  F004         	goto	i2u118_40
  4605   0009E6                     i2u118_41:
  4606   0009E6  EF08  F005         	goto	i2l2352
  4607   0009EA                     i2u118_40:
  4608   0009EA                     
  4609                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  4610   0009EA  504E               	movf	_eusart1RxHead^0,w,c
  4611   0009EC  0F60               	addlw	low _eusart1RxStatusBuffer
  4612   0009EE  6ED9               	movwf	fsr2l,c
  4613   0009F0  6ADA               	clrf	fsr2h,c
  4614   0009F2  0100               	movlb	0	; () banked
  4615   0009F4  84DF               	bsf	indf2,2,c
  4616   0009F6                     
  4617                           ; BSR set to: 0
  4618                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  4619   0009F6  D802               	call	i2u119_48
  4620   0009F8  EF08  F005         	goto	i2u119_49
  4621   0009FC                     i2u119_48:
  4622   0009FC  0005               	push	
  4623   0009FE  6EFA               	movwf	pclath,c
  4624   000A00  51A8               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  4625   000A02  6EFD               	movwf	tosl,c
  4626   000A04  51A9               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  4627   000A06  6EFE               	movwf	tosh,c
  4628   000A08  50F8               	movf	tblptru,w,c
  4629   000A0A  6EFF               	movwf	tosu,c
  4630   000A0C  50FA               	movf	pclath,w,c
  4631   000A0E  0012               	return		;indir
  4632   000A10                     i2u119_49:
  4633   000A10                     i2l2352:
  4634                           
  4635                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  4636   000A10  504E               	movf	_eusart1RxHead^0,w,c
  4637   000A12  0F60               	addlw	low _eusart1RxStatusBuffer
  4638   000A14  6ED9               	movwf	fsr2l,c
  4639   000A16  6ADA               	clrf	fsr2h,c
  4640   000A18  50DF               	movf	indf2,w,c
  4641   000A1A  B4D8               	btfsc	status,2,c
  4642   000A1C  EF12  F005         	goto	i2u120_41
  4643   000A20  EF14  F005         	goto	i2u120_40
  4644   000A24                     i2u120_41:
  4645   000A24  EF24  F005         	goto	i2l2356
  4646   000A28                     i2u120_40:
  4647   000A28                     
  4648                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  4649   000A28  D802               	call	i2u121_48
  4650   000A2A  EF22  F005         	goto	i2u121_49
  4651   000A2E                     i2u121_48:
  4652   000A2E  0005               	push	
  4653   000A30  0100               	movlb	0	; () banked
  4654   000A32  6EFA               	movwf	pclath,c
  4655   000A34  51A6               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  4656   000A36  6EFD               	movwf	tosl,c
  4657   000A38  51A7               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  4658   000A3A  6EFE               	movwf	tosh,c
  4659   000A3C  50F8               	movf	tblptru,w,c
  4660   000A3E  6EFF               	movwf	tosu,c
  4661   000A40  50FA               	movf	pclath,w,c
  4662   000A42  0012               	return		;indir
  4663   000A44                     i2u121_49:
  4664                           
  4665                           ;mcc_generated_files/eusart1.c: 242:     } else {
  4666   000A44  EF26  F005         	goto	i2l341
  4667   000A48                     i2l2356:
  4668                           
  4669                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  4670   000A48  EC11  F008         	call	_EUSART1_RxDataHandler	;wreg free
  4671   000A4C                     i2l341:
  4672   000A4C  0012               	return		;funcret
  4673   000A4E                     __end_of_EUSART1_Receive_ISR:
  4674                           	callstack 0
  4675                           
  4676 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  4677 ;; Defined at:
  4678 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;		None
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;		None
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		None
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4692 ;;      Params:         0       0       0       0       0       0       0
  4693 ;;      Locals:         0       0       0       0       0       0       0
  4694 ;;      Temps:          0       0       0       0       0       0       0
  4695 ;;      Totals:         0       0       0       0       0       0       0
  4696 ;;Total ram usage:        0 bytes
  4697 ;; Hardware stack levels used: 1
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_EUSART1_Initialize
  4702 ;;		_EUSART1_Receive_ISR
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           	psect	text51
  4707   0011DC                     __ptext51:
  4708                           	callstack 0
  4709   0011DC                     _EUSART1_DefaultOverrunErrorHandler:
  4710                           	callstack 19
  4711   0011DC                     
  4712                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  4713   0011DC  98AB               	bcf	171,4,c	;volatile
  4714                           
  4715                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  4716   0011DE  88AB               	bsf	171,4,c	;volatile
  4717   0011E0  0012               	return		;funcret
  4718   0011E2                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  4719                           	callstack 0
  4720                           
  4721 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  4722 ;; Defined at:
  4723 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		None
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4737 ;;      Params:         0       0       0       0       0       0       0
  4738 ;;      Locals:         0       0       0       0       0       0       0
  4739 ;;      Temps:          0       0       0       0       0       0       0
  4740 ;;      Totals:         0       0       0       0       0       0       0
  4741 ;;Total ram usage:        0 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; This function calls:
  4744 ;;		Nothing
  4745 ;; This function is called by:
  4746 ;;		_EUSART1_Initialize
  4747 ;;		_EUSART1_Receive_ISR
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text52
  4752   0011F2                     __ptext52:
  4753                           	callstack 0
  4754   0011F2                     _EUSART1_DefaultFramingErrorHandler:
  4755                           	callstack 19
  4756   0011F2  0012               	return		;funcret
  4757   0011F4                     __end_of_EUSART1_DefaultFramingErrorHandler:
  4758                           	callstack 0
  4759                           
  4760 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  4761 ;; Defined at:
  4762 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;		None
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;		None
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      void 
  4769 ;; Registers used:
  4770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4776 ;;      Params:         0       0       0       0       0       0       0
  4777 ;;      Locals:         0       0       0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0
  4779 ;;      Totals:         0       0       0       0       0       0       0
  4780 ;;Total ram usage:        0 bytes
  4781 ;; Hardware stack levels used: 1
  4782 ;; Hardware stack levels required when called: 1
  4783 ;; This function calls:
  4784 ;;		_EUSART1_RxDataHandler
  4785 ;; This function is called by:
  4786 ;;		_EUSART1_Initialize
  4787 ;;		_EUSART1_Receive_ISR
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text53
  4792   0011E2                     __ptext53:
  4793                           	callstack 0
  4794   0011E2                     _EUSART1_DefaultErrorHandler:
  4795                           	callstack 18
  4796   0011E2                     
  4797                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  4798   0011E2  EC11  F008         	call	_EUSART1_RxDataHandler	;wreg free
  4799   0011E6  0012               	return		;funcret
  4800   0011E8                     __end_of_EUSART1_DefaultErrorHandler:
  4801                           	callstack 0
  4802                           
  4803 ;; *************** function _EUSART1_RxDataHandler *****************
  4804 ;; Defined at:
  4805 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;		None
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;		None
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4819 ;;      Params:         0       0       0       0       0       0       0
  4820 ;;      Locals:         0       0       0       0       0       0       0
  4821 ;;      Temps:          0       0       0       0       0       0       0
  4822 ;;      Totals:         0       0       0       0       0       0       0
  4823 ;;Total ram usage:        0 bytes
  4824 ;; Hardware stack levels used: 1
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_EUSART1_Receive_ISR
  4829 ;;		_EUSART1_DefaultErrorHandler
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text54
  4834   001022                     __ptext54:
  4835                           	callstack 0
  4836   001022                     _EUSART1_RxDataHandler:
  4837                           	callstack 19
  4838   001022                     
  4839                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  4840   001022  0E00               	movlw	low _eusart1RxBuffer
  4841   001024  244E               	addwf	_eusart1RxHead^0,w,c	;volatile
  4842   001026  6ED9               	movwf	fsr2l,c
  4843   001028  6ADA               	clrf	fsr2h,c
  4844   00102A  0E01               	movlw	high _eusart1RxBuffer
  4845   00102C  22DA               	addwfc	fsr2h,f,c
  4846   00102E  CFAE FFDF          	movff	4014,indf2	;volatile
  4847   001032  2A4E               	incf	_eusart1RxHead^0,f,c	;volatile
  4848   001034                     
  4849                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  4850   001034  0E3F               	movlw	63
  4851   001036  644E               	cpfsgt	_eusart1RxHead^0,c	;volatile
  4852   001038  EF20  F008         	goto	i2u95_41
  4853   00103C  EF22  F008         	goto	i2u95_40
  4854   001040                     i2u95_41:
  4855   001040  EF24  F008         	goto	i2l2084
  4856   001044                     i2u95_40:
  4857   001044                     
  4858                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  4859   001044  0E00               	movlw	0
  4860   001046  6E4E               	movwf	_eusart1RxHead^0,c	;volatile
  4861   001048                     i2l2084:
  4862                           
  4863                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  4864   001048  2A4C               	incf	_eusart1RxCount^0,f,c	;volatile
  4865   00104A  0012               	return		;funcret
  4866   00104C                     __end_of_EUSART1_RxDataHandler:
  4867                           	callstack 0
  4868                           
  4869                           	psect	text55
  4870   000000                     __ptext55:
  4871                           	callstack 0
  4872   000000                     
  4873                           	psect	rparam
  4874   000000                     
  4875                           	psect	temp
  4876   000052                     btemp:
  4877                           	callstack 0
  4878   000052                     	ds	1
  4879   000000                     int$flags	set	btemp
  4880   000000                     wtemp8	set	btemp+1
  4881   000000                     ttemp5	set	btemp+1
  4882   000000                     ttemp6	set	btemp+4
  4883   000000                     ttemp7	set	btemp+8
  4884                           
  4885                           	psect	config
  4886                           
  4887                           ; Padding undefined space
  4888   300000                     	org	3145728
  4889   300000  FF                 	db	255
  4890                           
  4891                           ;Config register CONFIG1H @ 0x300001
  4892                           ;	Oscillator Selection bits
  4893                           ;	FOSC = INTIO67, Internal oscillator block
  4894                           ;	4X PLL Enable
  4895                           ;	PLLCFG = OFF, Oscillator used directly
  4896                           ;	Primary clock enable bit
  4897                           ;	PRICLKEN = ON, Primary clock enabled
  4898                           ;	Fail-Safe Clock Monitor Enable bit
  4899                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4900                           ;	Internal/External Oscillator Switchover bit
  4901                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4902   300001                     	org	3145729
  4903   300001  28                 	db	40
  4904                           
  4905                           ;Config register CONFIG2L @ 0x300002
  4906                           ;	Power-up Timer Enable bit
  4907                           ;	PWRTEN = OFF, Power up timer disabled
  4908                           ;	Brown-out Reset Enable bits
  4909                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4910                           ;	Brown Out Reset Voltage bits
  4911                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4912   300002                     	org	3145730
  4913   300002  1F                 	db	31
  4914                           
  4915                           ;Config register CONFIG2H @ 0x300003
  4916                           ;	Watchdog Timer Enable bits
  4917                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4918                           ;	Watchdog Timer Postscale Select bits
  4919                           ;	WDTPS = 32768, 1:32768
  4920   300003                     	org	3145731
  4921   300003  3C                 	db	60
  4922                           
  4923                           ; Padding undefined space
  4924   300004                     	org	3145732
  4925   300004  FF                 	db	255
  4926                           
  4927                           ;Config register CONFIG3H @ 0x300005
  4928                           ;	CCP2 MUX bit
  4929                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4930                           ;	PORTB A/D Enable bit
  4931                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4932                           ;	P3A/CCP3 Mux bit
  4933                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4934                           ;	HFINTOSC Fast Start-up
  4935                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4936                           ;	Timer3 Clock input mux bit
  4937                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4938                           ;	ECCP2 B output mux bit
  4939                           ;	P2BMX = PORTB5, P2B is on RB5
  4940                           ;	MCLR Pin Enable bit
  4941                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4942   300005                     	org	3145733
  4943   300005  BF                 	db	191
  4944                           
  4945                           ;Config register CONFIG4L @ 0x300006
  4946                           ;	Stack Full/Underflow Reset Enable bit
  4947                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4948                           ;	Single-Supply ICSP Enable bit
  4949                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4950                           ;	Extended Instruction Set Enable bit
  4951                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4952                           ;	Background Debug
  4953                           ;	DEBUG = OFF, Disabled
  4954   300006                     	org	3145734
  4955   300006  85                 	db	133
  4956                           
  4957                           ; Padding undefined space
  4958   300007                     	org	3145735
  4959   300007  FF                 	db	255
  4960                           
  4961                           ;Config register CONFIG5L @ 0x300008
  4962                           ;	Code Protection Block 0
  4963                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4964                           ;	Code Protection Block 1
  4965                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4966                           ;	Code Protection Block 2
  4967                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4968                           ;	Code Protection Block 3
  4969                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4970   300008                     	org	3145736
  4971   300008  0F                 	db	15
  4972                           
  4973                           ;Config register CONFIG5H @ 0x300009
  4974                           ;	Boot Block Code Protection bit
  4975                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4976                           ;	Data EEPROM Code Protection bit
  4977                           ;	CPD = OFF, Data EEPROM not code-protected
  4978   300009                     	org	3145737
  4979   300009  C0                 	db	192
  4980                           
  4981                           ;Config register CONFIG6L @ 0x30000A
  4982                           ;	Write Protection Block 0
  4983                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4984                           ;	Write Protection Block 1
  4985                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4986                           ;	Write Protection Block 2
  4987                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4988                           ;	Write Protection Block 3
  4989                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4990   30000A                     	org	3145738
  4991   30000A  0F                 	db	15
  4992                           
  4993                           ;Config register CONFIG6H @ 0x30000B
  4994                           ;	Configuration Register Write Protection bit
  4995                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4996                           ;	Boot Block Write Protection bit
  4997                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4998                           ;	Data EEPROM Write Protection bit
  4999                           ;	WRTD = OFF, Data EEPROM not write-protected
  5000   30000B                     	org	3145739
  5001   30000B  E0                 	db	224
  5002                           
  5003                           ;Config register CONFIG7L @ 0x30000C
  5004                           ;	Table Read Protection Block 0
  5005                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5006                           ;	Table Read Protection Block 1
  5007                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5008                           ;	Table Read Protection Block 2
  5009                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5010                           ;	Table Read Protection Block 3
  5011                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5012   30000C                     	org	3145740
  5013   30000C  0F                 	db	15
  5014                           
  5015                           ;Config register CONFIG7H @ 0x30000D
  5016                           ;	Boot Block Table Read Protection bit
  5017                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5018   30000D                     	org	3145741
  5019   30000D  40                 	db	64
  5020                           tosu	equ	0xFFF
  5021                           tosh	equ	0xFFE
  5022                           tosl	equ	0xFFD
  5023                           stkptr	equ	0xFFC
  5024                           pclatu	equ	0xFFB
  5025                           pclath	equ	0xFFA
  5026                           pcl	equ	0xFF9
  5027                           tblptru	equ	0xFF8
  5028                           tblptrh	equ	0xFF7
  5029                           tblptrl	equ	0xFF6
  5030                           tablat	equ	0xFF5
  5031                           prodh	equ	0xFF4
  5032                           prodl	equ	0xFF3
  5033                           indf0	equ	0xFEF
  5034                           postinc0	equ	0xFEE
  5035                           postdec0	equ	0xFED
  5036                           preinc0	equ	0xFEC
  5037                           plusw0	equ	0xFEB
  5038                           fsr0h	equ	0xFEA
  5039                           fsr0l	equ	0xFE9
  5040                           wreg	equ	0xFE8
  5041                           indf1	equ	0xFE7
  5042                           postinc1	equ	0xFE6
  5043                           postdec1	equ	0xFE5
  5044                           preinc1	equ	0xFE4
  5045                           plusw1	equ	0xFE3
  5046                           fsr1h	equ	0xFE2
  5047                           fsr1l	equ	0xFE1
  5048                           bsr	equ	0xFE0
  5049                           indf2	equ	0xFDF
  5050                           postinc2	equ	0xFDE
  5051                           postdec2	equ	0xFDD
  5052                           preinc2	equ	0xFDC
  5053                           plusw2	equ	0xFDB
  5054                           fsr2h	equ	0xFDA
  5055                           fsr2l	equ	0xFD9
  5056                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         265
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      81
    BANK0           160     13     123
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1979$buffer	PTR unsigned char  size(2) Largest target is 0

    S1979$source	PTR const unsigned char  size(2) Largest target is 0

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), NULL(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> blinker(), TMR5_DefaultInterruptHandler(), NULL(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> blinker(), TMR5_DefaultInterruptHandler(), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _read_prec_or_width->___wmul
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_CallBack->_blinker
    _blinker->_ADC_GetConversionResult
    _blinker->_wdtdelay

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8550
                  _ADC_SelectChannel
                  _SYSTEM_Initialize
           _TMR5_SetInterruptHandler
                    _TMR5_StartTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     3      3    7501
                                              9 BANK0      4     1      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    7324
                                             53 COMRAM     1     1      0
                                              5 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4    6845
                                             47 COMRAM     6     2      4
                                              0 BANK0      5     5      0
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     5      4    4271
                                             38 COMRAM     9     5      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    2927
                                             30 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1450
                                             24 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     950
                                             15 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                             14 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      62
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     412
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     421
                                             13 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     852
                                             19 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     860
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      15
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerHigh                      4     4      0     361
                                              9 COMRAM     4     4      0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _INT0_ISR
                           _TMR2_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR5_ISR                                            0     0      0     361
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR5_CallBack                                       0     0      0     121
                                NULL *
       _TMR5_DefaultInterruptHandler *
                            _blinker *
 ---------------------------------------------------------------------------------
 (13) _blinker                                             5     5      0     121
                                              4 COMRAM     5     5      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                _ADC_StartConversion
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (14) _wdtdelay                                            4     0      4      98
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (14) _ADC_StartConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _ADC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _ADC_GetConversionResult                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0       0
                                NULL *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0       0
                                NULL *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_SelectChannel
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR5_StartTimer
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART1_Write
         _read_prec_or_width
           ___wmul
         _utoa
           ___lwdiv
           ___lwmod
           _pad
             _fputc
             _fputs
               _fputc

 _INTERRUPT_InterruptManagerHigh (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _INT0_ISR *
     _INT0_CallBack
       NULL(Fake) *
       _INT0_DefaultInterruptHandler *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultInterruptHandler *
   _TMR5_ISR *
     _TMR5_CallBack
       NULL(Fake) *
       _TMR5_DefaultInterruptHandler *
       _blinker *
         _ADC_GetConversionResult
         _ADC_IsConversionDone
         _ADC_StartConversion
         _wdtdelay
     _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      34        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      80       6       50.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      D      7B       4       76.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      51       1       86.2%
BITBIGSFRhhlhh      1D      0       0      16        0.0%
BITBIGSFRllllhh     1B      0       0      28        0.0%
BITBIGSFRhhh         D      0       0      15        0.0%
BITBIGSFRhhll        B      0       0      18        0.0%
BITBIGSFRllllhl      A      0       0      29        0.0%
BITBIGSFRllllhh      9      0       0      27        0.0%
BITBIGSFRllllhl      8      0       0      32        0.0%
BITBIGSFRllllhl      7      0       0      31        0.0%
BITBIGSFRllhlhh      7      0       0      21        0.0%
BITBIGSFRllhllh      6      0       0      22        0.0%
BITBIGSFRlllhhl      6      0       0      25        0.0%
BITBIGSFRlllhl       6      0       0      26        0.0%
BITBIGSFRllllhl      3      0       0      30        0.0%
BITBIGSFRllhlll      3      0       0      23        0.0%
BITBIGSFRlh          3      0       0      19        0.0%
BITBIGSFRllhh        1      0       0      20        0.0%
BITBIGSFRlllhhh      1      0       0      24        0.0%
BITBIGSFRhhlhl       1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14C      33        0.0%
DATA                 0      0     14C      35        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Oct  2 18:15:03 2023

              __end_of_TMR2_SetInterruptHandler 1192                        _eusart1TxBufferRemaining 004F  
              __end_of_TMR5_SetInterruptHandler 1188                                              l22 1104  
                                            l19 111A                                              l61 10B4  
                                            l83 1190                             ___wmul@multiplicand 0010  
                             ??_TMR5_WriteTimer 0003                                             l110 112E  
                                           l104 119A                                             l213 1096  
                                           l216 10DE                                             l137 0FF6  
                                           l322 0D9E                                             l219 10EC  
                                           l412 11DA                                             l318 0D5C  
                                           l319 0D72                                             l360 11B8  
                                           l328 117C                                             l169 1172  
                                           l409 0F70                                             l363 11CC  
                                           l532 1070                                             l357 11C2  
                                           l445 1186                                             l366 11A4  
                                           l294 0CE4                                             l369 11AE  
                                           l378 1166                                             _PR2 0FBB  
                                           u370 10EC                                             u371 10E8  
                    ??_INT0_SetInterruptHandler 0010                                             _pad 0AF4  
                               _TMR2_Initialize 1098                                             tosl 0FFD  
                                           wreg 0FE8                                      _TXSTA1bits 0FAC  
                                 _INT0_CallBack 0FA0                                 _CCP5_Initialize 1158  
                                          l1030 0C70                                            l1023 0C68  
                                          l1040 0D48                                            l1033 0D40  
                                          l1210 10D0                                            l1231 0B6A  
                                          l2200 0F52                                            l1233 0B88  
                                          l1241 099C                                            l2210 0C72  
                                          l2202 0F5A                                            l2220 0C96  
                                          l2212 0C74                                            l2204 0F5C  
                                          l2300 108E                                            l1228 0B28  
                                          l1245 0AEA                                            l2070 11BA  
                                          l2230 0CBA                                            l2222 0C9A  
                                          l2214 0C80                                            l2062 1188  
                                          l2206 0F5E                                            l2302 1092  
                                          l2072 11B0                                            l2232 0CE2  
                                          l2224 0C9E                                            l2216 0C8E  
                                          l2064 1192                                            l2208 0F6A  
                                          l1249 0AF2                                            l2074 11C4  
                                          l2066 11A6                                            l2226 0CA2  
                                          l2218 0C92                                            l1266 0E2A  
                                          l1259 0738                                            l2068 119C  
                                          l2228 0CAE                                            l2180 10A0  
                                          l2182 10A2                                            l2086 117E  
                                          l2510 0C28                                            l2502 0BFE  
                                          l1278 08E0                                            l1286 0E6A  
                                          l1560 1106                                            l2192 111C  
                                          l2184 10A4                                            l2520 0C5C  
                                          l2512 0C36                                            l2504 0C06  
                                          l2600 0636                                            l2194 1120  
                                          l2186 10B0                                            l2178 1098  
                                          l2290 107A                                            l2522 0C62  
                                          l2514 0C3C                                            l2506 0C18  
                                          l2530 0D08                                            l2610 0674  
                                          l2602 0642                                            l2196 112C  
                                          l2292 107E                                            l2516 0C52  
                                          l2508 0C20                                            l2532 0D16  
                                          l2524 0CE6                                            l2460 0D74  
                                          l2540 0AF4                                            l2612 0680  
                                          l2604 0648                                            l1590 1168  
                                          l1582 0FCE                                            l2198 0F44  
                                          l2294 1082                                            l2286 1072  
                                          l2518 0C5A                                            l2534 0D2C  
                                          l2526 0CF8                                            l2462 0D84  
                                          l2470 0D9C                                            l2454 0D4C  
                                          l2550 0B48                                            l2542 0B02  
                                          l2614 069C                                            l2606 065C  
                                          l2630 0712                                            l1664 10F0  
                                          l1592 10D2                                            l1584 0FDA  
                                          l2296 1086                                            l2288 1076  
                                          l1760 11D6                                            l2536 0D34  
                                          l2528 0D00                                            l2464 0D86  
                                          l2456 0D4C                                            l2472 1176  
                                          l2480 0846                                            l2552 0B4C  
                                          l2544 0B12                                            l2560 08F6  
                                          l2624 06DA                                            l2616 06B4  
                                          l2608 066A                                            l2640 0DE8  
                                          l1666 1102                                            l1594 1158  
                                          l1586 0FDC                                            l2298 108A  
                                          l2538 0D3A                                            l2466 0D96  
                                          l2458 0D6A                                            l2482 0864  
                                          l2474 0818                                            l2490 0E38  
                                          l2554 0B78                                            l2546 0B20  
                                          l2570 0932                                            l2562 0900  
                                          l2618 06C2                                            l2626 0706  
                                          l2642 0DF0                                            l2650 10B6  
                                          l1588 0FF4                                            l2468 0D9A  
                                          l2484 089A                                            l2476 082A  
                                          l2492 0E4A                                            l2548 0B34  
                                          l2564 0906                                            l2572 094E  
                                          l2556 08E2                                            l2644 0E04  
                                          l2652 10BC                                            l2660 0B90  
                                          l2590 0A9C                                            l2582 0A4E  
                                          l2478 083C                                            l2494 0E4E  
                                          l2574 0960                                            l2566 0928  
                                          l2558 08E6                                            l2718 06F8  
                                          l2646 0E20                                            l2670 0BA8  
                                          l2662 0B92                                            l2496 104C  
                                          l2592 0ABC                                            l2584 0A56  
                                          l2488 0E2C                                            l2576 0972  
                                          l2568 092C                                            l2680 0BC0  
                                          l2672 0BAE                                            l2664 0BA0  
                                          l2656 0B8A                                            l2498 1068  
                                          l2586 0A78                                            l2594 0AC4  
                                          l2578 0982                                            l2690 0BCA  
                                          l2682 0BC2                                            l2674 0BB2  
                                          l2666 0BA4                                            l2658 0B8E  
                                          l2588 0A80                                            l2596 060C  
                                          l2692 0BD0                                            l2684 0BC4  
                                          l2676 0BB6                                            l2668 0BA6  
                                          l2598 062E                                            l2694 0BE0  
                                          l2686 0BC6                                            l2678 0BBE  
                                          ?_pad 001F                                            l2696 0BE4  
                                          l2688 0BC8                                            STR_1 0601  
                                          u1400 0864                                            u1401 0860  
                                          u1410 089A                                            u1411 0896  
                                          u1420 0E6A                                            u1500 0B20  
                                          u1421 0E66                                            u1501 0B1C  
                                          _LATA 0F89                                            u1430 0C18  
                                          u1350 0D5C                                            u1510 0B6A  
                                          _LATB 0F8A                                            u1431 0C14  
                                          u1351 0D58                                            u1511 0B66  
                                          _LATC 0F8B                                            u1440 0C36  
                                          u1360 0D6A                                            u1520 0B78  
                                          u1600 069C                                            u1441 0C32  
                                          u1361 0D66                                            u1521 0B74  
                                          u1601 0698                                            u1450 0C52  
                                          u1370 0D96                                            u1530 0960  
                                          u1610 0E20                                            u1451 0C4E  
                                          u1371 0D92                                            u1531 095C  
                                          u1611 0E1C                                            u1460 0CF8  
                                          u1380 082A                                            u1540 0972  
                                          u1620 0BE0                                            u1461 0CF4  
                                          u1381 0826                                            u1541 096E  
                                          u1621 0BDC                                            u1470 0D16  
                                          u1390 083C                                            u1550 0982  
                                          u1471 0D12                                            u1391 0838  
                                          u1551 097E                                            u1560 0A78  
                                          u1480 0D2C                                            u1561 0A74  
                                          u1481 0D28                                            u1570 0AEA  
                                          u1490 0B02                                            u1571 0AE6  
                                          u1491 0AFE                                            u1580 062E  
                                          u1581 062A                                            u1590 066A  
                                          u1591 0666                                            i2l31 1156  
                                          i2l25 11EA                                            i2l28 1142  
                                          i2l80 0F42                                            i2l86 11EE  
                                          i2l97 11D4                                            _TMR2 0FBC  
                                          _TMR5 0F4F                                            _WPUB 0F61  
                                 _EUSART1_Write 0D4A                                            _dbuf 00AE  
                                          _main 0B8A                                            _prec 00A4  
                                          pad@i 0025                                            pad@p 0022  
                                          fsr1h 0FE2                                            fsr2h 0FDA  
                                          indf2 0FDF                                            fsr1l 0FE1  
                                          fsr2l 0FD9                                            btemp 0052  
                                          _utoa 08E2                                            prodh 0FF4  
                                          prodl 0FF3                                            start 010E  
                               _timer5ReloadVal 003F                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 0000                                           ??_pad 0024  
                              __end_of_INT0_ISR 11D6                   __end_of_OSCILLATOR_Initialize 10EE  
                         _eusart1RxStatusBuffer 0060                                           ?_main 0001  
                                         ?_utoa 0027                                           _T2CON 0FBA  
                                         _T5CON 0F4E                                 __end_of___lwdiv 0C72  
                                         i2l101 0FCC                                 __end_of___lwmod 0D4A  
                                         i2l107 11F0                                           i2l331 0EA8  
                                         i2l180 00D6                                           i2l341 0A4C  
                                         i2l334 0EAA                                           i2l174 003E  
                                         i2l351 11E0                                           i2l511 07A4  
                                         i2l423 1020                                           i2l176 0078  
                                         i2l184 00FA                                           i2l345 104A  
                                         i2l513 0816                                           i2l354 11E6  
                                         i2l442 0F9E                                           i2l178 00B2  
                                         i2l515 07B8                                           i2l179 00FA  
                                         i2l348 11F2                                           i2l516 07BA  
                                         i2l508 07AA                                           i2l526 0DC8  
                                         i2l438 0EE0                                           i2l527 0DB6  
                                         i2l448 11EC                                           i2l529 0DE6  
                                  vfpfcnvrt@fmt 0032                                           _TMR5H 0F50  
                                         _TMR5L 0F4F                                           _TRISA 0F92  
                                         _TRISB 0F93                                  ?_INT0_CallBack 0001  
                                         _TRISC 0F94                                 __end_of_blinker 0818  
                          _EUSART1_Transmit_ISR 0E6C                                __end_of_TMR2_ISR 0F44  
                              __end_of_TMR5_ISR 0EE2                                           _flags 0049  
                           read_prec_or_width@c 0016                             read_prec_or_width@n 0017  
                                         _fputc 0818                                           _fputs 0E2C  
                                         pad@fp 001F                                           _width 0037  
                                         _putch 1174                                  ?_EUSART1_Write 0001  
                                         pclath 0FFA                                           pclatu 0FFB  
                                         tablat 0FF5                                           ttemp5 0053  
                                         ttemp6 0056                                           ttemp7 005A  
                                         utoa@d 0029                                           utoa@i 002E  
                                         utoa@p 002D                                           utoa@w 002B  
                                         status 0FD8                                           wtemp8 0053  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 11F4  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 11F2                                 _TMR5_Initialize 0F44  
                               __initialization 0EE2                      __end_of_EUSART1_Initialize 0CE6  
                                  __end_of_main 0BFE                                    __end_of_utoa 099E  
                       __end_of_TMR2_Initialize 10B6                        _TMR2_SetInterruptHandler 1188  
                                        ??_main 0037                         __end_of_CCP5_Initialize 1168  
                      _TMR5_SetInterruptHandler 117E                                          ??_utoa 002B  
                                 __activetblptr 0002                           ?_EUSART1_Transmit_ISR 0001  
                    __end_of_read_prec_or_width 0AF4                                          _ADCON0 0FC2  
                                        _ADCON1 0FC1                                          _ADCON2 0FC0  
                                        ?_fputc 0010                                          ?_fputs 0019  
                                        _ADRESH 0FC4                                          _ADRESL 0FC3  
                                        _CCPR5H 0F56                                          _CCPR5L 0F55  
                                        _ANSELA 0F38                                          ?_putch 0001  
                                        _ANSELB 0F39                                          _ANSELC 0F3A  
                                        _T5GCON 0F4D                                          i2l2010 1130  
                                        i2l2020 0DBA                                          i2l2100 076C  
                                        i2l2014 1144                                          i2l2110 077C  
                                        i2l2102 0770                                          i2l2008 11E8  
                                        i2l2120 07CA                                          i2l2112 07BC  
                                        i2l2104 0772                                          i2l2018 0DA0  
                                        i2l2130 07F0                                          i2l2122 07CC  
                                        i2l2114 07C0                                          i2l2106 0774  
                                        i2l2132 0812                                          i2l2124 07CE  
                                        i2l2116 07C4                                          i2l2108 0776  
                                        i2l2126 07D0                                          i2l2118 07C8  
                                        i2l2080 1034                                          i2l2128 07E4  
                                        i2l2240 1008                                          i2l2082 1044  
                                        i2l2234 11DC                                          i2l2330 0E8C  
                                        i2l2090 074A                                          i2l2250 101C  
                                        i2l2242 100A                                          i2l2084 1048  
                                        i2l2076 1022                                          i2l2236 11E2  
                                        i2l2340 09A8                                          i2l2332 0E8E  
                                        i2l2092 074C                                          i2l2252 0F72  
                                        i2l2244 100E                                          i2l2078 1032  
                                        i2l2350 09F6                                          i2l2342 09B6  
                                        i2l2334 0E9E                                          i2l2326 0E6C  
                                        i2l2190 0FB2                                          i2l2270 0F28  
                                        i2l2094 0754                                          i2l2254 0F84  
                                        i2l2246 1012                                          i2l2238 0FF8  
                                        i2l2352 0A10                                          i2l2344 09C2  
                                        i2l2336 0EA2                                          i2l2328 0E7C  
                                        i2l2272 11CE                                          i2l2096 0756  
                                        i2l2088 073A                                          i2l2248 1018  
                                        i2l2280 0EBA                                          i2l2354 0A28  
                                        i2l2346 09DC                                          i2l2338 099E  
                                        i2l2274 11D0                                          i2l2266 0F14  
                                        i2l2098 0758                                          i2l2282 0ED4  
                                        i2l2370 004C                                          i2l2356 0A48  
                                        i2l2348 09EA                                          i2l2188 0FA0  
                                        i2l2268 0F16                                          i2l2284 0ED8  
                                        i2l2276 0EAC                                          i2l2380 00CE  
                                        i2l2372 005A                                          i2l2364 001A  
                                        i2l2278 0EAE                                          i2l2382 00E4  
                                        i2l2374 0086                                          i2l2366 0028  
                                        i2l2384 00F2                                          i2l2376 0094  
                                        i2l2368 0036                                          i2l2378 00C0  
                                        _RCREG1 0FAE                                          _RCSTA1 0FAB  
                                        _OSCCON 0FD3                                          _PLLRDY 7E97  
                                        _SPBRG1 0FAF                                          _TXREG1 0FAD  
                                        _TXSTA1 0FAC                                    vfprintf@cfmt 0036  
                                        ___wmul 104C                                       ??___lwdiv 0012  
                                     ??___lwmod 0012                        ?_EUSART1_SetErrorHandler 000E  
                          read_prec_or_width@ap 0015                                          clear_0 0EE8  
                                        clear_1 0EF4                                          clear_2 0F00  
                                        isa$std 0001                                       ??_blinker 0005  
                                        _printf 10B6                                          pad@buf 0021  
              ??_EUSART1_SetOverrunErrorHandler 0010                 ?_EUSART1_SetOverrunErrorHandler 000E  
                               ??_INT0_CallBack 0001                                 _TMR5_StartTimer 11D6  
                                        fputc@c 0010                                          fputs@c 001C  
                                        fputs@i 001D                                          fputs@s 0019  
                                  __mediumconst 0000                                          tblptrh 0FF7  
                                        tblptrl 0FF6                                          tblptru 0FF8  
                              __end_of_wdtdelay 0DE8                                __end_of_vfprintf 0E2C  
                               ??_EUSART1_Write 000E                                          utoa@fp 0027  
                                 wdtdelay@delay 0001        TMR5_SetInterruptHandler@InterruptHandler 000E  
      INT0_SetInterruptHandler@InterruptHandler 000E        TMR2_SetInterruptHandler@InterruptHandler 000E  
                               _eusart1RxBuffer 0100                                 _eusart1TxBuffer 0140  
                       __end_of_TMR5_Initialize 0F72                ??_INTERRUPT_InterruptManagerHigh 000A  
               ?_INTERRUPT_InterruptManagerHigh 0001                               _SYSTEM_Initialize 1072  
                                    __accesstop 0060                         __end_of__initialization 0F06  
                                     ?_INT0_ISR 0001                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 0001                                 _TMR5_WriteTimer 0FF8  
                 __end_of_EUSART1_RxDataHandler 104C                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0010                                       ?_TMR2_ISR 0001  
                                     ?_TMR5_ISR 0001                                   __end_of_fputc 08E2  
                                 __end_of_fputs 0E6C                           __end_of_TMR5_CallBack 0FA0  
                                 __end_of_putch 117E                                ?_TMR2_Initialize 0001  
                              ?_CCP5_Initialize 0001                          ??_EUSART1_Transmit_ISR 0001  
                       _ADC_GetConversionResult 1144                     __end_of_EUSART1_Receive_ISR 0A4E  
                                       ??_fputc 0014                       __end_of_SYSTEM_Initialize 1098  
                                       ??_fputs 001C                                         ??_putch 000F  
                                 _eusart1RxHead 004E                                   _eusart1TxHead 0051  
                                 _eusart1RxTail 004D                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                   _eusart1TxTail 0050  
             _EUSART1_TxDefaultInterruptHandler 0043                 ??_EUSART1_SetRxInterruptHandler 0010  
                         _INT0_InterruptHandler 0045                                      ??_INT0_ISR 0001  
               __end_of_EUSART1_SetErrorHandler 11CE                                         ?___wmul 000E  
                       __end_of_TMR5_StartTimer 11DC                                      ??_TMR2_ISR 0001  
                                    ??_TMR5_ISR 000A                                         _CCP5CON 0F54  
                                       ?_printf 00D7          __end_of_EUSART1_SetFramingErrorHandler 11C4  
                _EUSART1_SetFramingErrorHandler 11BA                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _OSCCON2 0FD2                                         _OSCTUNE 0F9B  
                                       _SPBRGH1 0FB0                                         i2u95_40 1044  
                                       i2u87_40 1140                                         i2u95_41 1040  
                                       i2u87_41 113A                                         i2u88_40 1142  
                                       i2u96_40 07A4                                         i2u96_41 07A0  
                                       i2u89_40 0DE6                                         i2u97_40 07B8  
                                       i2u89_41 0DE2                                         i2u97_41 07B4  
                                       i2u98_40 07E4                                         i2u98_41 07E0  
                                       i2u99_40 0800                                         i2u99_41 07FA  
                                       i2u99_46 0802                         __end_of_TMR5_WriteTimer 1022  
                              ?_TMR5_Initialize 0001                       ?_INT0_SetInterruptHandler 000E  
                          _ADC_InterruptHandler 00AC                                         __Hparam 0000  
                                       __Lparam 0000                      ??_TMR2_SetInterruptHandler 0010  
                    ??_TMR5_SetInterruptHandler 0010                                       ?_wdtdelay 0001  
                                       ___lwdiv 0BFE                                         ___lwmod 0CE6  
                                     ?_vfprintf 00D3                                    __psmallconst 0600  
                     ??_ADC_GetConversionResult 0003                                         __pcinit 0EE2  
                                       __ramtop 0600                                         _blinker 073A  
                                       __ptext0 0B8A                                         __ptext1 10B6  
                                       __ptext2 0DE8                                         __ptext3 060C  
                                       __ptext4 08E2                                         __ptext5 0AF4  
                                       __ptext6 0E2C                                         __ptext7 0818  
                                       __ptext8 1174                                         __ptext9 0D4A  
                         _OSCILLATOR_Initialize 10D2                                       _T2CONbits 0FBA  
                         read_prec_or_width@fmt 0014                              _EUSART1_Initialize 0C72  
                      ??_PIN_MANAGER_Initialize 000E                                       _T5CONbits 0F4E  
                                       _tdr_adc 0039                   ??_EUSART1_DefaultErrorHandler 0001  
                          end_of_initialization 0F06                             ?_EUSART1_Initialize 0001  
                                  _CTMUCONHbits 0F45                                    _CTMUCONLbits 0F44  
                                       fputc@fp 0012                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 00A8                                         fputs@fp 001A  
                            _read_prec_or_width 0A4E           __end_of_EUSART1_SetRxInterruptHandler 11B0  
                 _EUSART1_SetRxInterruptHandler 11A6                    __end_of_ADC_IsConversionDone 1144  
                             __end_of_vfpfcnvrt 073A                                      blinker@del 0006  
                                       postdec2 0FDD                             ?_read_prec_or_width 0014  
                                       postinc0 0FEE                                         postinc1 0FE6  
                                       postinc2 0FDE                                vfpfcnvrt@convarg 00CE  
                                    ??_wdtdelay 0005                                ?_TMR5_StartTimer 0001  
                                    ??_vfprintf 0036                            ??_EUSART1_Initialize 0010  
                                wdtdelay@dcount 00A0                           _TMR5_InterruptHandler 003D  
                                    fp__blinker 0000                                       _TRISBbits 0F93  
                           _ADC_StartConversion 11E8                         fp__EUSART1_Transmit_ISR 0000  
                          ??_read_prec_or_width 0016                             EUSART1_Write@txData 000E  
                              ?_TMR5_WriteTimer 0001                         TMR5_WriteTimer@timerVal 0001  
                          ?_ADC_StartConversion 0001                    __end_of_INTERRUPT_Initialize 1174  
          __end_of_TMR2_DefaultInterruptHandler 11F0                    _TMR2_DefaultInterruptHandler 11EE  
          __end_of_INT0_DefaultInterruptHandler 11F2                    _INT0_DefaultInterruptHandler 11F0  
                                   vfpfcnvrt@ap 0033                                     vfpfcnvrt@cp 00D2  
                                   vfpfcnvrt@fp 0030                                  __end_of___wmul 1072  
                                _ADC_Initialize 1106                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 10D2                           __end_of_INT0_CallBack 0FCE  
                           start_initialization 0EE2            __end_of_TMR5_DefaultInterruptHandler 11EE  
                  _TMR5_DefaultInterruptHandler 11EC                                     __end_of_pad 0B8A  
 EUSART1_SetRxInterruptHandler@interruptHandler 000E   EUSART1_SetTxInterruptHandler@interruptHandler 000E  
                                   putch@txData 000F                           __end_of_EUSART1_Write 0DA0  
                        fp__EUSART1_Receive_ISR 0000                           ??_ADC_StartConversion 0001  
                                   vfprintf@fmt 00D5                                        ??___wmul 0012  
                         _EUSART1_RxDataHandler 1022                  ?_EUSART1_SetRxInterruptHandler 000E  
                        __end_of_ADC_Initialize 111C                      __end_of_EXT_INT_Initialize 1130  
               fp__TMR2_DefaultInterruptHandler 0000                   ?_TMR2_DefaultInterruptHandler 0001  
               fp__INT0_DefaultInterruptHandler 0000                   ?_INT0_DefaultInterruptHandler 0001  
                                      ??_printf 0037                                  _eusart1RxCount 004C  
                                   __pbssCOMRAM 0037               _EUSART1_RxDefaultInterruptHandler 0041  
              __end_of_INT0_SetInterruptHandler 119C                                   __pcstackBANK0 00CE  
                          _ADC_IsConversionDone 1130                 fp__TMR5_DefaultInterruptHandler 0000  
                 ?_TMR5_DefaultInterruptHandler 0001                 ??_EUSART1_SetTxInterruptHandler 0010  
              ??_EUSART1_SetFramingErrorHandler 0010                 ?_EUSART1_SetFramingErrorHandler 000E  
                              ___lwdiv@dividend 000E                          _PIN_MANAGER_Initialize 0FCE  
                                     __pintcode 0008                               _ADC_SelectChannel 10EE  
                                      ?___lwdiv 000E                                        ?___lwmod 000E  
                               ?_ADC_Initialize 0001                              ?_ADC_SelectChannel 0001  
                                      ?_blinker 0001                                     __smallconst 0600  
                                      _BAUDCON1 0FB8           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 11E2            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 11DC  
                           ??_ADC_SelectChannel 000E                            _EUSART1_ErrorHandler 00A6  
                         ?_ADC_IsConversionDone 0001                         _EUSART1_SetErrorHandler 11C4  
                              ___lwdiv@quotient 0013                            _INTERRUPT_Initialize 1168  
                                      _CTMUCONH 0F45                                        _CTMUICON 0F43  
                                      _INT0_ISR 11CE                                  ___wmul@product 0012  
       EUSART1_SetErrorHandler@interruptHandler 000E                                        _LATCbits 0F8B  
                                      _IPR1bits 0F9F                                        _PIE1bits 0F9D  
                                      _IPR5bits 0F7F                                        _PIE3bits 0FA3  
                                      _PIE5bits 0F7D                       __end_of_ADC_SelectChannel 1106  
                                      i2u103_40 0FB2                                        i2u110_48 0F2E  
                                      i2u111_40 0ED4                                        i2u103_41 0FAE  
                                      i2u110_49 0F42                                        i2u111_41 0ED0  
                                      i2u120_40 0A28                                        i2u120_41 0A24  
                                      i2u104_48 0FB8                                        i2u105_40 1008  
                                      i2u104_49 0FCC                                        i2u105_41 1004  
                                      i2u121_48 0A2E                                        i2u114_40 0E7C  
                                      i2u106_40 0F84                                        i2u130_40 00C0  
                                      i2u122_40 0028                                        i2u121_49 0A44  
                                      i2u114_41 0E78                                        i2u106_41 0F80  
                                      i2u130_41 00BC                                        i2u122_41 0024  
                                      i2u115_40 0E9E                                        i2u131_40 00CE  
                                      i2u123_40 0036                                        i2u115_41 0E9A  
                                      i2u131_41 00CA                                        i2u123_41 0032  
                                      i2u116_40 09B6                                        i2u107_48 0F8A  
                                      i2u132_40 00E4                                        i2u124_40 004C  
                                      i2u116_41 09B2                                        i2u107_49 0F9E  
                                      i2u132_41 00E0                                        i2u124_41 0048  
                                      i2u109_40 0F28                                        i2u133_40 00F2  
                                      i2u125_40 005A                                        i2u109_41 0F24  
                                      i2u133_41 00EE                                        i2u125_41 0056  
                                      i2u118_40 09EA                                        i2u117_48 09C8  
                                      i2u118_41 09E6                                        i2u117_49 09DC  
                                      i2u127_40 0086                                        i2u126_48 0060  
                                      i2u127_41 0082                                        i2u126_49 0074  
                                      i2u119_48 09FC                                        i2u128_40 0094  
                                      i2u119_49 0A10                                        i2u128_41 0090  
                                      i2u129_48 009A                                        i2u129_49 00AE  
                                      _PIR1bits 0F9E                                        _PIR3bits 0FA4  
                                      _PIR5bits 0F7E                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 0FD0                                        _TMR2_ISR 0F14  
                                      _TMR5_ISR 0EAC                                       _vfpfcnvrt 060C  
                                 _TMR5_CallBack 0F72                                      _ADCON0bits 0FC2  
                             ___wmul@multiplier 000E                        ADC_SelectChannel@channel 000F  
                ??_TMR2_DefaultInterruptHandler 0001                  ??_INT0_DefaultInterruptHandler 0001  
                     ?_TMR2_SetInterruptHandler 000E                       ?_TMR5_SetInterruptHandler 000E  
                                   _INTCON2bits 0FF1                           ?_INTERRUPT_Initialize 0001  
                      _INT0_SetInterruptHandler 1192                               ??_TMR2_Initialize 0010  
                ??_TMR5_DefaultInterruptHandler 0001                               ??_CCP5_Initialize 000E  
         __end_of_EUSART1_SetTxInterruptHandler 11A6                   _EUSART1_SetTxInterruptHandler 119C  
                                      __Hrparam 0000                                      vfprintf@ap 00D6  
                                      __Lrparam 0000                                      vfprintf@fp 00D3  
                      ?_ADC_GetConversionResult 0001                         ??_OSCILLATOR_Initialize 000E  
                                ?_TMR5_CallBack 0001                                      ?_vfpfcnvrt 0030  
                     ??_EUSART1_SetErrorHandler 0010                          ??_ADC_IsConversionDone 0001  
           __end_of_EUSART1_DefaultErrorHandler 11E8                     _EUSART1_DefaultErrorHandler 11E2  
                               ___lwdiv@divisor 0010                                 ___lwdiv@counter 0012  
                                      __ptext10 0CE6                                        __ptext11 0BFE  
                                      __ptext20 0FCE                                        __ptext12 0A4E  
                                      __ptext21 10D2                                        __ptext13 104C  
                                      __ptext30 11C4                                        __ptext22 1168  
                                      __ptext14 11D6                                        __ptext31 1158  
                                      __ptext23 111C                                        __ptext15 1072  
                                      __ptext40 0DA0                                        __ptext32 1106  
                                      __ptext24 1192                                        __ptext16 0F44  
                                      __ptext41 11E8                                        __ptext33 10EE  
                                      __ptext25 0C72                                        __ptext17 117E  
                                      __ptext50 099E                                        __ptext42 1130  
                                      __ptext26 119C                                        __ptext18 1098  
                                      __ptext51 11DC                                        __ptext43 1144  
                                      __ptext35 0EAC                                        __ptext27 11A6  
                                      __ptext19 1188                                        __ptext52 11F2  
                                      __ptext44 0F14                                        __ptext36 0FF8  
                                      __ptext28 11B0                                        __ptext53 11E2  
                                      __ptext45 11EE                                        __ptext37 0F72  
                                      __ptext29 11BA                                        __ptext54 1022  
                                      __ptext46 11CE                                        __ptext38 11EC  
                                      __ptext55 0000                                        __ptext47 0FA0  
                                      __ptext39 073A                                        __ptext48 11F0  
                                      __ptext49 0E6C                                      _T5GCONbits 0F4D  
EUSART1_SetOverrunErrorHandler@interruptHandler 000E                                        isa$xinst 0000  
                                      int$flags 0052                                        _printout 004A  
                                      _wdtdelay 0DA0                                        _vfprintf 0DE8  
                                     printf@fmt 00D7                     _EUSART1_FramingErrorHandler 00AA  
                           _EUSART1_Receive_ISR 099E                               ??_TMR5_Initialize 0010  
                                    _INTCONbits 0FF2                          ??_INTERRUPT_Initialize 000E  
                            _EXT_INT_Initialize 111C                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 0001                     __end_of_ADC_StartConversion 11EC  
                              ___lwmod@dividend 000E                         ?_PIN_MANAGER_Initialize 0001  
               __end_of_ADC_GetConversionResult 1158                             ?_EXT_INT_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 11BA                  _EUSART1_SetOverrunErrorHandler 11B0  
                                    _RCSTA1bits 0FAB                    __end_of_EUSART1_Transmit_ISR 0EAC  
                              ??_ADC_Initialize 000E                                 ??_TMR5_CallBack 000A  
                                      printf@ap 00DA  EUSART1_SetFramingErrorHandler@interruptHandler 000E  
                ?_EUSART1_SetTxInterruptHandler 000E                                     ??_vfpfcnvrt 0034  
                            _eusart1RxLastError 004B          __end_of_INTERRUPT_InterruptManagerHigh 010E  
                _INTERRUPT_InterruptManagerHigh 0008                            ??_EXT_INT_Initialize 0010  
                               ___lwmod@divisor 0010                           TMR5_ISR@CountCallBack 003B  
                               ___lwmod@counter 0012                               ??_TMR5_StartTimer 000E  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 0FF8  
                         _TMR2_InterruptHandler 0047                         ??_EUSART1_RxDataHandler 0001  
